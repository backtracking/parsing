//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.4.1.9004
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.4.1.9004 Java6ColorizerLexer.g 2012-08-19 10:00:00

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// CLS compliance checking will not be performed on 'type' because it is not visible from outside this assembly.
#pragma warning disable 3019


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.4.1.9004")]
[System.CLSCompliant(false)]
public partial class Java6ColorizerLexer : Antlr.Runtime.Lexer
{
	public const int EOF=-1;
	public const int ABSTRACT=4;
	public const int AMP=5;
	public const int AMPAMP=6;
	public const int AMPEQ=7;
	public const int ANYCHAR=8;
	public const int ASSERT=9;
	public const int BANG=10;
	public const int BANGEQ=11;
	public const int BAR=12;
	public const int BARBAR=13;
	public const int BAREQ=14;
	public const int BLOCK_COMMENT=15;
	public const int BOOLEAN=16;
	public const int BREAK=17;
	public const int BYTE=18;
	public const int CARET=19;
	public const int CARETEQ=20;
	public const int CASE=21;
	public const int CATCH=22;
	public const int CHAR=23;
	public const int CHARLITERAL=24;
	public const int CLASS=25;
	public const int COLON=26;
	public const int COMMA=27;
	public const int CONST=28;
	public const int CONTINUE=29;
	public const int CONTINUE_COMMENT=30;
	public const int DEFAULT=31;
	public const int DO=32;
	public const int DOT=33;
	public const int DOUBLE=34;
	public const int DOUBLELITERAL=35;
	public const int DoubleSuffix=36;
	public const int ELLIPSIS=37;
	public const int ELSE=38;
	public const int END_BLOCK_COMMENT=39;
	public const int ENUM=40;
	public const int EQ=41;
	public const int EQEQ=42;
	public const int EXTENDS=43;
	public const int EscapeSequence=44;
	public const int Exponent=45;
	public const int FALSE=46;
	public const int FINAL=47;
	public const int FINALLY=48;
	public const int FLOAT=49;
	public const int FLOATLITERAL=50;
	public const int FOR=51;
	public const int FloatSuffix=52;
	public const int GOTO=53;
	public const int GT=54;
	public const int HexDigit=55;
	public const int HexPrefix=56;
	public const int IDENTIFIER=57;
	public const int IF=58;
	public const int IMPLEMENTS=59;
	public const int IMPORT=60;
	public const int INSTANCEOF=61;
	public const int INT=62;
	public const int INTERFACE=63;
	public const int INTLITERAL=64;
	public const int IdentifierPart=65;
	public const int IdentifierStart=66;
	public const int IntegerNumber=67;
	public const int LBRACE=68;
	public const int LBRACKET=69;
	public const int LINE_COMMENT=70;
	public const int LONG=71;
	public const int LONGLITERAL=72;
	public const int LPAREN=73;
	public const int LT=74;
	public const int LongSuffix=75;
	public const int MONKEYS_AT=76;
	public const int NATIVE=77;
	public const int NEW=78;
	public const int NEWLINE=79;
	public const int NULL=80;
	public const int NonIntegerNumber=81;
	public const int PACKAGE=82;
	public const int PERCENT=83;
	public const int PERCENTEQ=84;
	public const int PLUS=85;
	public const int PLUSEQ=86;
	public const int PLUSPLUS=87;
	public const int PRIVATE=88;
	public const int PROTECTED=89;
	public const int PUBLIC=90;
	public const int QUES=91;
	public const int RBRACE=92;
	public const int RBRACKET=93;
	public const int RETURN=94;
	public const int RPAREN=95;
	public const int SEMI=96;
	public const int SHORT=97;
	public const int SLASH=98;
	public const int SLASHEQ=99;
	public const int STAR=100;
	public const int STAREQ=101;
	public const int STATIC=102;
	public const int STRICTFP=103;
	public const int STRINGLITERAL=104;
	public const int SUB=105;
	public const int SUBEQ=106;
	public const int SUBSUB=107;
	public const int SUPER=108;
	public const int SWITCH=109;
	public const int SYNCHRONIZED=110;
	public const int SurrogateIdentifer=111;
	public const int THIS=112;
	public const int THROW=113;
	public const int THROWS=114;
	public const int TILDE=115;
	public const int TRANSIENT=116;
	public const int TRUE=117;
	public const int TRY=118;
	public const int VOID=119;
	public const int VOLATILE=120;
	public const int WHILE=121;
	public const int WS=122;


	private bool _insideBlockComment;

	internal bool InsideBlockComment
	{
		get { return _insideBlockComment; }
		set {_insideBlockComment = value; }
	}

	public override IToken NextToken()
	{
	    IToken token = base.NextToken();
		switch (token.Type)
	    {
	        case CONTINUE_COMMENT:
	            InsideBlockComment = true;
	            token.Type = BLOCK_COMMENT;
	            return token;

	        case END_BLOCK_COMMENT:
	            InsideBlockComment = false;
	            token.Type = BLOCK_COMMENT;
	            return token;
	    }

	    return token;
	}

	/*
	protected override void ParseNextToken()
	{
		//base.ParseNextToken();

	    if (InsideBlockComment)
	    {
	        this.mCONTINUE_COMMENT();
	    }
	    else
	    {
	        base.ParseNextToken();
	    }
	}
	*/



    // delegates
    // delegators

	public Java6ColorizerLexer()
	{
		OnCreated();
	}

	public Java6ColorizerLexer(ICharStream input )
		: this(input, new RecognizerSharedState())
	{
	}

	public Java6ColorizerLexer(ICharStream input, RecognizerSharedState state)
		: base(input, state)
	{

		OnCreated();
	}
	public override string GrammarFileName { get { return "Java6ColorizerLexer.g"; } }


	partial void OnCreated();
	partial void EnterRule(string ruleName, int ruleIndex);
	partial void LeaveRule(string ruleName, int ruleIndex);

	partial void EnterRule_LONGLITERAL();
	partial void LeaveRule_LONGLITERAL();

	// $ANTLR start "LONGLITERAL"
	[GrammarRule("LONGLITERAL")]
	private void mLONGLITERAL()
	{
		EnterRule_LONGLITERAL();
		EnterRule("LONGLITERAL", 1);
		TraceIn("LONGLITERAL", 1);
		try
		{
			int _type = LONGLITERAL;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:154:5: ( IntegerNumber LongSuffix )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:154:9: IntegerNumber LongSuffix
			{
			DebugLocation(154, 9);
			mIntegerNumber(); if (state.failed) return;
			DebugLocation(154, 23);
			mLongSuffix(); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("LONGLITERAL", 1);
			LeaveRule("LONGLITERAL", 1);
			LeaveRule_LONGLITERAL();
		}
	}
	// $ANTLR end "LONGLITERAL"

	partial void EnterRule_INTLITERAL();
	partial void LeaveRule_INTLITERAL();

	// $ANTLR start "INTLITERAL"
	[GrammarRule("INTLITERAL")]
	private void mINTLITERAL()
	{
		EnterRule_INTLITERAL();
		EnterRule("INTLITERAL", 2);
		TraceIn("INTLITERAL", 2);
		try
		{
			int _type = INTLITERAL;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:159:5: ( IntegerNumber )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:159:9: IntegerNumber
			{
			DebugLocation(159, 9);
			mIntegerNumber(); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("INTLITERAL", 2);
			LeaveRule("INTLITERAL", 2);
			LeaveRule_INTLITERAL();
		}
	}
	// $ANTLR end "INTLITERAL"

	partial void EnterRule_IntegerNumber();
	partial void LeaveRule_IntegerNumber();

	// $ANTLR start "IntegerNumber"
	[GrammarRule("IntegerNumber")]
	private void mIntegerNumber()
	{
		EnterRule_IntegerNumber();
		EnterRule("IntegerNumber", 3);
		TraceIn("IntegerNumber", 3);
		try
		{
			// Java6ColorizerLexer.g:164:5: ( '0' | '1' .. '9' ( '0' .. '9' )* | '0' ( '0' .. '7' )+ | HexPrefix ( HexDigit )+ )
			int alt4=4;
			try { DebugEnterDecision(4, false);
			int LA4_1 = input.LA(1);

			if ((LA4_1=='0'))
			{
				switch (input.LA(2))
				{
				case 'X':
				case 'x':
					{
					alt4 = 4;
					}
					break;
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
					{
					alt4 = 3;
					}
					break;
				default:
					alt4=1;
					break;

				}

			}
			else if (((LA4_1>='1' && LA4_1<='9')))
			{
				alt4 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 4, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(4); }
			switch (alt4)
			{
			case 1:
				DebugEnterAlt(1);
				// Java6ColorizerLexer.g:164:9: '0'
				{
				DebugLocation(164, 9);
				Match('0'); if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Java6ColorizerLexer.g:165:9: '1' .. '9' ( '0' .. '9' )*
				{
				DebugLocation(165, 9);
				MatchRange('1','9'); if (state.failed) return;
				DebugLocation(165, 18);
				// Java6ColorizerLexer.g:165:18: ( '0' .. '9' )*
				try { DebugEnterSubRule(1);
				while (true)
				{
					int alt1=2;
					try { DebugEnterDecision(1, false);
					int LA1_1 = input.LA(1);

					if (((LA1_1>='0' && LA1_1<='9')))
					{
						alt1 = 1;
					}


					} finally { DebugExitDecision(1); }
					switch ( alt1 )
					{
					case 1:
						DebugEnterAlt(1);
						// Java6ColorizerLexer.g:
						{
						DebugLocation(165, 18);
						input.Consume();
						state.failed=false;

						}
						break;

					default:
						goto loop1;
					}
				}

				loop1:
					;

				} finally { DebugExitSubRule(1); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Java6ColorizerLexer.g:166:9: '0' ( '0' .. '7' )+
				{
				DebugLocation(166, 9);
				Match('0'); if (state.failed) return;
				DebugLocation(166, 13);
				// Java6ColorizerLexer.g:166:13: ( '0' .. '7' )+
				int cnt2=0;
				try { DebugEnterSubRule(2);
				while (true)
				{
					int alt2=2;
					try { DebugEnterDecision(2, false);
					int LA2_1 = input.LA(1);

					if (((LA2_1>='0' && LA2_1<='7')))
					{
						alt2 = 1;
					}


					} finally { DebugExitDecision(2); }
					switch (alt2)
					{
					case 1:
						DebugEnterAlt(1);
						// Java6ColorizerLexer.g:
						{
						DebugLocation(166, 13);
						input.Consume();
						state.failed=false;

						}
						break;

					default:
						if (cnt2 >= 1)
							goto loop2;

						if (state.backtracking>0) {state.failed=true; return;}
						EarlyExitException eee2 = new EarlyExitException( 2, input );
						DebugRecognitionException(eee2);
						throw eee2;
					}
					cnt2++;
				}
				loop2:
					;

				} finally { DebugExitSubRule(2); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Java6ColorizerLexer.g:167:9: HexPrefix ( HexDigit )+
				{
				DebugLocation(167, 9);
				mHexPrefix(); if (state.failed) return;
				DebugLocation(167, 19);
				// Java6ColorizerLexer.g:167:19: ( HexDigit )+
				int cnt3=0;
				try { DebugEnterSubRule(3);
				while (true)
				{
					int alt3=2;
					try { DebugEnterDecision(3, false);
					int LA3_1 = input.LA(1);

					if (((LA3_1>='0' && LA3_1<='9')||(LA3_1>='A' && LA3_1<='F')||(LA3_1>='a' && LA3_1<='f')))
					{
						alt3 = 1;
					}


					} finally { DebugExitDecision(3); }
					switch (alt3)
					{
					case 1:
						DebugEnterAlt(1);
						// Java6ColorizerLexer.g:
						{
						DebugLocation(167, 19);
						input.Consume();
						state.failed=false;

						}
						break;

					default:
						if (cnt3 >= 1)
							goto loop3;

						if (state.backtracking>0) {state.failed=true; return;}
						EarlyExitException eee3 = new EarlyExitException( 3, input );
						DebugRecognitionException(eee3);
						throw eee3;
					}
					cnt3++;
				}
				loop3:
					;

				} finally { DebugExitSubRule(3); }


				}
				break;

			}
		}
		finally
		{
			TraceOut("IntegerNumber", 3);
			LeaveRule("IntegerNumber", 3);
			LeaveRule_IntegerNumber();
		}
	}
	// $ANTLR end "IntegerNumber"

	partial void EnterRule_HexPrefix();
	partial void LeaveRule_HexPrefix();

	// $ANTLR start "HexPrefix"
	[GrammarRule("HexPrefix")]
	private void mHexPrefix()
	{
		EnterRule_HexPrefix();
		EnterRule("HexPrefix", 4);
		TraceIn("HexPrefix", 4);
		try
		{
			// Java6ColorizerLexer.g:172:5: ( '0x' | '0X' )
			int alt5=2;
			try { DebugEnterDecision(5, false);
			int LA5_1 = input.LA(1);

			if ((LA5_1=='0'))
			{
				int LA5_2 = input.LA(2);

				if ((LA5_2=='x'))
				{
					alt5 = 1;
				}
				else if ((LA5_2=='X'))
				{
					alt5 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 5, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 5, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(5); }
			switch (alt5)
			{
			case 1:
				DebugEnterAlt(1);
				// Java6ColorizerLexer.g:172:9: '0x'
				{
				DebugLocation(172, 9);
				Match("0x"); if (state.failed) return;


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Java6ColorizerLexer.g:172:16: '0X'
				{
				DebugLocation(172, 16);
				Match("0X"); if (state.failed) return;


				}
				break;

			}
		}
		finally
		{
			TraceOut("HexPrefix", 4);
			LeaveRule("HexPrefix", 4);
			LeaveRule_HexPrefix();
		}
	}
	// $ANTLR end "HexPrefix"

	partial void EnterRule_HexDigit();
	partial void LeaveRule_HexDigit();

	// $ANTLR start "HexDigit"
	[GrammarRule("HexDigit")]
	private void mHexDigit()
	{
		EnterRule_HexDigit();
		EnterRule("HexDigit", 5);
		TraceIn("HexDigit", 5);
		try
		{
			// Java6ColorizerLexer.g:177:5: ( ( '0' .. '9' | 'a' .. 'f' | 'A' .. 'F' ) )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:
			{
			DebugLocation(177, 5);
			if ((input.LA(1)>='0' && input.LA(1)<='9')||(input.LA(1)>='A' && input.LA(1)<='F')||(input.LA(1)>='a' && input.LA(1)<='f'))
			{
				input.Consume();
			state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("HexDigit", 5);
			LeaveRule("HexDigit", 5);
			LeaveRule_HexDigit();
		}
	}
	// $ANTLR end "HexDigit"

	partial void EnterRule_LongSuffix();
	partial void LeaveRule_LongSuffix();

	// $ANTLR start "LongSuffix"
	[GrammarRule("LongSuffix")]
	private void mLongSuffix()
	{
		EnterRule_LongSuffix();
		EnterRule("LongSuffix", 6);
		TraceIn("LongSuffix", 6);
		try
		{
			// Java6ColorizerLexer.g:182:5: ( 'l' | 'L' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:
			{
			DebugLocation(182, 5);
			if (input.LA(1)=='L'||input.LA(1)=='l')
			{
				input.Consume();
			state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("LongSuffix", 6);
			LeaveRule("LongSuffix", 6);
			LeaveRule_LongSuffix();
		}
	}
	// $ANTLR end "LongSuffix"

	partial void EnterRule_NonIntegerNumber();
	partial void LeaveRule_NonIntegerNumber();

	// $ANTLR start "NonIntegerNumber"
	[GrammarRule("NonIntegerNumber")]
	private void mNonIntegerNumber()
	{
		EnterRule_NonIntegerNumber();
		EnterRule("NonIntegerNumber", 7);
		TraceIn("NonIntegerNumber", 7);
		try
		{
			// Java6ColorizerLexer.g:188:5: ( ( '0' .. '9' )+ '.' ( '0' .. '9' )* ( Exponent )? | '.' ( '0' .. '9' )+ ( Exponent )? | ( '0' .. '9' )+ Exponent | ( '0' .. '9' )+ | HexPrefix ( HexDigit )* ( () | ( '.' ( HexDigit )* ) ) ( 'p' | 'P' ) ( '+' | '-' )? ( '0' .. '9' )+ )
			int alt18=5;
			try { DebugEnterDecision(18, false);
			try
			{
				alt18 = dfa18.Predict(input);
			}
			catch (NoViableAltException nvae)
			{
				DebugRecognitionException(nvae);
				throw;
			}
			} finally { DebugExitDecision(18); }
			switch (alt18)
			{
			case 1:
				DebugEnterAlt(1);
				// Java6ColorizerLexer.g:188:9: ( '0' .. '9' )+ '.' ( '0' .. '9' )* ( Exponent )?
				{
				DebugLocation(188, 9);
				// Java6ColorizerLexer.g:188:9: ( '0' .. '9' )+
				int cnt6=0;
				try { DebugEnterSubRule(6);
				while (true)
				{
					int alt6=2;
					try { DebugEnterDecision(6, false);
					int LA6_1 = input.LA(1);

					if (((LA6_1>='0' && LA6_1<='9')))
					{
						alt6 = 1;
					}


					} finally { DebugExitDecision(6); }
					switch (alt6)
					{
					case 1:
						DebugEnterAlt(1);
						// Java6ColorizerLexer.g:
						{
						DebugLocation(188, 9);
						input.Consume();
						state.failed=false;

						}
						break;

					default:
						if (cnt6 >= 1)
							goto loop6;

						if (state.backtracking>0) {state.failed=true; return;}
						EarlyExitException eee6 = new EarlyExitException( 6, input );
						DebugRecognitionException(eee6);
						throw eee6;
					}
					cnt6++;
				}
				loop6:
					;

				} finally { DebugExitSubRule(6); }

				DebugLocation(188, 23);
				Match('.'); if (state.failed) return;
				DebugLocation(188, 27);
				// Java6ColorizerLexer.g:188:27: ( '0' .. '9' )*
				try { DebugEnterSubRule(7);
				while (true)
				{
					int alt7=2;
					try { DebugEnterDecision(7, false);
					int LA7_1 = input.LA(1);

					if (((LA7_1>='0' && LA7_1<='9')))
					{
						alt7 = 1;
					}


					} finally { DebugExitDecision(7); }
					switch ( alt7 )
					{
					case 1:
						DebugEnterAlt(1);
						// Java6ColorizerLexer.g:
						{
						DebugLocation(188, 27);
						input.Consume();
						state.failed=false;

						}
						break;

					default:
						goto loop7;
					}
				}

				loop7:
					;

				} finally { DebugExitSubRule(7); }

				DebugLocation(188, 41);
				// Java6ColorizerLexer.g:188:41: ( Exponent )?
				int alt8=2;
				try { DebugEnterSubRule(8);
				try { DebugEnterDecision(8, false);
				int LA8_1 = input.LA(1);

				if ((LA8_1=='E'||LA8_1=='e'))
				{
					alt8 = 1;
				}
				} finally { DebugExitDecision(8); }
				switch (alt8)
				{
				case 1:
					DebugEnterAlt(1);
					// Java6ColorizerLexer.g:188:41: Exponent
					{
					DebugLocation(188, 41);
					mExponent(); if (state.failed) return;

					}
					break;

				}
				} finally { DebugExitSubRule(8); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Java6ColorizerLexer.g:189:9: '.' ( '0' .. '9' )+ ( Exponent )?
				{
				DebugLocation(189, 9);
				Match('.'); if (state.failed) return;
				DebugLocation(189, 13);
				// Java6ColorizerLexer.g:189:13: ( '0' .. '9' )+
				int cnt9=0;
				try { DebugEnterSubRule(9);
				while (true)
				{
					int alt9=2;
					try { DebugEnterDecision(9, false);
					int LA9_1 = input.LA(1);

					if (((LA9_1>='0' && LA9_1<='9')))
					{
						alt9 = 1;
					}


					} finally { DebugExitDecision(9); }
					switch (alt9)
					{
					case 1:
						DebugEnterAlt(1);
						// Java6ColorizerLexer.g:
						{
						DebugLocation(189, 13);
						input.Consume();
						state.failed=false;

						}
						break;

					default:
						if (cnt9 >= 1)
							goto loop9;

						if (state.backtracking>0) {state.failed=true; return;}
						EarlyExitException eee9 = new EarlyExitException( 9, input );
						DebugRecognitionException(eee9);
						throw eee9;
					}
					cnt9++;
				}
				loop9:
					;

				} finally { DebugExitSubRule(9); }

				DebugLocation(189, 29);
				// Java6ColorizerLexer.g:189:29: ( Exponent )?
				int alt10=2;
				try { DebugEnterSubRule(10);
				try { DebugEnterDecision(10, false);
				int LA10_1 = input.LA(1);

				if ((LA10_1=='E'||LA10_1=='e'))
				{
					alt10 = 1;
				}
				} finally { DebugExitDecision(10); }
				switch (alt10)
				{
				case 1:
					DebugEnterAlt(1);
					// Java6ColorizerLexer.g:189:29: Exponent
					{
					DebugLocation(189, 29);
					mExponent(); if (state.failed) return;

					}
					break;

				}
				} finally { DebugExitSubRule(10); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Java6ColorizerLexer.g:190:9: ( '0' .. '9' )+ Exponent
				{
				DebugLocation(190, 9);
				// Java6ColorizerLexer.g:190:9: ( '0' .. '9' )+
				int cnt11=0;
				try { DebugEnterSubRule(11);
				while (true)
				{
					int alt11=2;
					try { DebugEnterDecision(11, false);
					int LA11_1 = input.LA(1);

					if (((LA11_1>='0' && LA11_1<='9')))
					{
						alt11 = 1;
					}


					} finally { DebugExitDecision(11); }
					switch (alt11)
					{
					case 1:
						DebugEnterAlt(1);
						// Java6ColorizerLexer.g:
						{
						DebugLocation(190, 9);
						input.Consume();
						state.failed=false;

						}
						break;

					default:
						if (cnt11 >= 1)
							goto loop11;

						if (state.backtracking>0) {state.failed=true; return;}
						EarlyExitException eee11 = new EarlyExitException( 11, input );
						DebugRecognitionException(eee11);
						throw eee11;
					}
					cnt11++;
				}
				loop11:
					;

				} finally { DebugExitSubRule(11); }

				DebugLocation(190, 23);
				mExponent(); if (state.failed) return;

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Java6ColorizerLexer.g:191:9: ( '0' .. '9' )+
				{
				DebugLocation(191, 9);
				// Java6ColorizerLexer.g:191:9: ( '0' .. '9' )+
				int cnt12=0;
				try { DebugEnterSubRule(12);
				while (true)
				{
					int alt12=2;
					try { DebugEnterDecision(12, false);
					int LA12_1 = input.LA(1);

					if (((LA12_1>='0' && LA12_1<='9')))
					{
						alt12 = 1;
					}


					} finally { DebugExitDecision(12); }
					switch (alt12)
					{
					case 1:
						DebugEnterAlt(1);
						// Java6ColorizerLexer.g:
						{
						DebugLocation(191, 9);
						input.Consume();
						state.failed=false;

						}
						break;

					default:
						if (cnt12 >= 1)
							goto loop12;

						if (state.backtracking>0) {state.failed=true; return;}
						EarlyExitException eee12 = new EarlyExitException( 12, input );
						DebugRecognitionException(eee12);
						throw eee12;
					}
					cnt12++;
				}
				loop12:
					;

				} finally { DebugExitSubRule(12); }


				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Java6ColorizerLexer.g:193:9: HexPrefix ( HexDigit )* ( () | ( '.' ( HexDigit )* ) ) ( 'p' | 'P' ) ( '+' | '-' )? ( '0' .. '9' )+
				{
				DebugLocation(193, 9);
				mHexPrefix(); if (state.failed) return;
				DebugLocation(193, 19);
				// Java6ColorizerLexer.g:193:19: ( HexDigit )*
				try { DebugEnterSubRule(13);
				while (true)
				{
					int alt13=2;
					try { DebugEnterDecision(13, false);
					int LA13_1 = input.LA(1);

					if (((LA13_1>='0' && LA13_1<='9')||(LA13_1>='A' && LA13_1<='F')||(LA13_1>='a' && LA13_1<='f')))
					{
						alt13 = 1;
					}


					} finally { DebugExitDecision(13); }
					switch ( alt13 )
					{
					case 1:
						DebugEnterAlt(1);
						// Java6ColorizerLexer.g:
						{
						DebugLocation(193, 19);
						input.Consume();
						state.failed=false;

						}
						break;

					default:
						goto loop13;
					}
				}

				loop13:
					;

				} finally { DebugExitSubRule(13); }

				DebugLocation(194, 9);
				// Java6ColorizerLexer.g:194:9: ( () | ( '.' ( HexDigit )* ) )
				int alt15=2;
				try { DebugEnterSubRule(15);
				try { DebugEnterDecision(15, false);
				int LA15_1 = input.LA(1);

				if ((LA15_1=='P'||LA15_1=='p'))
				{
					alt15 = 1;
				}
				else if ((LA15_1=='.'))
				{
					alt15 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 15, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(15); }
				switch (alt15)
				{
				case 1:
					DebugEnterAlt(1);
					// Java6ColorizerLexer.g:194:14: ()
					{
					DebugLocation(194, 14);
					// Java6ColorizerLexer.g:194:14: ()
					DebugEnterAlt(1);
					// Java6ColorizerLexer.g:194:15: 
					{
					}


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Java6ColorizerLexer.g:195:14: ( '.' ( HexDigit )* )
					{
					DebugLocation(195, 14);
					// Java6ColorizerLexer.g:195:14: ( '.' ( HexDigit )* )
					DebugEnterAlt(1);
					// Java6ColorizerLexer.g:195:15: '.' ( HexDigit )*
					{
					DebugLocation(195, 15);
					Match('.'); if (state.failed) return;
					DebugLocation(195, 19);
					// Java6ColorizerLexer.g:195:19: ( HexDigit )*
					try { DebugEnterSubRule(14);
					while (true)
					{
						int alt14=2;
						try { DebugEnterDecision(14, false);
						int LA14_1 = input.LA(1);

						if (((LA14_1>='0' && LA14_1<='9')||(LA14_1>='A' && LA14_1<='F')||(LA14_1>='a' && LA14_1<='f')))
						{
							alt14 = 1;
						}


						} finally { DebugExitDecision(14); }
						switch ( alt14 )
						{
						case 1:
							DebugEnterAlt(1);
							// Java6ColorizerLexer.g:
							{
							DebugLocation(195, 19);
							input.Consume();
							state.failed=false;

							}
							break;

						default:
							goto loop14;
						}
					}

					loop14:
						;

					} finally { DebugExitSubRule(14); }


					}


					}
					break;

				}
				} finally { DebugExitSubRule(15); }

				DebugLocation(197, 9);
				input.Consume();
				state.failed=false;
				DebugLocation(198, 9);
				// Java6ColorizerLexer.g:198:9: ( '+' | '-' )?
				int alt16=2;
				try { DebugEnterSubRule(16);
				try { DebugEnterDecision(16, false);
				int LA16_1 = input.LA(1);

				if ((LA16_1=='+'||LA16_1=='-'))
				{
					alt16 = 1;
				}
				} finally { DebugExitDecision(16); }
				switch (alt16)
				{
				case 1:
					DebugEnterAlt(1);
					// Java6ColorizerLexer.g:
					{
					DebugLocation(198, 9);
					input.Consume();
					state.failed=false;

					}
					break;

				}
				} finally { DebugExitSubRule(16); }

				DebugLocation(199, 9);
				// Java6ColorizerLexer.g:199:9: ( '0' .. '9' )+
				int cnt17=0;
				try { DebugEnterSubRule(17);
				while (true)
				{
					int alt17=2;
					try { DebugEnterDecision(17, false);
					int LA17_1 = input.LA(1);

					if (((LA17_1>='0' && LA17_1<='9')))
					{
						alt17 = 1;
					}


					} finally { DebugExitDecision(17); }
					switch (alt17)
					{
					case 1:
						DebugEnterAlt(1);
						// Java6ColorizerLexer.g:
						{
						DebugLocation(199, 9);
						input.Consume();
						state.failed=false;

						}
						break;

					default:
						if (cnt17 >= 1)
							goto loop17;

						if (state.backtracking>0) {state.failed=true; return;}
						EarlyExitException eee17 = new EarlyExitException( 17, input );
						DebugRecognitionException(eee17);
						throw eee17;
					}
					cnt17++;
				}
				loop17:
					;

				} finally { DebugExitSubRule(17); }


				}
				break;

			}
		}
		finally
		{
			TraceOut("NonIntegerNumber", 7);
			LeaveRule("NonIntegerNumber", 7);
			LeaveRule_NonIntegerNumber();
		}
	}
	// $ANTLR end "NonIntegerNumber"

	partial void EnterRule_Exponent();
	partial void LeaveRule_Exponent();

	// $ANTLR start "Exponent"
	[GrammarRule("Exponent")]
	private void mExponent()
	{
		EnterRule_Exponent();
		EnterRule("Exponent", 8);
		TraceIn("Exponent", 8);
		try
		{
			// Java6ColorizerLexer.g:204:5: ( ( 'e' | 'E' ) ( '+' | '-' )? ( '0' .. '9' )+ )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:204:9: ( 'e' | 'E' ) ( '+' | '-' )? ( '0' .. '9' )+
			{
			DebugLocation(204, 9);
			if (input.LA(1)=='E'||input.LA(1)=='e')
			{
				input.Consume();
			state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}

			DebugLocation(204, 23);
			// Java6ColorizerLexer.g:204:23: ( '+' | '-' )?
			int alt19=2;
			try { DebugEnterSubRule(19);
			try { DebugEnterDecision(19, false);
			int LA19_1 = input.LA(1);

			if ((LA19_1=='+'||LA19_1=='-'))
			{
				alt19 = 1;
			}
			} finally { DebugExitDecision(19); }
			switch (alt19)
			{
			case 1:
				DebugEnterAlt(1);
				// Java6ColorizerLexer.g:
				{
				DebugLocation(204, 23);
				input.Consume();
				state.failed=false;

				}
				break;

			}
			} finally { DebugExitSubRule(19); }

			DebugLocation(204, 38);
			// Java6ColorizerLexer.g:204:38: ( '0' .. '9' )+
			int cnt20=0;
			try { DebugEnterSubRule(20);
			while (true)
			{
				int alt20=2;
				try { DebugEnterDecision(20, false);
				int LA20_1 = input.LA(1);

				if (((LA20_1>='0' && LA20_1<='9')))
				{
					alt20 = 1;
				}


				} finally { DebugExitDecision(20); }
				switch (alt20)
				{
				case 1:
					DebugEnterAlt(1);
					// Java6ColorizerLexer.g:
					{
					DebugLocation(204, 38);
					input.Consume();
					state.failed=false;

					}
					break;

				default:
					if (cnt20 >= 1)
						goto loop20;

					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee20 = new EarlyExitException( 20, input );
					DebugRecognitionException(eee20);
					throw eee20;
				}
				cnt20++;
			}
			loop20:
				;

			} finally { DebugExitSubRule(20); }


			}

		}
		finally
		{
			TraceOut("Exponent", 8);
			LeaveRule("Exponent", 8);
			LeaveRule_Exponent();
		}
	}
	// $ANTLR end "Exponent"

	partial void EnterRule_FloatSuffix();
	partial void LeaveRule_FloatSuffix();

	// $ANTLR start "FloatSuffix"
	[GrammarRule("FloatSuffix")]
	private void mFloatSuffix()
	{
		EnterRule_FloatSuffix();
		EnterRule("FloatSuffix", 9);
		TraceIn("FloatSuffix", 9);
		try
		{
			// Java6ColorizerLexer.g:209:5: ( 'f' | 'F' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:
			{
			DebugLocation(209, 5);
			if (input.LA(1)=='F'||input.LA(1)=='f')
			{
				input.Consume();
			state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("FloatSuffix", 9);
			LeaveRule("FloatSuffix", 9);
			LeaveRule_FloatSuffix();
		}
	}
	// $ANTLR end "FloatSuffix"

	partial void EnterRule_DoubleSuffix();
	partial void LeaveRule_DoubleSuffix();

	// $ANTLR start "DoubleSuffix"
	[GrammarRule("DoubleSuffix")]
	private void mDoubleSuffix()
	{
		EnterRule_DoubleSuffix();
		EnterRule("DoubleSuffix", 10);
		TraceIn("DoubleSuffix", 10);
		try
		{
			// Java6ColorizerLexer.g:214:5: ( 'd' | 'D' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:
			{
			DebugLocation(214, 5);
			if (input.LA(1)=='D'||input.LA(1)=='d')
			{
				input.Consume();
			state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("DoubleSuffix", 10);
			LeaveRule("DoubleSuffix", 10);
			LeaveRule_DoubleSuffix();
		}
	}
	// $ANTLR end "DoubleSuffix"

	partial void EnterRule_FLOATLITERAL();
	partial void LeaveRule_FLOATLITERAL();

	// $ANTLR start "FLOATLITERAL"
	[GrammarRule("FLOATLITERAL")]
	private void mFLOATLITERAL()
	{
		EnterRule_FLOATLITERAL();
		EnterRule("FLOATLITERAL", 11);
		TraceIn("FLOATLITERAL", 11);
		try
		{
			int _type = FLOATLITERAL;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:218:5: ( NonIntegerNumber FloatSuffix )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:218:9: NonIntegerNumber FloatSuffix
			{
			DebugLocation(218, 9);
			mNonIntegerNumber(); if (state.failed) return;
			DebugLocation(218, 26);
			mFloatSuffix(); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("FLOATLITERAL", 11);
			LeaveRule("FLOATLITERAL", 11);
			LeaveRule_FLOATLITERAL();
		}
	}
	// $ANTLR end "FLOATLITERAL"

	partial void EnterRule_DOUBLELITERAL();
	partial void LeaveRule_DOUBLELITERAL();

	// $ANTLR start "DOUBLELITERAL"
	[GrammarRule("DOUBLELITERAL")]
	private void mDOUBLELITERAL()
	{
		EnterRule_DOUBLELITERAL();
		EnterRule("DOUBLELITERAL", 12);
		TraceIn("DOUBLELITERAL", 12);
		try
		{
			int _type = DOUBLELITERAL;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:222:5: ( NonIntegerNumber ( DoubleSuffix )? )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:222:9: NonIntegerNumber ( DoubleSuffix )?
			{
			DebugLocation(222, 9);
			mNonIntegerNumber(); if (state.failed) return;
			DebugLocation(222, 26);
			// Java6ColorizerLexer.g:222:26: ( DoubleSuffix )?
			int alt21=2;
			try { DebugEnterSubRule(21);
			try { DebugEnterDecision(21, false);
			int LA21_1 = input.LA(1);

			if ((LA21_1=='D'||LA21_1=='d'))
			{
				alt21 = 1;
			}
			} finally { DebugExitDecision(21); }
			switch (alt21)
			{
			case 1:
				DebugEnterAlt(1);
				// Java6ColorizerLexer.g:
				{
				DebugLocation(222, 26);
				input.Consume();
				state.failed=false;

				}
				break;

			}
			} finally { DebugExitSubRule(21); }


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("DOUBLELITERAL", 12);
			LeaveRule("DOUBLELITERAL", 12);
			LeaveRule_DOUBLELITERAL();
		}
	}
	// $ANTLR end "DOUBLELITERAL"

	partial void EnterRule_CHARLITERAL();
	partial void LeaveRule_CHARLITERAL();

	// $ANTLR start "CHARLITERAL"
	[GrammarRule("CHARLITERAL")]
	private void mCHARLITERAL()
	{
		EnterRule_CHARLITERAL();
		EnterRule("CHARLITERAL", 13);
		TraceIn("CHARLITERAL", 13);
		try
		{
			int _type = CHARLITERAL;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:226:5: ( '\\'' ( EscapeSequence |~ ( '\\'' | '\\\\' | '\\r' | '\\n' ) ) '\\'' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:226:9: '\\'' ( EscapeSequence |~ ( '\\'' | '\\\\' | '\\r' | '\\n' ) ) '\\''
			{
			DebugLocation(226, 9);
			Match('\''); if (state.failed) return;
			DebugLocation(227, 9);
			// Java6ColorizerLexer.g:227:9: ( EscapeSequence |~ ( '\\'' | '\\\\' | '\\r' | '\\n' ) )
			int alt22=2;
			try { DebugEnterSubRule(22);
			try { DebugEnterDecision(22, false);
			int LA22_1 = input.LA(1);

			if ((LA22_1=='\\'))
			{
				alt22 = 1;
			}
			else if (((LA22_1>='\u0000' && LA22_1<='\t')||(LA22_1>='\u000B' && LA22_1<='\f')||(LA22_1>='\u000E' && LA22_1<='&')||(LA22_1>='(' && LA22_1<='[')||(LA22_1>=']' && LA22_1<='\uFFFF')))
			{
				alt22 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 22, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(22); }
			switch (alt22)
			{
			case 1:
				DebugEnterAlt(1);
				// Java6ColorizerLexer.g:227:13: EscapeSequence
				{
				DebugLocation(227, 13);
				mEscapeSequence(); if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Java6ColorizerLexer.g:228:13: ~ ( '\\'' | '\\\\' | '\\r' | '\\n' )
				{
				DebugLocation(228, 13);
				input.Consume();
				state.failed=false;

				}
				break;

			}
			} finally { DebugExitSubRule(22); }

			DebugLocation(230, 9);
			Match('\''); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("CHARLITERAL", 13);
			LeaveRule("CHARLITERAL", 13);
			LeaveRule_CHARLITERAL();
		}
	}
	// $ANTLR end "CHARLITERAL"

	partial void EnterRule_STRINGLITERAL();
	partial void LeaveRule_STRINGLITERAL();

	// $ANTLR start "STRINGLITERAL"
	[GrammarRule("STRINGLITERAL")]
	private void mSTRINGLITERAL()
	{
		EnterRule_STRINGLITERAL();
		EnterRule("STRINGLITERAL", 14);
		TraceIn("STRINGLITERAL", 14);
		try
		{
			int _type = STRINGLITERAL;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:234:5: ( '\"' ( EscapeSequence |~ ( '\\\\' | '\"' | '\\r' | '\\n' ) )* '\"' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:234:9: '\"' ( EscapeSequence |~ ( '\\\\' | '\"' | '\\r' | '\\n' ) )* '\"'
			{
			DebugLocation(234, 9);
			Match('\"'); if (state.failed) return;
			DebugLocation(235, 9);
			// Java6ColorizerLexer.g:235:9: ( EscapeSequence |~ ( '\\\\' | '\"' | '\\r' | '\\n' ) )*
			try { DebugEnterSubRule(23);
			while (true)
			{
				int alt23=3;
				try { DebugEnterDecision(23, false);
				int LA23_1 = input.LA(1);

				if ((LA23_1=='\\'))
				{
					alt23 = 1;
				}
				else if (((LA23_1>='\u0000' && LA23_1<='\t')||(LA23_1>='\u000B' && LA23_1<='\f')||(LA23_1>='\u000E' && LA23_1<='!')||(LA23_1>='#' && LA23_1<='[')||(LA23_1>=']' && LA23_1<='\uFFFF')))
				{
					alt23 = 2;
				}


				} finally { DebugExitDecision(23); }
				switch ( alt23 )
				{
				case 1:
					DebugEnterAlt(1);
					// Java6ColorizerLexer.g:235:13: EscapeSequence
					{
					DebugLocation(235, 13);
					mEscapeSequence(); if (state.failed) return;

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Java6ColorizerLexer.g:236:13: ~ ( '\\\\' | '\"' | '\\r' | '\\n' )
					{
					DebugLocation(236, 13);
					input.Consume();
					state.failed=false;

					}
					break;

				default:
					goto loop23;
				}
			}

			loop23:
				;

			} finally { DebugExitSubRule(23); }

			DebugLocation(238, 9);
			Match('\"'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("STRINGLITERAL", 14);
			LeaveRule("STRINGLITERAL", 14);
			LeaveRule_STRINGLITERAL();
		}
	}
	// $ANTLR end "STRINGLITERAL"

	partial void EnterRule_EscapeSequence();
	partial void LeaveRule_EscapeSequence();

	// $ANTLR start "EscapeSequence"
	[GrammarRule("EscapeSequence")]
	private void mEscapeSequence()
	{
		EnterRule_EscapeSequence();
		EnterRule("EscapeSequence", 15);
		TraceIn("EscapeSequence", 15);
		try
		{
			// Java6ColorizerLexer.g:243:5: ( '\\\\' ( 'b' | 't' | 'n' | 'f' | 'r' | '\\\"' | '\\'' | '\\\\' | ( '0' .. '3' ) ( '0' .. '7' ) ( '0' .. '7' ) | ( '0' .. '7' ) ( '0' .. '7' ) | ( '0' .. '7' ) ) )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:243:9: '\\\\' ( 'b' | 't' | 'n' | 'f' | 'r' | '\\\"' | '\\'' | '\\\\' | ( '0' .. '3' ) ( '0' .. '7' ) ( '0' .. '7' ) | ( '0' .. '7' ) ( '0' .. '7' ) | ( '0' .. '7' ) )
			{
			DebugLocation(243, 9);
			Match('\\'); if (state.failed) return;
			DebugLocation(243, 14);
			// Java6ColorizerLexer.g:243:14: ( 'b' | 't' | 'n' | 'f' | 'r' | '\\\"' | '\\'' | '\\\\' | ( '0' .. '3' ) ( '0' .. '7' ) ( '0' .. '7' ) | ( '0' .. '7' ) ( '0' .. '7' ) | ( '0' .. '7' ) )
			int alt24=11;
			try { DebugEnterSubRule(24);
			try { DebugEnterDecision(24, false);
			switch (input.LA(1))
			{
			case 'b':
				{
				alt24 = 1;
				}
				break;
			case 't':
				{
				alt24 = 2;
				}
				break;
			case 'n':
				{
				alt24 = 3;
				}
				break;
			case 'f':
				{
				alt24 = 4;
				}
				break;
			case 'r':
				{
				alt24 = 5;
				}
				break;
			case '\"':
				{
				alt24 = 6;
				}
				break;
			case '\'':
				{
				alt24 = 7;
				}
				break;
			case '\\':
				{
				alt24 = 8;
				}
				break;
			case '0':
			case '1':
			case '2':
			case '3':
				{
				int LA24_2 = input.LA(2);

				if (((LA24_2>='0' && LA24_2<='7')))
				{
					int LA24_3 = input.LA(3);

					if (((LA24_3>='0' && LA24_3<='7')))
					{
						alt24 = 9;
					}
					else
					{
						alt24 = 10;
					}
				}
				else
				{
					alt24 = 11;
				}
				}
				break;
			case '4':
			case '5':
			case '6':
			case '7':
				{
				int LA24_2 = input.LA(2);

				if (((LA24_2>='0' && LA24_2<='7')))
				{
					alt24 = 10;
				}
				else
				{
					alt24 = 11;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 24, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(24); }
			switch (alt24)
			{
			case 1:
				DebugEnterAlt(1);
				// Java6ColorizerLexer.g:244:18: 'b'
				{
				DebugLocation(244, 18);
				Match('b'); if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Java6ColorizerLexer.g:245:18: 't'
				{
				DebugLocation(245, 18);
				Match('t'); if (state.failed) return;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Java6ColorizerLexer.g:246:18: 'n'
				{
				DebugLocation(246, 18);
				Match('n'); if (state.failed) return;

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Java6ColorizerLexer.g:247:18: 'f'
				{
				DebugLocation(247, 18);
				Match('f'); if (state.failed) return;

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Java6ColorizerLexer.g:248:18: 'r'
				{
				DebugLocation(248, 18);
				Match('r'); if (state.failed) return;

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// Java6ColorizerLexer.g:249:18: '\\\"'
				{
				DebugLocation(249, 18);
				Match('\"'); if (state.failed) return;

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// Java6ColorizerLexer.g:250:18: '\\''
				{
				DebugLocation(250, 18);
				Match('\''); if (state.failed) return;

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// Java6ColorizerLexer.g:251:18: '\\\\'
				{
				DebugLocation(251, 18);
				Match('\\'); if (state.failed) return;

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// Java6ColorizerLexer.g:253:18: ( '0' .. '3' ) ( '0' .. '7' ) ( '0' .. '7' )
				{
				DebugLocation(253, 18);
				input.Consume();
				state.failed=false;
				DebugLocation(253, 29);
				input.Consume();
				state.failed=false;
				DebugLocation(253, 40);
				input.Consume();
				state.failed=false;

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// Java6ColorizerLexer.g:255:18: ( '0' .. '7' ) ( '0' .. '7' )
				{
				DebugLocation(255, 18);
				input.Consume();
				state.failed=false;
				DebugLocation(255, 29);
				input.Consume();
				state.failed=false;

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// Java6ColorizerLexer.g:257:18: ( '0' .. '7' )
				{
				DebugLocation(257, 18);
				input.Consume();
				state.failed=false;

				}
				break;

			}
			} finally { DebugExitSubRule(24); }


			}

		}
		finally
		{
			TraceOut("EscapeSequence", 15);
			LeaveRule("EscapeSequence", 15);
			LeaveRule_EscapeSequence();
		}
	}
	// $ANTLR end "EscapeSequence"

	partial void EnterRule_NEWLINE();
	partial void LeaveRule_NEWLINE();

	// $ANTLR start "NEWLINE"
	[GrammarRule("NEWLINE")]
	private void mNEWLINE()
	{
		EnterRule_NEWLINE();
		EnterRule("NEWLINE", 16);
		TraceIn("NEWLINE", 16);
		try
		{
			int _type = NEWLINE;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:262:5: ( ( '\\r\\n' | '\\r' | '\\n' ) )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:262:8: ( '\\r\\n' | '\\r' | '\\n' )
			{
			DebugLocation(262, 8);
			// Java6ColorizerLexer.g:262:8: ( '\\r\\n' | '\\r' | '\\n' )
			int alt25=3;
			try { DebugEnterSubRule(25);
			try { DebugEnterDecision(25, false);
			int LA25_1 = input.LA(1);

			if ((LA25_1=='\r'))
			{
				int LA25_2 = input.LA(2);

				if ((LA25_2=='\n'))
				{
					alt25 = 1;
				}
				else
				{
					alt25 = 2;
				}
			}
			else if ((LA25_1=='\n'))
			{
				alt25 = 3;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 25, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(25); }
			switch (alt25)
			{
			case 1:
				DebugEnterAlt(1);
				// Java6ColorizerLexer.g:262:9: '\\r\\n'
				{
				DebugLocation(262, 9);
				Match("\r\n"); if (state.failed) return;


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Java6ColorizerLexer.g:262:16: '\\r'
				{
				DebugLocation(262, 16);
				Match('\r'); if (state.failed) return;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Java6ColorizerLexer.g:262:21: '\\n'
				{
				DebugLocation(262, 21);
				Match('\n'); if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(25); }

			DebugLocation(263, 5);
			if (state.backtracking == 0)
			{

				            _channel = Hidden;
				    
			}

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("NEWLINE", 16);
			LeaveRule("NEWLINE", 16);
			LeaveRule_NEWLINE();
		}
	}
	// $ANTLR end "NEWLINE"

	partial void EnterRule_WS();
	partial void LeaveRule_WS();

	// $ANTLR start "WS"
	[GrammarRule("WS")]
	private void mWS()
	{
		EnterRule_WS();
		EnterRule("WS", 17);
		TraceIn("WS", 17);
		try
		{
			int _type = WS;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:269:5: ( ( ' ' | '\\t' | '\\u000C' ) )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:269:9: ( ' ' | '\\t' | '\\u000C' )
			{
			DebugLocation(269, 9);
			if (input.LA(1)=='\t'||input.LA(1)=='\f'||input.LA(1)==' ')
			{
				input.Consume();
			state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}

			DebugLocation(274, 13);
			if (state.backtracking == 0)
			{

				                _channel = Hidden;
				            
			}

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("WS", 17);
			LeaveRule("WS", 17);
			LeaveRule_WS();
		}
	}
	// $ANTLR end "WS"

	partial void EnterRule_END_BLOCK_COMMENT();
	partial void LeaveRule_END_BLOCK_COMMENT();

	// $ANTLR start "END_BLOCK_COMMENT"
	[GrammarRule("END_BLOCK_COMMENT")]
	private void mEND_BLOCK_COMMENT()
	{
		EnterRule_END_BLOCK_COMMENT();
		EnterRule("END_BLOCK_COMMENT", 18);
		TraceIn("END_BLOCK_COMMENT", 18);
		try
		{
			int _type = END_BLOCK_COMMENT;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:281:2: ( '*/' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:281:6: '*/'
			{
			DebugLocation(281, 6);
			Match("*/"); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("END_BLOCK_COMMENT", 18);
			LeaveRule("END_BLOCK_COMMENT", 18);
			LeaveRule_END_BLOCK_COMMENT();
		}
	}
	// $ANTLR end "END_BLOCK_COMMENT"

	partial void EnterRule_BLOCK_COMMENT();
	partial void LeaveRule_BLOCK_COMMENT();

	// $ANTLR start "BLOCK_COMMENT"
	[GrammarRule("BLOCK_COMMENT")]
	private void mBLOCK_COMMENT()
	{
		EnterRule_BLOCK_COMMENT();
		EnterRule("BLOCK_COMMENT", 19);
		TraceIn("BLOCK_COMMENT", 19);
		try
		{
			int _type = BLOCK_COMMENT;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:285:5: ( '/*' (~ ( '*' ) | ( '*' ~ '/' )=> '*' )* ( '*/' )? )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:285:9: '/*' (~ ( '*' ) | ( '*' ~ '/' )=> '*' )* ( '*/' )?
			{
			DebugLocation(285, 9);
			Match("/*"); if (state.failed) return;

			DebugLocation(286, 9);
			if (state.backtracking == 0)
			{

				            InsideBlockComment = true;
				            _channel = Hidden;
				        
			}
			DebugLocation(290, 9);
			// Java6ColorizerLexer.g:290:9: (~ ( '*' ) | ( '*' ~ '/' )=> '*' )*
			try { DebugEnterSubRule(26);
			while (true)
			{
				int alt26=3;
				try { DebugEnterDecision(26, false);
				int LA26_1 = input.LA(1);

				if ((LA26_1=='*'))
				{
					int LA26_2 = input.LA(2);

					if ((LA26_2=='/'))
					{
						int LA26_3 = input.LA(3);

						if ((EvaluatePredicate(synpred1_Java6ColorizerLexer_fragment)))
						{
							alt26 = 2;
						}


					}
					else if ((LA26_2=='*') && (EvaluatePredicate(synpred1_Java6ColorizerLexer_fragment)))
					{
						alt26 = 2;
					}
					else if (((LA26_2>='\u0000' && LA26_2<=')')||(LA26_2>='+' && LA26_2<='.')||(LA26_2>='0' && LA26_2<='\uFFFF')) && (EvaluatePredicate(synpred1_Java6ColorizerLexer_fragment)))
					{
						alt26 = 2;
					}

					else
					{
						alt26 = 2;
					}


				}
				else if (((LA26_1>='\u0000' && LA26_1<=')')||(LA26_1>='+' && LA26_1<='\uFFFF')))
				{
					alt26 = 1;
				}


				} finally { DebugExitDecision(26); }
				switch ( alt26 )
				{
				case 1:
					DebugEnterAlt(1);
					// Java6ColorizerLexer.g:290:13: ~ ( '*' )
					{
					DebugLocation(290, 13);
					input.Consume();
					state.failed=false;

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Java6ColorizerLexer.g:291:17: ( '*' ~ '/' )=> '*'
					{
					DebugLocation(291, 31);
					Match('*'); if (state.failed) return;

					}
					break;

				default:
					goto loop26;
				}
			}

			loop26:
				;

			} finally { DebugExitSubRule(26); }

			DebugLocation(293, 9);
			// Java6ColorizerLexer.g:293:9: ( '*/' )?
			int alt27=2;
			try { DebugEnterSubRule(27);
			try { DebugEnterDecision(27, false);
			int LA27_1 = input.LA(1);

			if ((LA27_1=='*'))
			{
				alt27 = 1;
			}
			} finally { DebugExitDecision(27); }
			switch (alt27)
			{
			case 1:
				DebugEnterAlt(1);
				// Java6ColorizerLexer.g:293:10: '*/'
				{
				DebugLocation(293, 10);
				Match("*/"); if (state.failed) return;

				DebugLocation(293, 15);
				if (state.backtracking == 0)
				{
					InsideBlockComment = false;
				}

				}
				break;

			}
			} finally { DebugExitSubRule(27); }


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("BLOCK_COMMENT", 19);
			LeaveRule("BLOCK_COMMENT", 19);
			LeaveRule_BLOCK_COMMENT();
		}
	}
	// $ANTLR end "BLOCK_COMMENT"

	partial void EnterRule_LINE_COMMENT();
	partial void LeaveRule_LINE_COMMENT();

	// $ANTLR start "LINE_COMMENT"
	[GrammarRule("LINE_COMMENT")]
	private void mLINE_COMMENT()
	{
		EnterRule_LINE_COMMENT();
		EnterRule("LINE_COMMENT", 20);
		TraceIn("LINE_COMMENT", 20);
		try
		{
			int _type = LINE_COMMENT;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:297:5: ( '//' (~ ( '\\n' | '\\r' ) )* ( '\\r\\n' | '\\r' | '\\n' ) | '//' (~ ( '\\n' | '\\r' ) )* )
			int alt31=2;
			try { DebugEnterDecision(31, false);
			try
			{
				alt31 = dfa31.Predict(input);
			}
			catch (NoViableAltException nvae)
			{
				DebugRecognitionException(nvae);
				throw;
			}
			} finally { DebugExitDecision(31); }
			switch (alt31)
			{
			case 1:
				DebugEnterAlt(1);
				// Java6ColorizerLexer.g:297:9: '//' (~ ( '\\n' | '\\r' ) )* ( '\\r\\n' | '\\r' | '\\n' )
				{
				DebugLocation(297, 9);
				Match("//"); if (state.failed) return;

				DebugLocation(297, 14);
				// Java6ColorizerLexer.g:297:14: (~ ( '\\n' | '\\r' ) )*
				try { DebugEnterSubRule(28);
				while (true)
				{
					int alt28=2;
					try { DebugEnterDecision(28, false);
					int LA28_1 = input.LA(1);

					if (((LA28_1>='\u0000' && LA28_1<='\t')||(LA28_1>='\u000B' && LA28_1<='\f')||(LA28_1>='\u000E' && LA28_1<='\uFFFF')))
					{
						alt28 = 1;
					}


					} finally { DebugExitDecision(28); }
					switch ( alt28 )
					{
					case 1:
						DebugEnterAlt(1);
						// Java6ColorizerLexer.g:
						{
						DebugLocation(297, 14);
						input.Consume();
						state.failed=false;

						}
						break;

					default:
						goto loop28;
					}
				}

				loop28:
					;

				} finally { DebugExitSubRule(28); }

				DebugLocation(297, 29);
				// Java6ColorizerLexer.g:297:29: ( '\\r\\n' | '\\r' | '\\n' )
				int alt29=3;
				try { DebugEnterSubRule(29);
				try { DebugEnterDecision(29, false);
				int LA29_1 = input.LA(1);

				if ((LA29_1=='\r'))
				{
					int LA29_2 = input.LA(2);

					if ((LA29_2=='\n'))
					{
						alt29 = 1;
					}
					else
					{
						alt29 = 2;
					}
				}
				else if ((LA29_1=='\n'))
				{
					alt29 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 29, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(29); }
				switch (alt29)
				{
				case 1:
					DebugEnterAlt(1);
					// Java6ColorizerLexer.g:297:30: '\\r\\n'
					{
					DebugLocation(297, 30);
					Match("\r\n"); if (state.failed) return;


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// Java6ColorizerLexer.g:297:39: '\\r'
					{
					DebugLocation(297, 39);
					Match('\r'); if (state.failed) return;

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// Java6ColorizerLexer.g:297:46: '\\n'
					{
					DebugLocation(297, 46);
					Match('\n'); if (state.failed) return;

					}
					break;

				}
				} finally { DebugExitSubRule(29); }

				DebugLocation(298, 13);
				if (state.backtracking == 0)
				{

					                 _channel = Hidden;
					            
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Java6ColorizerLexer.g:301:9: '//' (~ ( '\\n' | '\\r' ) )*
				{
				DebugLocation(301, 9);
				Match("//"); if (state.failed) return;

				DebugLocation(301, 14);
				// Java6ColorizerLexer.g:301:14: (~ ( '\\n' | '\\r' ) )*
				try { DebugEnterSubRule(30);
				while (true)
				{
					int alt30=2;
					try { DebugEnterDecision(30, false);
					int LA30_1 = input.LA(1);

					if (((LA30_1>='\u0000' && LA30_1<='\t')||(LA30_1>='\u000B' && LA30_1<='\f')||(LA30_1>='\u000E' && LA30_1<='\uFFFF')))
					{
						alt30 = 1;
					}


					} finally { DebugExitDecision(30); }
					switch ( alt30 )
					{
					case 1:
						DebugEnterAlt(1);
						// Java6ColorizerLexer.g:
						{
						DebugLocation(301, 14);
						input.Consume();
						state.failed=false;

						}
						break;

					default:
						goto loop30;
					}
				}

				loop30:
					;

				} finally { DebugExitSubRule(30); }

				DebugLocation(302, 13);
				if (state.backtracking == 0)
				{

					                 _channel = Hidden;
					            
				}

				}
				break;

			}
			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("LINE_COMMENT", 20);
			LeaveRule("LINE_COMMENT", 20);
			LeaveRule_LINE_COMMENT();
		}
	}
	// $ANTLR end "LINE_COMMENT"

	partial void EnterRule_LPAREN();
	partial void LeaveRule_LPAREN();

	// $ANTLR start "LPAREN"
	[GrammarRule("LPAREN")]
	private void mLPAREN()
	{
		EnterRule_LPAREN();
		EnterRule("LPAREN", 21);
		TraceIn("LPAREN", 21);
		try
		{
			int _type = LPAREN;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:308:5: ( '(' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:308:9: '('
			{
			DebugLocation(308, 9);
			Match('('); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("LPAREN", 21);
			LeaveRule("LPAREN", 21);
			LeaveRule_LPAREN();
		}
	}
	// $ANTLR end "LPAREN"

	partial void EnterRule_RPAREN();
	partial void LeaveRule_RPAREN();

	// $ANTLR start "RPAREN"
	[GrammarRule("RPAREN")]
	private void mRPAREN()
	{
		EnterRule_RPAREN();
		EnterRule("RPAREN", 22);
		TraceIn("RPAREN", 22);
		try
		{
			int _type = RPAREN;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:312:5: ( ')' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:312:9: ')'
			{
			DebugLocation(312, 9);
			Match(')'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("RPAREN", 22);
			LeaveRule("RPAREN", 22);
			LeaveRule_RPAREN();
		}
	}
	// $ANTLR end "RPAREN"

	partial void EnterRule_LBRACE();
	partial void LeaveRule_LBRACE();

	// $ANTLR start "LBRACE"
	[GrammarRule("LBRACE")]
	private void mLBRACE()
	{
		EnterRule_LBRACE();
		EnterRule("LBRACE", 23);
		TraceIn("LBRACE", 23);
		try
		{
			int _type = LBRACE;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:316:5: ( '{' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:316:9: '{'
			{
			DebugLocation(316, 9);
			Match('{'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("LBRACE", 23);
			LeaveRule("LBRACE", 23);
			LeaveRule_LBRACE();
		}
	}
	// $ANTLR end "LBRACE"

	partial void EnterRule_RBRACE();
	partial void LeaveRule_RBRACE();

	// $ANTLR start "RBRACE"
	[GrammarRule("RBRACE")]
	private void mRBRACE()
	{
		EnterRule_RBRACE();
		EnterRule("RBRACE", 24);
		TraceIn("RBRACE", 24);
		try
		{
			int _type = RBRACE;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:320:5: ( '}' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:320:9: '}'
			{
			DebugLocation(320, 9);
			Match('}'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("RBRACE", 24);
			LeaveRule("RBRACE", 24);
			LeaveRule_RBRACE();
		}
	}
	// $ANTLR end "RBRACE"

	partial void EnterRule_LBRACKET();
	partial void LeaveRule_LBRACKET();

	// $ANTLR start "LBRACKET"
	[GrammarRule("LBRACKET")]
	private void mLBRACKET()
	{
		EnterRule_LBRACKET();
		EnterRule("LBRACKET", 25);
		TraceIn("LBRACKET", 25);
		try
		{
			int _type = LBRACKET;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:324:5: ( '[' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:324:9: '['
			{
			DebugLocation(324, 9);
			Match('['); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("LBRACKET", 25);
			LeaveRule("LBRACKET", 25);
			LeaveRule_LBRACKET();
		}
	}
	// $ANTLR end "LBRACKET"

	partial void EnterRule_RBRACKET();
	partial void LeaveRule_RBRACKET();

	// $ANTLR start "RBRACKET"
	[GrammarRule("RBRACKET")]
	private void mRBRACKET()
	{
		EnterRule_RBRACKET();
		EnterRule("RBRACKET", 26);
		TraceIn("RBRACKET", 26);
		try
		{
			int _type = RBRACKET;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:328:5: ( ']' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:328:9: ']'
			{
			DebugLocation(328, 9);
			Match(']'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("RBRACKET", 26);
			LeaveRule("RBRACKET", 26);
			LeaveRule_RBRACKET();
		}
	}
	// $ANTLR end "RBRACKET"

	partial void EnterRule_SEMI();
	partial void LeaveRule_SEMI();

	// $ANTLR start "SEMI"
	[GrammarRule("SEMI")]
	private void mSEMI()
	{
		EnterRule_SEMI();
		EnterRule("SEMI", 27);
		TraceIn("SEMI", 27);
		try
		{
			int _type = SEMI;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:332:5: ( ';' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:332:9: ';'
			{
			DebugLocation(332, 9);
			Match(';'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("SEMI", 27);
			LeaveRule("SEMI", 27);
			LeaveRule_SEMI();
		}
	}
	// $ANTLR end "SEMI"

	partial void EnterRule_COMMA();
	partial void LeaveRule_COMMA();

	// $ANTLR start "COMMA"
	[GrammarRule("COMMA")]
	private void mCOMMA()
	{
		EnterRule_COMMA();
		EnterRule("COMMA", 28);
		TraceIn("COMMA", 28);
		try
		{
			int _type = COMMA;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:336:5: ( ',' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:336:9: ','
			{
			DebugLocation(336, 9);
			Match(','); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("COMMA", 28);
			LeaveRule("COMMA", 28);
			LeaveRule_COMMA();
		}
	}
	// $ANTLR end "COMMA"

	partial void EnterRule_DOT();
	partial void LeaveRule_DOT();

	// $ANTLR start "DOT"
	[GrammarRule("DOT")]
	private void mDOT()
	{
		EnterRule_DOT();
		EnterRule("DOT", 29);
		TraceIn("DOT", 29);
		try
		{
			int _type = DOT;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:340:5: ( '.' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:340:9: '.'
			{
			DebugLocation(340, 9);
			Match('.'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("DOT", 29);
			LeaveRule("DOT", 29);
			LeaveRule_DOT();
		}
	}
	// $ANTLR end "DOT"

	partial void EnterRule_ELLIPSIS();
	partial void LeaveRule_ELLIPSIS();

	// $ANTLR start "ELLIPSIS"
	[GrammarRule("ELLIPSIS")]
	private void mELLIPSIS()
	{
		EnterRule_ELLIPSIS();
		EnterRule("ELLIPSIS", 30);
		TraceIn("ELLIPSIS", 30);
		try
		{
			int _type = ELLIPSIS;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:344:5: ( '...' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:344:9: '...'
			{
			DebugLocation(344, 9);
			Match("..."); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("ELLIPSIS", 30);
			LeaveRule("ELLIPSIS", 30);
			LeaveRule_ELLIPSIS();
		}
	}
	// $ANTLR end "ELLIPSIS"

	partial void EnterRule_EQ();
	partial void LeaveRule_EQ();

	// $ANTLR start "EQ"
	[GrammarRule("EQ")]
	private void mEQ()
	{
		EnterRule_EQ();
		EnterRule("EQ", 31);
		TraceIn("EQ", 31);
		try
		{
			int _type = EQ;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:348:5: ( '=' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:348:9: '='
			{
			DebugLocation(348, 9);
			Match('='); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("EQ", 31);
			LeaveRule("EQ", 31);
			LeaveRule_EQ();
		}
	}
	// $ANTLR end "EQ"

	partial void EnterRule_BANG();
	partial void LeaveRule_BANG();

	// $ANTLR start "BANG"
	[GrammarRule("BANG")]
	private void mBANG()
	{
		EnterRule_BANG();
		EnterRule("BANG", 32);
		TraceIn("BANG", 32);
		try
		{
			int _type = BANG;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:352:5: ( '!' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:352:9: '!'
			{
			DebugLocation(352, 9);
			Match('!'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("BANG", 32);
			LeaveRule("BANG", 32);
			LeaveRule_BANG();
		}
	}
	// $ANTLR end "BANG"

	partial void EnterRule_TILDE();
	partial void LeaveRule_TILDE();

	// $ANTLR start "TILDE"
	[GrammarRule("TILDE")]
	private void mTILDE()
	{
		EnterRule_TILDE();
		EnterRule("TILDE", 33);
		TraceIn("TILDE", 33);
		try
		{
			int _type = TILDE;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:356:5: ( '~' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:356:9: '~'
			{
			DebugLocation(356, 9);
			Match('~'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("TILDE", 33);
			LeaveRule("TILDE", 33);
			LeaveRule_TILDE();
		}
	}
	// $ANTLR end "TILDE"

	partial void EnterRule_QUES();
	partial void LeaveRule_QUES();

	// $ANTLR start "QUES"
	[GrammarRule("QUES")]
	private void mQUES()
	{
		EnterRule_QUES();
		EnterRule("QUES", 34);
		TraceIn("QUES", 34);
		try
		{
			int _type = QUES;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:360:5: ( '?' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:360:9: '?'
			{
			DebugLocation(360, 9);
			Match('?'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("QUES", 34);
			LeaveRule("QUES", 34);
			LeaveRule_QUES();
		}
	}
	// $ANTLR end "QUES"

	partial void EnterRule_COLON();
	partial void LeaveRule_COLON();

	// $ANTLR start "COLON"
	[GrammarRule("COLON")]
	private void mCOLON()
	{
		EnterRule_COLON();
		EnterRule("COLON", 35);
		TraceIn("COLON", 35);
		try
		{
			int _type = COLON;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:364:5: ( ':' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:364:9: ':'
			{
			DebugLocation(364, 9);
			Match(':'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("COLON", 35);
			LeaveRule("COLON", 35);
			LeaveRule_COLON();
		}
	}
	// $ANTLR end "COLON"

	partial void EnterRule_EQEQ();
	partial void LeaveRule_EQEQ();

	// $ANTLR start "EQEQ"
	[GrammarRule("EQEQ")]
	private void mEQEQ()
	{
		EnterRule_EQEQ();
		EnterRule("EQEQ", 36);
		TraceIn("EQEQ", 36);
		try
		{
			int _type = EQEQ;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:368:5: ( '==' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:368:9: '=='
			{
			DebugLocation(368, 9);
			Match("=="); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("EQEQ", 36);
			LeaveRule("EQEQ", 36);
			LeaveRule_EQEQ();
		}
	}
	// $ANTLR end "EQEQ"

	partial void EnterRule_AMPAMP();
	partial void LeaveRule_AMPAMP();

	// $ANTLR start "AMPAMP"
	[GrammarRule("AMPAMP")]
	private void mAMPAMP()
	{
		EnterRule_AMPAMP();
		EnterRule("AMPAMP", 37);
		TraceIn("AMPAMP", 37);
		try
		{
			int _type = AMPAMP;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:372:5: ( '&&' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:372:9: '&&'
			{
			DebugLocation(372, 9);
			Match("&&"); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("AMPAMP", 37);
			LeaveRule("AMPAMP", 37);
			LeaveRule_AMPAMP();
		}
	}
	// $ANTLR end "AMPAMP"

	partial void EnterRule_BARBAR();
	partial void LeaveRule_BARBAR();

	// $ANTLR start "BARBAR"
	[GrammarRule("BARBAR")]
	private void mBARBAR()
	{
		EnterRule_BARBAR();
		EnterRule("BARBAR", 38);
		TraceIn("BARBAR", 38);
		try
		{
			int _type = BARBAR;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:376:5: ( '||' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:376:9: '||'
			{
			DebugLocation(376, 9);
			Match("||"); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("BARBAR", 38);
			LeaveRule("BARBAR", 38);
			LeaveRule_BARBAR();
		}
	}
	// $ANTLR end "BARBAR"

	partial void EnterRule_PLUSPLUS();
	partial void LeaveRule_PLUSPLUS();

	// $ANTLR start "PLUSPLUS"
	[GrammarRule("PLUSPLUS")]
	private void mPLUSPLUS()
	{
		EnterRule_PLUSPLUS();
		EnterRule("PLUSPLUS", 39);
		TraceIn("PLUSPLUS", 39);
		try
		{
			int _type = PLUSPLUS;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:380:5: ( '++' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:380:9: '++'
			{
			DebugLocation(380, 9);
			Match("++"); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("PLUSPLUS", 39);
			LeaveRule("PLUSPLUS", 39);
			LeaveRule_PLUSPLUS();
		}
	}
	// $ANTLR end "PLUSPLUS"

	partial void EnterRule_SUBSUB();
	partial void LeaveRule_SUBSUB();

	// $ANTLR start "SUBSUB"
	[GrammarRule("SUBSUB")]
	private void mSUBSUB()
	{
		EnterRule_SUBSUB();
		EnterRule("SUBSUB", 40);
		TraceIn("SUBSUB", 40);
		try
		{
			int _type = SUBSUB;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:384:5: ( '--' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:384:9: '--'
			{
			DebugLocation(384, 9);
			Match("--"); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("SUBSUB", 40);
			LeaveRule("SUBSUB", 40);
			LeaveRule_SUBSUB();
		}
	}
	// $ANTLR end "SUBSUB"

	partial void EnterRule_PLUS();
	partial void LeaveRule_PLUS();

	// $ANTLR start "PLUS"
	[GrammarRule("PLUS")]
	private void mPLUS()
	{
		EnterRule_PLUS();
		EnterRule("PLUS", 41);
		TraceIn("PLUS", 41);
		try
		{
			int _type = PLUS;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:388:5: ( '+' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:388:9: '+'
			{
			DebugLocation(388, 9);
			Match('+'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("PLUS", 41);
			LeaveRule("PLUS", 41);
			LeaveRule_PLUS();
		}
	}
	// $ANTLR end "PLUS"

	partial void EnterRule_SUB();
	partial void LeaveRule_SUB();

	// $ANTLR start "SUB"
	[GrammarRule("SUB")]
	private void mSUB()
	{
		EnterRule_SUB();
		EnterRule("SUB", 42);
		TraceIn("SUB", 42);
		try
		{
			int _type = SUB;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:392:5: ( '-' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:392:9: '-'
			{
			DebugLocation(392, 9);
			Match('-'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("SUB", 42);
			LeaveRule("SUB", 42);
			LeaveRule_SUB();
		}
	}
	// $ANTLR end "SUB"

	partial void EnterRule_STAR();
	partial void LeaveRule_STAR();

	// $ANTLR start "STAR"
	[GrammarRule("STAR")]
	private void mSTAR()
	{
		EnterRule_STAR();
		EnterRule("STAR", 43);
		TraceIn("STAR", 43);
		try
		{
			int _type = STAR;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:396:5: ( '*' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:396:9: '*'
			{
			DebugLocation(396, 9);
			Match('*'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("STAR", 43);
			LeaveRule("STAR", 43);
			LeaveRule_STAR();
		}
	}
	// $ANTLR end "STAR"

	partial void EnterRule_SLASH();
	partial void LeaveRule_SLASH();

	// $ANTLR start "SLASH"
	[GrammarRule("SLASH")]
	private void mSLASH()
	{
		EnterRule_SLASH();
		EnterRule("SLASH", 44);
		TraceIn("SLASH", 44);
		try
		{
			int _type = SLASH;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:400:5: ( '/' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:400:9: '/'
			{
			DebugLocation(400, 9);
			Match('/'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("SLASH", 44);
			LeaveRule("SLASH", 44);
			LeaveRule_SLASH();
		}
	}
	// $ANTLR end "SLASH"

	partial void EnterRule_AMP();
	partial void LeaveRule_AMP();

	// $ANTLR start "AMP"
	[GrammarRule("AMP")]
	private void mAMP()
	{
		EnterRule_AMP();
		EnterRule("AMP", 45);
		TraceIn("AMP", 45);
		try
		{
			int _type = AMP;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:404:5: ( '&' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:404:9: '&'
			{
			DebugLocation(404, 9);
			Match('&'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("AMP", 45);
			LeaveRule("AMP", 45);
			LeaveRule_AMP();
		}
	}
	// $ANTLR end "AMP"

	partial void EnterRule_BAR();
	partial void LeaveRule_BAR();

	// $ANTLR start "BAR"
	[GrammarRule("BAR")]
	private void mBAR()
	{
		EnterRule_BAR();
		EnterRule("BAR", 46);
		TraceIn("BAR", 46);
		try
		{
			int _type = BAR;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:408:5: ( '|' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:408:9: '|'
			{
			DebugLocation(408, 9);
			Match('|'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("BAR", 46);
			LeaveRule("BAR", 46);
			LeaveRule_BAR();
		}
	}
	// $ANTLR end "BAR"

	partial void EnterRule_CARET();
	partial void LeaveRule_CARET();

	// $ANTLR start "CARET"
	[GrammarRule("CARET")]
	private void mCARET()
	{
		EnterRule_CARET();
		EnterRule("CARET", 47);
		TraceIn("CARET", 47);
		try
		{
			int _type = CARET;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:412:5: ( '^' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:412:9: '^'
			{
			DebugLocation(412, 9);
			Match('^'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("CARET", 47);
			LeaveRule("CARET", 47);
			LeaveRule_CARET();
		}
	}
	// $ANTLR end "CARET"

	partial void EnterRule_PERCENT();
	partial void LeaveRule_PERCENT();

	// $ANTLR start "PERCENT"
	[GrammarRule("PERCENT")]
	private void mPERCENT()
	{
		EnterRule_PERCENT();
		EnterRule("PERCENT", 48);
		TraceIn("PERCENT", 48);
		try
		{
			int _type = PERCENT;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:416:5: ( '%' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:416:9: '%'
			{
			DebugLocation(416, 9);
			Match('%'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("PERCENT", 48);
			LeaveRule("PERCENT", 48);
			LeaveRule_PERCENT();
		}
	}
	// $ANTLR end "PERCENT"

	partial void EnterRule_PLUSEQ();
	partial void LeaveRule_PLUSEQ();

	// $ANTLR start "PLUSEQ"
	[GrammarRule("PLUSEQ")]
	private void mPLUSEQ()
	{
		EnterRule_PLUSEQ();
		EnterRule("PLUSEQ", 49);
		TraceIn("PLUSEQ", 49);
		try
		{
			int _type = PLUSEQ;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:420:5: ( '+=' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:420:9: '+='
			{
			DebugLocation(420, 9);
			Match("+="); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("PLUSEQ", 49);
			LeaveRule("PLUSEQ", 49);
			LeaveRule_PLUSEQ();
		}
	}
	// $ANTLR end "PLUSEQ"

	partial void EnterRule_SUBEQ();
	partial void LeaveRule_SUBEQ();

	// $ANTLR start "SUBEQ"
	[GrammarRule("SUBEQ")]
	private void mSUBEQ()
	{
		EnterRule_SUBEQ();
		EnterRule("SUBEQ", 50);
		TraceIn("SUBEQ", 50);
		try
		{
			int _type = SUBEQ;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:424:5: ( '-=' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:424:9: '-='
			{
			DebugLocation(424, 9);
			Match("-="); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("SUBEQ", 50);
			LeaveRule("SUBEQ", 50);
			LeaveRule_SUBEQ();
		}
	}
	// $ANTLR end "SUBEQ"

	partial void EnterRule_STAREQ();
	partial void LeaveRule_STAREQ();

	// $ANTLR start "STAREQ"
	[GrammarRule("STAREQ")]
	private void mSTAREQ()
	{
		EnterRule_STAREQ();
		EnterRule("STAREQ", 51);
		TraceIn("STAREQ", 51);
		try
		{
			int _type = STAREQ;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:428:5: ( '*=' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:428:9: '*='
			{
			DebugLocation(428, 9);
			Match("*="); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("STAREQ", 51);
			LeaveRule("STAREQ", 51);
			LeaveRule_STAREQ();
		}
	}
	// $ANTLR end "STAREQ"

	partial void EnterRule_SLASHEQ();
	partial void LeaveRule_SLASHEQ();

	// $ANTLR start "SLASHEQ"
	[GrammarRule("SLASHEQ")]
	private void mSLASHEQ()
	{
		EnterRule_SLASHEQ();
		EnterRule("SLASHEQ", 52);
		TraceIn("SLASHEQ", 52);
		try
		{
			int _type = SLASHEQ;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:432:5: ( '/=' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:432:9: '/='
			{
			DebugLocation(432, 9);
			Match("/="); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("SLASHEQ", 52);
			LeaveRule("SLASHEQ", 52);
			LeaveRule_SLASHEQ();
		}
	}
	// $ANTLR end "SLASHEQ"

	partial void EnterRule_AMPEQ();
	partial void LeaveRule_AMPEQ();

	// $ANTLR start "AMPEQ"
	[GrammarRule("AMPEQ")]
	private void mAMPEQ()
	{
		EnterRule_AMPEQ();
		EnterRule("AMPEQ", 53);
		TraceIn("AMPEQ", 53);
		try
		{
			int _type = AMPEQ;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:436:5: ( '&=' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:436:9: '&='
			{
			DebugLocation(436, 9);
			Match("&="); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("AMPEQ", 53);
			LeaveRule("AMPEQ", 53);
			LeaveRule_AMPEQ();
		}
	}
	// $ANTLR end "AMPEQ"

	partial void EnterRule_BAREQ();
	partial void LeaveRule_BAREQ();

	// $ANTLR start "BAREQ"
	[GrammarRule("BAREQ")]
	private void mBAREQ()
	{
		EnterRule_BAREQ();
		EnterRule("BAREQ", 54);
		TraceIn("BAREQ", 54);
		try
		{
			int _type = BAREQ;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:440:5: ( '|=' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:440:9: '|='
			{
			DebugLocation(440, 9);
			Match("|="); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("BAREQ", 54);
			LeaveRule("BAREQ", 54);
			LeaveRule_BAREQ();
		}
	}
	// $ANTLR end "BAREQ"

	partial void EnterRule_CARETEQ();
	partial void LeaveRule_CARETEQ();

	// $ANTLR start "CARETEQ"
	[GrammarRule("CARETEQ")]
	private void mCARETEQ()
	{
		EnterRule_CARETEQ();
		EnterRule("CARETEQ", 55);
		TraceIn("CARETEQ", 55);
		try
		{
			int _type = CARETEQ;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:444:5: ( '^=' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:444:9: '^='
			{
			DebugLocation(444, 9);
			Match("^="); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("CARETEQ", 55);
			LeaveRule("CARETEQ", 55);
			LeaveRule_CARETEQ();
		}
	}
	// $ANTLR end "CARETEQ"

	partial void EnterRule_PERCENTEQ();
	partial void LeaveRule_PERCENTEQ();

	// $ANTLR start "PERCENTEQ"
	[GrammarRule("PERCENTEQ")]
	private void mPERCENTEQ()
	{
		EnterRule_PERCENTEQ();
		EnterRule("PERCENTEQ", 56);
		TraceIn("PERCENTEQ", 56);
		try
		{
			int _type = PERCENTEQ;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:448:5: ( '%=' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:448:9: '%='
			{
			DebugLocation(448, 9);
			Match("%="); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("PERCENTEQ", 56);
			LeaveRule("PERCENTEQ", 56);
			LeaveRule_PERCENTEQ();
		}
	}
	// $ANTLR end "PERCENTEQ"

	partial void EnterRule_MONKEYS_AT();
	partial void LeaveRule_MONKEYS_AT();

	// $ANTLR start "MONKEYS_AT"
	[GrammarRule("MONKEYS_AT")]
	private void mMONKEYS_AT()
	{
		EnterRule_MONKEYS_AT();
		EnterRule("MONKEYS_AT", 57);
		TraceIn("MONKEYS_AT", 57);
		try
		{
			int _type = MONKEYS_AT;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:452:5: ( '@' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:452:9: '@'
			{
			DebugLocation(452, 9);
			Match('@'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("MONKEYS_AT", 57);
			LeaveRule("MONKEYS_AT", 57);
			LeaveRule_MONKEYS_AT();
		}
	}
	// $ANTLR end "MONKEYS_AT"

	partial void EnterRule_BANGEQ();
	partial void LeaveRule_BANGEQ();

	// $ANTLR start "BANGEQ"
	[GrammarRule("BANGEQ")]
	private void mBANGEQ()
	{
		EnterRule_BANGEQ();
		EnterRule("BANGEQ", 58);
		TraceIn("BANGEQ", 58);
		try
		{
			int _type = BANGEQ;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:456:5: ( '!=' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:456:9: '!='
			{
			DebugLocation(456, 9);
			Match("!="); if (state.failed) return;


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("BANGEQ", 58);
			LeaveRule("BANGEQ", 58);
			LeaveRule_BANGEQ();
		}
	}
	// $ANTLR end "BANGEQ"

	partial void EnterRule_GT();
	partial void LeaveRule_GT();

	// $ANTLR start "GT"
	[GrammarRule("GT")]
	private void mGT()
	{
		EnterRule_GT();
		EnterRule("GT", 59);
		TraceIn("GT", 59);
		try
		{
			int _type = GT;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:460:5: ( '>' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:460:9: '>'
			{
			DebugLocation(460, 9);
			Match('>'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("GT", 59);
			LeaveRule("GT", 59);
			LeaveRule_GT();
		}
	}
	// $ANTLR end "GT"

	partial void EnterRule_LT();
	partial void LeaveRule_LT();

	// $ANTLR start "LT"
	[GrammarRule("LT")]
	private void mLT()
	{
		EnterRule_LT();
		EnterRule("LT", 60);
		TraceIn("LT", 60);
		try
		{
			int _type = LT;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:464:5: ( '<' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:464:9: '<'
			{
			DebugLocation(464, 9);
			Match('<'); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("LT", 60);
			LeaveRule("LT", 60);
			LeaveRule_LT();
		}
	}
	// $ANTLR end "LT"

	partial void EnterRule_IDENTIFIER();
	partial void LeaveRule_IDENTIFIER();

	// $ANTLR start "IDENTIFIER"
	[GrammarRule("IDENTIFIER")]
	private void mIDENTIFIER()
	{
		EnterRule_IDENTIFIER();
		EnterRule("IDENTIFIER", 61);
		TraceIn("IDENTIFIER", 61);
		try
		{
			int _type = IDENTIFIER;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:468:5: ( IdentifierStart ( IdentifierPart )* )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:468:9: IdentifierStart ( IdentifierPart )*
			{
			DebugLocation(468, 9);
			mIdentifierStart(); if (state.failed) return;
			DebugLocation(468, 25);
			// Java6ColorizerLexer.g:468:25: ( IdentifierPart )*
			try { DebugEnterSubRule(32);
			while (true)
			{
				int alt32=2;
				try { DebugEnterDecision(32, false);
				int LA32_1 = input.LA(1);

				if (((LA32_1>='\u0000' && LA32_1<='\b')||(LA32_1>='\u000E' && LA32_1<='\u001B')||LA32_1=='$'||(LA32_1>='0' && LA32_1<='9')||(LA32_1>='A' && LA32_1<='Z')||LA32_1=='_'||(LA32_1>='a' && LA32_1<='z')||(LA32_1>='\u007F' && LA32_1<='\u009F')||(LA32_1>='\u00A2' && LA32_1<='\u00A5')||LA32_1=='\u00AA'||LA32_1=='\u00AD'||LA32_1=='\u00B5'||LA32_1=='\u00BA'||(LA32_1>='\u00C0' && LA32_1<='\u00D6')||(LA32_1>='\u00D8' && LA32_1<='\u00F6')||(LA32_1>='\u00F8' && LA32_1<='\u0236')||(LA32_1>='\u0250' && LA32_1<='\u02C1')||(LA32_1>='\u02C6' && LA32_1<='\u02D1')||(LA32_1>='\u02E0' && LA32_1<='\u02E4')||LA32_1=='\u02EE'||(LA32_1>='\u0300' && LA32_1<='\u0357')||(LA32_1>='\u035D' && LA32_1<='\u036F')||LA32_1=='\u037A'||LA32_1=='\u0386'||(LA32_1>='\u0388' && LA32_1<='\u038A')||LA32_1=='\u038C'||(LA32_1>='\u038E' && LA32_1<='\u03A1')||(LA32_1>='\u03A3' && LA32_1<='\u03CE')||(LA32_1>='\u03D0' && LA32_1<='\u03F5')||(LA32_1>='\u03F7' && LA32_1<='\u03FB')||(LA32_1>='\u0400' && LA32_1<='\u0481')||(LA32_1>='\u0483' && LA32_1<='\u0486')||(LA32_1>='\u048A' && LA32_1<='\u04CE')||(LA32_1>='\u04D0' && LA32_1<='\u04F5')||(LA32_1>='\u04F8' && LA32_1<='\u04F9')||(LA32_1>='\u0500' && LA32_1<='\u050F')||(LA32_1>='\u0531' && LA32_1<='\u0556')||LA32_1=='\u0559'||(LA32_1>='\u0561' && LA32_1<='\u0587')||(LA32_1>='\u0591' && LA32_1<='\u05A1')||(LA32_1>='\u05A3' && LA32_1<='\u05B9')||(LA32_1>='\u05BB' && LA32_1<='\u05BD')||LA32_1=='\u05BF'||(LA32_1>='\u05C1' && LA32_1<='\u05C2')||LA32_1=='\u05C4'||(LA32_1>='\u05D0' && LA32_1<='\u05EA')||(LA32_1>='\u05F0' && LA32_1<='\u05F2')||(LA32_1>='\u0600' && LA32_1<='\u0603')||(LA32_1>='\u0610' && LA32_1<='\u0615')||(LA32_1>='\u0621' && LA32_1<='\u063A')||(LA32_1>='\u0640' && LA32_1<='\u0658')||(LA32_1>='\u0660' && LA32_1<='\u0669')||(LA32_1>='\u066E' && LA32_1<='\u06D3')||(LA32_1>='\u06D5' && LA32_1<='\u06DD')||(LA32_1>='\u06DF' && LA32_1<='\u06E8')||(LA32_1>='\u06EA' && LA32_1<='\u06FC')||LA32_1=='\u06FF'||(LA32_1>='\u070F' && LA32_1<='\u074A')||(LA32_1>='\u074D' && LA32_1<='\u074F')||(LA32_1>='\u0780' && LA32_1<='\u07B1')||(LA32_1>='\u0901' && LA32_1<='\u0939')||(LA32_1>='\u093C' && LA32_1<='\u094D')||(LA32_1>='\u0950' && LA32_1<='\u0954')||(LA32_1>='\u0958' && LA32_1<='\u0963')||(LA32_1>='\u0966' && LA32_1<='\u096F')||(LA32_1>='\u0981' && LA32_1<='\u0983')||(LA32_1>='\u0985' && LA32_1<='\u098C')||(LA32_1>='\u098F' && LA32_1<='\u0990')||(LA32_1>='\u0993' && LA32_1<='\u09A8')||(LA32_1>='\u09AA' && LA32_1<='\u09B0')||LA32_1=='\u09B2'||(LA32_1>='\u09B6' && LA32_1<='\u09B9')||(LA32_1>='\u09BC' && LA32_1<='\u09C4')||(LA32_1>='\u09C7' && LA32_1<='\u09C8')||(LA32_1>='\u09CB' && LA32_1<='\u09CD')||LA32_1=='\u09D7'||(LA32_1>='\u09DC' && LA32_1<='\u09DD')||(LA32_1>='\u09DF' && LA32_1<='\u09E3')||(LA32_1>='\u09E6' && LA32_1<='\u09F3')||(LA32_1>='\u0A01' && LA32_1<='\u0A03')||(LA32_1>='\u0A05' && LA32_1<='\u0A0A')||(LA32_1>='\u0A0F' && LA32_1<='\u0A10')||(LA32_1>='\u0A13' && LA32_1<='\u0A28')||(LA32_1>='\u0A2A' && LA32_1<='\u0A30')||(LA32_1>='\u0A32' && LA32_1<='\u0A33')||(LA32_1>='\u0A35' && LA32_1<='\u0A36')||(LA32_1>='\u0A38' && LA32_1<='\u0A39')||LA32_1=='\u0A3C'||(LA32_1>='\u0A3E' && LA32_1<='\u0A42')||(LA32_1>='\u0A47' && LA32_1<='\u0A48')||(LA32_1>='\u0A4B' && LA32_1<='\u0A4D')||(LA32_1>='\u0A59' && LA32_1<='\u0A5C')||LA32_1=='\u0A5E'||(LA32_1>='\u0A66' && LA32_1<='\u0A74')||(LA32_1>='\u0A81' && LA32_1<='\u0A83')||(LA32_1>='\u0A85' && LA32_1<='\u0A8D')||(LA32_1>='\u0A8F' && LA32_1<='\u0A91')||(LA32_1>='\u0A93' && LA32_1<='\u0AA8')||(LA32_1>='\u0AAA' && LA32_1<='\u0AB0')||(LA32_1>='\u0AB2' && LA32_1<='\u0AB3')||(LA32_1>='\u0AB5' && LA32_1<='\u0AB9')||(LA32_1>='\u0ABC' && LA32_1<='\u0AC5')||(LA32_1>='\u0AC7' && LA32_1<='\u0AC9')||(LA32_1>='\u0ACB' && LA32_1<='\u0ACD')||LA32_1=='\u0AD0'||(LA32_1>='\u0AE0' && LA32_1<='\u0AE3')||(LA32_1>='\u0AE6' && LA32_1<='\u0AEF')||LA32_1=='\u0AF1'||(LA32_1>='\u0B01' && LA32_1<='\u0B03')||(LA32_1>='\u0B05' && LA32_1<='\u0B0C')||(LA32_1>='\u0B0F' && LA32_1<='\u0B10')||(LA32_1>='\u0B13' && LA32_1<='\u0B28')||(LA32_1>='\u0B2A' && LA32_1<='\u0B30')||(LA32_1>='\u0B32' && LA32_1<='\u0B33')||(LA32_1>='\u0B35' && LA32_1<='\u0B39')||(LA32_1>='\u0B3C' && LA32_1<='\u0B43')||(LA32_1>='\u0B47' && LA32_1<='\u0B48')||(LA32_1>='\u0B4B' && LA32_1<='\u0B4D')||(LA32_1>='\u0B56' && LA32_1<='\u0B57')||(LA32_1>='\u0B5C' && LA32_1<='\u0B5D')||(LA32_1>='\u0B5F' && LA32_1<='\u0B61')||(LA32_1>='\u0B66' && LA32_1<='\u0B6F')||LA32_1=='\u0B71'||(LA32_1>='\u0B82' && LA32_1<='\u0B83')||(LA32_1>='\u0B85' && LA32_1<='\u0B8A')||(LA32_1>='\u0B8E' && LA32_1<='\u0B90')||(LA32_1>='\u0B92' && LA32_1<='\u0B95')||(LA32_1>='\u0B99' && LA32_1<='\u0B9A')||LA32_1=='\u0B9C'||(LA32_1>='\u0B9E' && LA32_1<='\u0B9F')||(LA32_1>='\u0BA3' && LA32_1<='\u0BA4')||(LA32_1>='\u0BA8' && LA32_1<='\u0BAA')||(LA32_1>='\u0BAE' && LA32_1<='\u0BB5')||(LA32_1>='\u0BB7' && LA32_1<='\u0BB9')||(LA32_1>='\u0BBE' && LA32_1<='\u0BC2')||(LA32_1>='\u0BC6' && LA32_1<='\u0BC8')||(LA32_1>='\u0BCA' && LA32_1<='\u0BCD')||LA32_1=='\u0BD7'||(LA32_1>='\u0BE7' && LA32_1<='\u0BEF')||LA32_1=='\u0BF9'||(LA32_1>='\u0C01' && LA32_1<='\u0C03')||(LA32_1>='\u0C05' && LA32_1<='\u0C0C')||(LA32_1>='\u0C0E' && LA32_1<='\u0C10')||(LA32_1>='\u0C12' && LA32_1<='\u0C28')||(LA32_1>='\u0C2A' && LA32_1<='\u0C33')||(LA32_1>='\u0C35' && LA32_1<='\u0C39')||(LA32_1>='\u0C3E' && LA32_1<='\u0C44')||(LA32_1>='\u0C46' && LA32_1<='\u0C48')||(LA32_1>='\u0C4A' && LA32_1<='\u0C4D')||(LA32_1>='\u0C55' && LA32_1<='\u0C56')||(LA32_1>='\u0C60' && LA32_1<='\u0C61')||(LA32_1>='\u0C66' && LA32_1<='\u0C6F')||(LA32_1>='\u0C82' && LA32_1<='\u0C83')||(LA32_1>='\u0C85' && LA32_1<='\u0C8C')||(LA32_1>='\u0C8E' && LA32_1<='\u0C90')||(LA32_1>='\u0C92' && LA32_1<='\u0CA8')||(LA32_1>='\u0CAA' && LA32_1<='\u0CB3')||(LA32_1>='\u0CB5' && LA32_1<='\u0CB9')||(LA32_1>='\u0CBC' && LA32_1<='\u0CC4')||(LA32_1>='\u0CC6' && LA32_1<='\u0CC8')||(LA32_1>='\u0CCA' && LA32_1<='\u0CCD')||(LA32_1>='\u0CD5' && LA32_1<='\u0CD6')||LA32_1=='\u0CDE'||(LA32_1>='\u0CE0' && LA32_1<='\u0CE1')||(LA32_1>='\u0CE6' && LA32_1<='\u0CEF')||(LA32_1>='\u0D02' && LA32_1<='\u0D03')||(LA32_1>='\u0D05' && LA32_1<='\u0D0C')||(LA32_1>='\u0D0E' && LA32_1<='\u0D10')||(LA32_1>='\u0D12' && LA32_1<='\u0D28')||(LA32_1>='\u0D2A' && LA32_1<='\u0D39')||(LA32_1>='\u0D3E' && LA32_1<='\u0D43')||(LA32_1>='\u0D46' && LA32_1<='\u0D48')||(LA32_1>='\u0D4A' && LA32_1<='\u0D4D')||LA32_1=='\u0D57'||(LA32_1>='\u0D60' && LA32_1<='\u0D61')||(LA32_1>='\u0D66' && LA32_1<='\u0D6F')||(LA32_1>='\u0D82' && LA32_1<='\u0D83')||(LA32_1>='\u0D85' && LA32_1<='\u0D96')||(LA32_1>='\u0D9A' && LA32_1<='\u0DB1')||(LA32_1>='\u0DB3' && LA32_1<='\u0DBB')||LA32_1=='\u0DBD'||(LA32_1>='\u0DC0' && LA32_1<='\u0DC6')||LA32_1=='\u0DCA'||(LA32_1>='\u0DCF' && LA32_1<='\u0DD4')||LA32_1=='\u0DD6'||(LA32_1>='\u0DD8' && LA32_1<='\u0DDF')||(LA32_1>='\u0DF2' && LA32_1<='\u0DF3')||(LA32_1>='\u0E01' && LA32_1<='\u0E3A')||(LA32_1>='\u0E3F' && LA32_1<='\u0E4E')||(LA32_1>='\u0E50' && LA32_1<='\u0E59')||(LA32_1>='\u0E81' && LA32_1<='\u0E82')||LA32_1=='\u0E84'||(LA32_1>='\u0E87' && LA32_1<='\u0E88')||LA32_1=='\u0E8A'||LA32_1=='\u0E8D'||(LA32_1>='\u0E94' && LA32_1<='\u0E97')||(LA32_1>='\u0E99' && LA32_1<='\u0E9F')||(LA32_1>='\u0EA1' && LA32_1<='\u0EA3')||LA32_1=='\u0EA5'||LA32_1=='\u0EA7'||(LA32_1>='\u0EAA' && LA32_1<='\u0EAB')||(LA32_1>='\u0EAD' && LA32_1<='\u0EB9')||(LA32_1>='\u0EBB' && LA32_1<='\u0EBD')||(LA32_1>='\u0EC0' && LA32_1<='\u0EC4')||LA32_1=='\u0EC6'||(LA32_1>='\u0EC8' && LA32_1<='\u0ECD')||(LA32_1>='\u0ED0' && LA32_1<='\u0ED9')||(LA32_1>='\u0EDC' && LA32_1<='\u0EDD')||LA32_1=='\u0F00'||(LA32_1>='\u0F18' && LA32_1<='\u0F19')||(LA32_1>='\u0F20' && LA32_1<='\u0F29')||LA32_1=='\u0F35'||LA32_1=='\u0F37'||LA32_1=='\u0F39'||(LA32_1>='\u0F3E' && LA32_1<='\u0F47')||(LA32_1>='\u0F49' && LA32_1<='\u0F6A')||(LA32_1>='\u0F71' && LA32_1<='\u0F84')||(LA32_1>='\u0F86' && LA32_1<='\u0F8B')||(LA32_1>='\u0F90' && LA32_1<='\u0F97')||(LA32_1>='\u0F99' && LA32_1<='\u0FBC')||LA32_1=='\u0FC6'||(LA32_1>='\u1000' && LA32_1<='\u1021')||(LA32_1>='\u1023' && LA32_1<='\u1027')||(LA32_1>='\u1029' && LA32_1<='\u102A')||(LA32_1>='\u102C' && LA32_1<='\u1032')||(LA32_1>='\u1036' && LA32_1<='\u1039')||(LA32_1>='\u1040' && LA32_1<='\u1049')||(LA32_1>='\u1050' && LA32_1<='\u1059')||(LA32_1>='\u10A0' && LA32_1<='\u10C5')||(LA32_1>='\u10D0' && LA32_1<='\u10F8')||(LA32_1>='\u1100' && LA32_1<='\u1159')||(LA32_1>='\u115F' && LA32_1<='\u11A2')||(LA32_1>='\u11A8' && LA32_1<='\u11F9')||(LA32_1>='\u1200' && LA32_1<='\u1206')||(LA32_1>='\u1208' && LA32_1<='\u1246')||LA32_1=='\u1248'||(LA32_1>='\u124A' && LA32_1<='\u124D')||(LA32_1>='\u1250' && LA32_1<='\u1256')||LA32_1=='\u1258'||(LA32_1>='\u125A' && LA32_1<='\u125D')||(LA32_1>='\u1260' && LA32_1<='\u1286')||LA32_1=='\u1288'||(LA32_1>='\u128A' && LA32_1<='\u128D')||(LA32_1>='\u1290' && LA32_1<='\u12AE')||LA32_1=='\u12B0'||(LA32_1>='\u12B2' && LA32_1<='\u12B5')||(LA32_1>='\u12B8' && LA32_1<='\u12BE')||LA32_1=='\u12C0'||(LA32_1>='\u12C2' && LA32_1<='\u12C5')||(LA32_1>='\u12C8' && LA32_1<='\u12CE')||(LA32_1>='\u12D0' && LA32_1<='\u12D6')||(LA32_1>='\u12D8' && LA32_1<='\u12EE')||(LA32_1>='\u12F0' && LA32_1<='\u130E')||LA32_1=='\u1310'||(LA32_1>='\u1312' && LA32_1<='\u1315')||(LA32_1>='\u1318' && LA32_1<='\u131E')||(LA32_1>='\u1320' && LA32_1<='\u1346')||(LA32_1>='\u1348' && LA32_1<='\u135A')||(LA32_1>='\u1369' && LA32_1<='\u1371')||(LA32_1>='\u13A0' && LA32_1<='\u13F4')||(LA32_1>='\u1401' && LA32_1<='\u166C')||(LA32_1>='\u166F' && LA32_1<='\u1676')||(LA32_1>='\u1681' && LA32_1<='\u169A')||(LA32_1>='\u16A0' && LA32_1<='\u16EA')||(LA32_1>='\u16EE' && LA32_1<='\u16F0')||(LA32_1>='\u1700' && LA32_1<='\u170C')||(LA32_1>='\u170E' && LA32_1<='\u1714')||(LA32_1>='\u1720' && LA32_1<='\u1734')||(LA32_1>='\u1740' && LA32_1<='\u1753')||(LA32_1>='\u1760' && LA32_1<='\u176C')||(LA32_1>='\u176E' && LA32_1<='\u1770')||(LA32_1>='\u1772' && LA32_1<='\u1773')||(LA32_1>='\u1780' && LA32_1<='\u17D3')||LA32_1=='\u17D7'||(LA32_1>='\u17DB' && LA32_1<='\u17DD')||(LA32_1>='\u17E0' && LA32_1<='\u17E9')||(LA32_1>='\u180B' && LA32_1<='\u180D')||(LA32_1>='\u1810' && LA32_1<='\u1819')||(LA32_1>='\u1820' && LA32_1<='\u1877')||(LA32_1>='\u1880' && LA32_1<='\u18A9')||(LA32_1>='\u1900' && LA32_1<='\u191C')||(LA32_1>='\u1920' && LA32_1<='\u192B')||(LA32_1>='\u1930' && LA32_1<='\u193B')||(LA32_1>='\u1946' && LA32_1<='\u196D')||(LA32_1>='\u1970' && LA32_1<='\u1974')||(LA32_1>='\u1D00' && LA32_1<='\u1D6B')||(LA32_1>='\u1E00' && LA32_1<='\u1E9B')||(LA32_1>='\u1EA0' && LA32_1<='\u1EF9')||(LA32_1>='\u1F00' && LA32_1<='\u1F15')||(LA32_1>='\u1F18' && LA32_1<='\u1F1D')||(LA32_1>='\u1F20' && LA32_1<='\u1F45')||(LA32_1>='\u1F48' && LA32_1<='\u1F4D')||(LA32_1>='\u1F50' && LA32_1<='\u1F57')||LA32_1=='\u1F59'||LA32_1=='\u1F5B'||LA32_1=='\u1F5D'||(LA32_1>='\u1F5F' && LA32_1<='\u1F7D')||(LA32_1>='\u1F80' && LA32_1<='\u1FB4')||(LA32_1>='\u1FB6' && LA32_1<='\u1FBC')||LA32_1=='\u1FBE'||(LA32_1>='\u1FC2' && LA32_1<='\u1FC4')||(LA32_1>='\u1FC6' && LA32_1<='\u1FCC')||(LA32_1>='\u1FD0' && LA32_1<='\u1FD3')||(LA32_1>='\u1FD6' && LA32_1<='\u1FDB')||(LA32_1>='\u1FE0' && LA32_1<='\u1FEC')||(LA32_1>='\u1FF2' && LA32_1<='\u1FF4')||(LA32_1>='\u1FF6' && LA32_1<='\u1FFC')||(LA32_1>='\u200C' && LA32_1<='\u200F')||(LA32_1>='\u202A' && LA32_1<='\u202E')||(LA32_1>='\u203F' && LA32_1<='\u2040')||LA32_1=='\u2054'||(LA32_1>='\u2060' && LA32_1<='\u2063')||(LA32_1>='\u206A' && LA32_1<='\u206F')||LA32_1=='\u2071'||LA32_1=='\u207F'||(LA32_1>='\u20A0' && LA32_1<='\u20B1')||(LA32_1>='\u20D0' && LA32_1<='\u20DC')||LA32_1=='\u20E1'||(LA32_1>='\u20E5' && LA32_1<='\u20EA')||LA32_1=='\u2102'||LA32_1=='\u2107'||(LA32_1>='\u210A' && LA32_1<='\u2113')||LA32_1=='\u2115'||(LA32_1>='\u2119' && LA32_1<='\u211D')||LA32_1=='\u2124'||LA32_1=='\u2126'||LA32_1=='\u2128'||(LA32_1>='\u212A' && LA32_1<='\u212D')||(LA32_1>='\u212F' && LA32_1<='\u2131')||(LA32_1>='\u2133' && LA32_1<='\u2139')||(LA32_1>='\u213D' && LA32_1<='\u213F')||(LA32_1>='\u2145' && LA32_1<='\u2149')||(LA32_1>='\u2160' && LA32_1<='\u2183')||(LA32_1>='\u3005' && LA32_1<='\u3007')||(LA32_1>='\u3021' && LA32_1<='\u302F')||(LA32_1>='\u3031' && LA32_1<='\u3035')||(LA32_1>='\u3038' && LA32_1<='\u303C')||(LA32_1>='\u3041' && LA32_1<='\u3096')||(LA32_1>='\u3099' && LA32_1<='\u309A')||(LA32_1>='\u309D' && LA32_1<='\u309F')||(LA32_1>='\u30A1' && LA32_1<='\u30FF')||(LA32_1>='\u3105' && LA32_1<='\u312C')||(LA32_1>='\u3131' && LA32_1<='\u318E')||(LA32_1>='\u31A0' && LA32_1<='\u31B7')||(LA32_1>='\u31F0' && LA32_1<='\u31FF')||(LA32_1>='\u3400' && LA32_1<='\u4DB5')||(LA32_1>='\u4E00' && LA32_1<='\u9FA5')||(LA32_1>='\uA000' && LA32_1<='\uA48C')||(LA32_1>='\uAC00' && LA32_1<='\uD7A3')||(LA32_1>='\uD800' && LA32_1<='\uDBFF')||(LA32_1>='\uF900' && LA32_1<='\uFA2D')||(LA32_1>='\uFA30' && LA32_1<='\uFA6A')||(LA32_1>='\uFB00' && LA32_1<='\uFB06')||(LA32_1>='\uFB13' && LA32_1<='\uFB17')||(LA32_1>='\uFB1D' && LA32_1<='\uFB28')||(LA32_1>='\uFB2A' && LA32_1<='\uFB36')||(LA32_1>='\uFB38' && LA32_1<='\uFB3C')||LA32_1=='\uFB3E'||(LA32_1>='\uFB40' && LA32_1<='\uFB41')||(LA32_1>='\uFB43' && LA32_1<='\uFB44')||(LA32_1>='\uFB46' && LA32_1<='\uFBB1')||(LA32_1>='\uFBD3' && LA32_1<='\uFD3D')||(LA32_1>='\uFD50' && LA32_1<='\uFD8F')||(LA32_1>='\uFD92' && LA32_1<='\uFDC7')||(LA32_1>='\uFDF0' && LA32_1<='\uFDFC')||(LA32_1>='\uFE00' && LA32_1<='\uFE0F')||(LA32_1>='\uFE20' && LA32_1<='\uFE23')||(LA32_1>='\uFE33' && LA32_1<='\uFE34')||(LA32_1>='\uFE4D' && LA32_1<='\uFE4F')||LA32_1=='\uFE69'||(LA32_1>='\uFE70' && LA32_1<='\uFE74')||(LA32_1>='\uFE76' && LA32_1<='\uFEFC')||LA32_1=='\uFEFF'||LA32_1=='\uFF04'||(LA32_1>='\uFF10' && LA32_1<='\uFF19')||(LA32_1>='\uFF21' && LA32_1<='\uFF3A')||LA32_1=='\uFF3F'||(LA32_1>='\uFF41' && LA32_1<='\uFF5A')||(LA32_1>='\uFF65' && LA32_1<='\uFFBE')||(LA32_1>='\uFFC2' && LA32_1<='\uFFC7')||(LA32_1>='\uFFCA' && LA32_1<='\uFFCF')||(LA32_1>='\uFFD2' && LA32_1<='\uFFD7')||(LA32_1>='\uFFDA' && LA32_1<='\uFFDC')||(LA32_1>='\uFFE0' && LA32_1<='\uFFE1')||(LA32_1>='\uFFE5' && LA32_1<='\uFFE6')||(LA32_1>='\uFFF9' && LA32_1<='\uFFFB')))
				{
					alt32 = 1;
				}


				} finally { DebugExitDecision(32); }
				switch ( alt32 )
				{
				case 1:
					DebugEnterAlt(1);
					// Java6ColorizerLexer.g:468:25: IdentifierPart
					{
					DebugLocation(468, 25);
					mIdentifierPart(); if (state.failed) return;

					}
					break;

				default:
					goto loop32;
				}
			}

			loop32:
				;

			} finally { DebugExitSubRule(32); }


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("IDENTIFIER", 61);
			LeaveRule("IDENTIFIER", 61);
			LeaveRule_IDENTIFIER();
		}
	}
	// $ANTLR end "IDENTIFIER"

	partial void EnterRule_SurrogateIdentifer();
	partial void LeaveRule_SurrogateIdentifer();

	// $ANTLR start "SurrogateIdentifer"
	[GrammarRule("SurrogateIdentifer")]
	private void mSurrogateIdentifer()
	{
		EnterRule_SurrogateIdentifer();
		EnterRule("SurrogateIdentifer", 62);
		TraceIn("SurrogateIdentifer", 62);
		try
		{
			// Java6ColorizerLexer.g:473:5: ( ( '\\ud800' .. '\\udbff' ) ( '\\udc00' .. '\\udfff' ) )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:473:9: ( '\\ud800' .. '\\udbff' ) ( '\\udc00' .. '\\udfff' )
			{
			DebugLocation(473, 9);
			if ((input.LA(1)>='\uD800' && input.LA(1)<='\uDBFF'))
			{
				input.Consume();
			state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}

			DebugLocation(473, 30);
			if ((input.LA(1)>='\uDC00' && input.LA(1)<='\uDFFF'))
			{
				input.Consume();
			state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("SurrogateIdentifer", 62);
			LeaveRule("SurrogateIdentifer", 62);
			LeaveRule_SurrogateIdentifer();
		}
	}
	// $ANTLR end "SurrogateIdentifer"

	partial void EnterRule_IdentifierStart();
	partial void LeaveRule_IdentifierStart();

	// $ANTLR start "IdentifierStart"
	[GrammarRule("IdentifierStart")]
	private void mIdentifierStart()
	{
		EnterRule_IdentifierStart();
		EnterRule("IdentifierStart", 63);
		TraceIn("IdentifierStart", 63);
		try
		{
			// Java6ColorizerLexer.g:478:5: ( '\\u0024' | '\\u0041' .. '\\u005a' | '\\u005f' | '\\u0061' .. '\\u007a' | '\\u00a2' .. '\\u00a5' | '\\u00aa' | '\\u00b5' | '\\u00ba' | '\\u00c0' .. '\\u00d6' | '\\u00d8' .. '\\u00f6' | '\\u00f8' .. '\\u0236' | '\\u0250' .. '\\u02c1' | '\\u02c6' .. '\\u02d1' | '\\u02e0' .. '\\u02e4' | '\\u02ee' | '\\u037a' | '\\u0386' | '\\u0388' .. '\\u038a' | '\\u038c' | '\\u038e' .. '\\u03a1' | '\\u03a3' .. '\\u03ce' | '\\u03d0' .. '\\u03f5' | '\\u03f7' .. '\\u03fb' | '\\u0400' .. '\\u0481' | '\\u048a' .. '\\u04ce' | '\\u04d0' .. '\\u04f5' | '\\u04f8' .. '\\u04f9' | '\\u0500' .. '\\u050f' | '\\u0531' .. '\\u0556' | '\\u0559' | '\\u0561' .. '\\u0587' | '\\u05d0' .. '\\u05ea' | '\\u05f0' .. '\\u05f2' | '\\u0621' .. '\\u063a' | '\\u0640' .. '\\u064a' | '\\u066e' .. '\\u066f' | '\\u0671' .. '\\u06d3' | '\\u06d5' | '\\u06e5' .. '\\u06e6' | '\\u06ee' .. '\\u06ef' | '\\u06fa' .. '\\u06fc' | '\\u06ff' | '\\u0710' | '\\u0712' .. '\\u072f' | '\\u074d' .. '\\u074f' | '\\u0780' .. '\\u07a5' | '\\u07b1' | '\\u0904' .. '\\u0939' | '\\u093d' | '\\u0950' | '\\u0958' .. '\\u0961' | '\\u0985' .. '\\u098c' | '\\u098f' .. '\\u0990' | '\\u0993' .. '\\u09a8' | '\\u09aa' .. '\\u09b0' | '\\u09b2' | '\\u09b6' .. '\\u09b9' | '\\u09bd' | '\\u09dc' .. '\\u09dd' | '\\u09df' .. '\\u09e1' | '\\u09f0' .. '\\u09f3' | '\\u0a05' .. '\\u0a0a' | '\\u0a0f' .. '\\u0a10' | '\\u0a13' .. '\\u0a28' | '\\u0a2a' .. '\\u0a30' | '\\u0a32' .. '\\u0a33' | '\\u0a35' .. '\\u0a36' | '\\u0a38' .. '\\u0a39' | '\\u0a59' .. '\\u0a5c' | '\\u0a5e' | '\\u0a72' .. '\\u0a74' | '\\u0a85' .. '\\u0a8d' | '\\u0a8f' .. '\\u0a91' | '\\u0a93' .. '\\u0aa8' | '\\u0aaa' .. '\\u0ab0' | '\\u0ab2' .. '\\u0ab3' | '\\u0ab5' .. '\\u0ab9' | '\\u0abd' | '\\u0ad0' | '\\u0ae0' .. '\\u0ae1' | '\\u0af1' | '\\u0b05' .. '\\u0b0c' | '\\u0b0f' .. '\\u0b10' | '\\u0b13' .. '\\u0b28' | '\\u0b2a' .. '\\u0b30' | '\\u0b32' .. '\\u0b33' | '\\u0b35' .. '\\u0b39' | '\\u0b3d' | '\\u0b5c' .. '\\u0b5d' | '\\u0b5f' .. '\\u0b61' | '\\u0b71' | '\\u0b83' | '\\u0b85' .. '\\u0b8a' | '\\u0b8e' .. '\\u0b90' | '\\u0b92' .. '\\u0b95' | '\\u0b99' .. '\\u0b9a' | '\\u0b9c' | '\\u0b9e' .. '\\u0b9f' | '\\u0ba3' .. '\\u0ba4' | '\\u0ba8' .. '\\u0baa' | '\\u0bae' .. '\\u0bb5' | '\\u0bb7' .. '\\u0bb9' | '\\u0bf9' | '\\u0c05' .. '\\u0c0c' | '\\u0c0e' .. '\\u0c10' | '\\u0c12' .. '\\u0c28' | '\\u0c2a' .. '\\u0c33' | '\\u0c35' .. '\\u0c39' | '\\u0c60' .. '\\u0c61' | '\\u0c85' .. '\\u0c8c' | '\\u0c8e' .. '\\u0c90' | '\\u0c92' .. '\\u0ca8' | '\\u0caa' .. '\\u0cb3' | '\\u0cb5' .. '\\u0cb9' | '\\u0cbd' | '\\u0cde' | '\\u0ce0' .. '\\u0ce1' | '\\u0d05' .. '\\u0d0c' | '\\u0d0e' .. '\\u0d10' | '\\u0d12' .. '\\u0d28' | '\\u0d2a' .. '\\u0d39' | '\\u0d60' .. '\\u0d61' | '\\u0d85' .. '\\u0d96' | '\\u0d9a' .. '\\u0db1' | '\\u0db3' .. '\\u0dbb' | '\\u0dbd' | '\\u0dc0' .. '\\u0dc6' | '\\u0e01' .. '\\u0e30' | '\\u0e32' .. '\\u0e33' | '\\u0e3f' .. '\\u0e46' | '\\u0e81' .. '\\u0e82' | '\\u0e84' | '\\u0e87' .. '\\u0e88' | '\\u0e8a' | '\\u0e8d' | '\\u0e94' .. '\\u0e97' | '\\u0e99' .. '\\u0e9f' | '\\u0ea1' .. '\\u0ea3' | '\\u0ea5' | '\\u0ea7' | '\\u0eaa' .. '\\u0eab' | '\\u0ead' .. '\\u0eb0' | '\\u0eb2' .. '\\u0eb3' | '\\u0ebd' | '\\u0ec0' .. '\\u0ec4' | '\\u0ec6' | '\\u0edc' .. '\\u0edd' | '\\u0f00' | '\\u0f40' .. '\\u0f47' | '\\u0f49' .. '\\u0f6a' | '\\u0f88' .. '\\u0f8b' | '\\u1000' .. '\\u1021' | '\\u1023' .. '\\u1027' | '\\u1029' .. '\\u102a' | '\\u1050' .. '\\u1055' | '\\u10a0' .. '\\u10c5' | '\\u10d0' .. '\\u10f8' | '\\u1100' .. '\\u1159' | '\\u115f' .. '\\u11a2' | '\\u11a8' .. '\\u11f9' | '\\u1200' .. '\\u1206' | '\\u1208' .. '\\u1246' | '\\u1248' | '\\u124a' .. '\\u124d' | '\\u1250' .. '\\u1256' | '\\u1258' | '\\u125a' .. '\\u125d' | '\\u1260' .. '\\u1286' | '\\u1288' | '\\u128a' .. '\\u128d' | '\\u1290' .. '\\u12ae' | '\\u12b0' | '\\u12b2' .. '\\u12b5' | '\\u12b8' .. '\\u12be' | '\\u12c0' | '\\u12c2' .. '\\u12c5' | '\\u12c8' .. '\\u12ce' | '\\u12d0' .. '\\u12d6' | '\\u12d8' .. '\\u12ee' | '\\u12f0' .. '\\u130e' | '\\u1310' | '\\u1312' .. '\\u1315' | '\\u1318' .. '\\u131e' | '\\u1320' .. '\\u1346' | '\\u1348' .. '\\u135a' | '\\u13a0' .. '\\u13f4' | '\\u1401' .. '\\u166c' | '\\u166f' .. '\\u1676' | '\\u1681' .. '\\u169a' | '\\u16a0' .. '\\u16ea' | '\\u16ee' .. '\\u16f0' | '\\u1700' .. '\\u170c' | '\\u170e' .. '\\u1711' | '\\u1720' .. '\\u1731' | '\\u1740' .. '\\u1751' | '\\u1760' .. '\\u176c' | '\\u176e' .. '\\u1770' | '\\u1780' .. '\\u17b3' | '\\u17d7' | '\\u17db' .. '\\u17dc' | '\\u1820' .. '\\u1877' | '\\u1880' .. '\\u18a8' | '\\u1900' .. '\\u191c' | '\\u1950' .. '\\u196d' | '\\u1970' .. '\\u1974' | '\\u1d00' .. '\\u1d6b' | '\\u1e00' .. '\\u1e9b' | '\\u1ea0' .. '\\u1ef9' | '\\u1f00' .. '\\u1f15' | '\\u1f18' .. '\\u1f1d' | '\\u1f20' .. '\\u1f45' | '\\u1f48' .. '\\u1f4d' | '\\u1f50' .. '\\u1f57' | '\\u1f59' | '\\u1f5b' | '\\u1f5d' | '\\u1f5f' .. '\\u1f7d' | '\\u1f80' .. '\\u1fb4' | '\\u1fb6' .. '\\u1fbc' | '\\u1fbe' | '\\u1fc2' .. '\\u1fc4' | '\\u1fc6' .. '\\u1fcc' | '\\u1fd0' .. '\\u1fd3' | '\\u1fd6' .. '\\u1fdb' | '\\u1fe0' .. '\\u1fec' | '\\u1ff2' .. '\\u1ff4' | '\\u1ff6' .. '\\u1ffc' | '\\u203f' .. '\\u2040' | '\\u2054' | '\\u2071' | '\\u207f' | '\\u20a0' .. '\\u20b1' | '\\u2102' | '\\u2107' | '\\u210a' .. '\\u2113' | '\\u2115' | '\\u2119' .. '\\u211d' | '\\u2124' | '\\u2126' | '\\u2128' | '\\u212a' .. '\\u212d' | '\\u212f' .. '\\u2131' | '\\u2133' .. '\\u2139' | '\\u213d' .. '\\u213f' | '\\u2145' .. '\\u2149' | '\\u2160' .. '\\u2183' | '\\u3005' .. '\\u3007' | '\\u3021' .. '\\u3029' | '\\u3031' .. '\\u3035' | '\\u3038' .. '\\u303c' | '\\u3041' .. '\\u3096' | '\\u309d' .. '\\u309f' | '\\u30a1' .. '\\u30ff' | '\\u3105' .. '\\u312c' | '\\u3131' .. '\\u318e' | '\\u31a0' .. '\\u31b7' | '\\u31f0' .. '\\u31ff' | '\\u3400' .. '\\u4db5' | '\\u4e00' .. '\\u9fa5' | '\\ua000' .. '\\ua48c' | '\\uac00' .. '\\ud7a3' | '\\uf900' .. '\\ufa2d' | '\\ufa30' .. '\\ufa6a' | '\\ufb00' .. '\\ufb06' | '\\ufb13' .. '\\ufb17' | '\\ufb1d' | '\\ufb1f' .. '\\ufb28' | '\\ufb2a' .. '\\ufb36' | '\\ufb38' .. '\\ufb3c' | '\\ufb3e' | '\\ufb40' .. '\\ufb41' | '\\ufb43' .. '\\ufb44' | '\\ufb46' .. '\\ufbb1' | '\\ufbd3' .. '\\ufd3d' | '\\ufd50' .. '\\ufd8f' | '\\ufd92' .. '\\ufdc7' | '\\ufdf0' .. '\\ufdfc' | '\\ufe33' .. '\\ufe34' | '\\ufe4d' .. '\\ufe4f' | '\\ufe69' | '\\ufe70' .. '\\ufe74' | '\\ufe76' .. '\\ufefc' | '\\uff04' | '\\uff21' .. '\\uff3a' | '\\uff3f' | '\\uff41' .. '\\uff5a' | '\\uff65' .. '\\uffbe' | '\\uffc2' .. '\\uffc7' | '\\uffca' .. '\\uffcf' | '\\uffd2' .. '\\uffd7' | '\\uffda' .. '\\uffdc' | '\\uffe0' .. '\\uffe1' | '\\uffe5' .. '\\uffe6' | ( '\\ud800' .. '\\udbff' ) ( '\\udc00' .. '\\udfff' ) )
			int alt33=294;
			try { DebugEnterDecision(33, false);
			int LA33_1 = input.LA(1);

			if ((LA33_1=='$'))
			{
				alt33 = 1;
			}
			else if (((LA33_1>='A' && LA33_1<='Z')))
			{
				alt33 = 2;
			}
			else if ((LA33_1=='_'))
			{
				alt33 = 3;
			}
			else if (((LA33_1>='a' && LA33_1<='z')))
			{
				alt33 = 4;
			}
			else if (((LA33_1>='\u00A2' && LA33_1<='\u00A5')))
			{
				alt33 = 5;
			}
			else if ((LA33_1=='\u00AA'))
			{
				alt33 = 6;
			}
			else if ((LA33_1=='\u00B5'))
			{
				alt33 = 7;
			}
			else if ((LA33_1=='\u00BA'))
			{
				alt33 = 8;
			}
			else if (((LA33_1>='\u00C0' && LA33_1<='\u00D6')))
			{
				alt33 = 9;
			}
			else if (((LA33_1>='\u00D8' && LA33_1<='\u00F6')))
			{
				alt33 = 10;
			}
			else if (((LA33_1>='\u00F8' && LA33_1<='\u0236')))
			{
				alt33 = 11;
			}
			else if (((LA33_1>='\u0250' && LA33_1<='\u02C1')))
			{
				alt33 = 12;
			}
			else if (((LA33_1>='\u02C6' && LA33_1<='\u02D1')))
			{
				alt33 = 13;
			}
			else if (((LA33_1>='\u02E0' && LA33_1<='\u02E4')))
			{
				alt33 = 14;
			}
			else if ((LA33_1=='\u02EE'))
			{
				alt33 = 15;
			}
			else if ((LA33_1=='\u037A'))
			{
				alt33 = 16;
			}
			else if ((LA33_1=='\u0386'))
			{
				alt33 = 17;
			}
			else if (((LA33_1>='\u0388' && LA33_1<='\u038A')))
			{
				alt33 = 18;
			}
			else if ((LA33_1=='\u038C'))
			{
				alt33 = 19;
			}
			else if (((LA33_1>='\u038E' && LA33_1<='\u03A1')))
			{
				alt33 = 20;
			}
			else if (((LA33_1>='\u03A3' && LA33_1<='\u03CE')))
			{
				alt33 = 21;
			}
			else if (((LA33_1>='\u03D0' && LA33_1<='\u03F5')))
			{
				alt33 = 22;
			}
			else if (((LA33_1>='\u03F7' && LA33_1<='\u03FB')))
			{
				alt33 = 23;
			}
			else if (((LA33_1>='\u0400' && LA33_1<='\u0481')))
			{
				alt33 = 24;
			}
			else if (((LA33_1>='\u048A' && LA33_1<='\u04CE')))
			{
				alt33 = 25;
			}
			else if (((LA33_1>='\u04D0' && LA33_1<='\u04F5')))
			{
				alt33 = 26;
			}
			else if (((LA33_1>='\u04F8' && LA33_1<='\u04F9')))
			{
				alt33 = 27;
			}
			else if (((LA33_1>='\u0500' && LA33_1<='\u050F')))
			{
				alt33 = 28;
			}
			else if (((LA33_1>='\u0531' && LA33_1<='\u0556')))
			{
				alt33 = 29;
			}
			else if ((LA33_1=='\u0559'))
			{
				alt33 = 30;
			}
			else if (((LA33_1>='\u0561' && LA33_1<='\u0587')))
			{
				alt33 = 31;
			}
			else if (((LA33_1>='\u05D0' && LA33_1<='\u05EA')))
			{
				alt33 = 32;
			}
			else if (((LA33_1>='\u05F0' && LA33_1<='\u05F2')))
			{
				alt33 = 33;
			}
			else if (((LA33_1>='\u0621' && LA33_1<='\u063A')))
			{
				alt33 = 34;
			}
			else if (((LA33_1>='\u0640' && LA33_1<='\u064A')))
			{
				alt33 = 35;
			}
			else if (((LA33_1>='\u066E' && LA33_1<='\u066F')))
			{
				alt33 = 36;
			}
			else if (((LA33_1>='\u0671' && LA33_1<='\u06D3')))
			{
				alt33 = 37;
			}
			else if ((LA33_1=='\u06D5'))
			{
				alt33 = 38;
			}
			else if (((LA33_1>='\u06E5' && LA33_1<='\u06E6')))
			{
				alt33 = 39;
			}
			else if (((LA33_1>='\u06EE' && LA33_1<='\u06EF')))
			{
				alt33 = 40;
			}
			else if (((LA33_1>='\u06FA' && LA33_1<='\u06FC')))
			{
				alt33 = 41;
			}
			else if ((LA33_1=='\u06FF'))
			{
				alt33 = 42;
			}
			else if ((LA33_1=='\u0710'))
			{
				alt33 = 43;
			}
			else if (((LA33_1>='\u0712' && LA33_1<='\u072F')))
			{
				alt33 = 44;
			}
			else if (((LA33_1>='\u074D' && LA33_1<='\u074F')))
			{
				alt33 = 45;
			}
			else if (((LA33_1>='\u0780' && LA33_1<='\u07A5')))
			{
				alt33 = 46;
			}
			else if ((LA33_1=='\u07B1'))
			{
				alt33 = 47;
			}
			else if (((LA33_1>='\u0904' && LA33_1<='\u0939')))
			{
				alt33 = 48;
			}
			else if ((LA33_1=='\u093D'))
			{
				alt33 = 49;
			}
			else if ((LA33_1=='\u0950'))
			{
				alt33 = 50;
			}
			else if (((LA33_1>='\u0958' && LA33_1<='\u0961')))
			{
				alt33 = 51;
			}
			else if (((LA33_1>='\u0985' && LA33_1<='\u098C')))
			{
				alt33 = 52;
			}
			else if (((LA33_1>='\u098F' && LA33_1<='\u0990')))
			{
				alt33 = 53;
			}
			else if (((LA33_1>='\u0993' && LA33_1<='\u09A8')))
			{
				alt33 = 54;
			}
			else if (((LA33_1>='\u09AA' && LA33_1<='\u09B0')))
			{
				alt33 = 55;
			}
			else if ((LA33_1=='\u09B2'))
			{
				alt33 = 56;
			}
			else if (((LA33_1>='\u09B6' && LA33_1<='\u09B9')))
			{
				alt33 = 57;
			}
			else if ((LA33_1=='\u09BD'))
			{
				alt33 = 58;
			}
			else if (((LA33_1>='\u09DC' && LA33_1<='\u09DD')))
			{
				alt33 = 59;
			}
			else if (((LA33_1>='\u09DF' && LA33_1<='\u09E1')))
			{
				alt33 = 60;
			}
			else if (((LA33_1>='\u09F0' && LA33_1<='\u09F3')))
			{
				alt33 = 61;
			}
			else if (((LA33_1>='\u0A05' && LA33_1<='\u0A0A')))
			{
				alt33 = 62;
			}
			else if (((LA33_1>='\u0A0F' && LA33_1<='\u0A10')))
			{
				alt33 = 63;
			}
			else if (((LA33_1>='\u0A13' && LA33_1<='\u0A28')))
			{
				alt33 = 64;
			}
			else if (((LA33_1>='\u0A2A' && LA33_1<='\u0A30')))
			{
				alt33 = 65;
			}
			else if (((LA33_1>='\u0A32' && LA33_1<='\u0A33')))
			{
				alt33 = 66;
			}
			else if (((LA33_1>='\u0A35' && LA33_1<='\u0A36')))
			{
				alt33 = 67;
			}
			else if (((LA33_1>='\u0A38' && LA33_1<='\u0A39')))
			{
				alt33 = 68;
			}
			else if (((LA33_1>='\u0A59' && LA33_1<='\u0A5C')))
			{
				alt33 = 69;
			}
			else if ((LA33_1=='\u0A5E'))
			{
				alt33 = 70;
			}
			else if (((LA33_1>='\u0A72' && LA33_1<='\u0A74')))
			{
				alt33 = 71;
			}
			else if (((LA33_1>='\u0A85' && LA33_1<='\u0A8D')))
			{
				alt33 = 72;
			}
			else if (((LA33_1>='\u0A8F' && LA33_1<='\u0A91')))
			{
				alt33 = 73;
			}
			else if (((LA33_1>='\u0A93' && LA33_1<='\u0AA8')))
			{
				alt33 = 74;
			}
			else if (((LA33_1>='\u0AAA' && LA33_1<='\u0AB0')))
			{
				alt33 = 75;
			}
			else if (((LA33_1>='\u0AB2' && LA33_1<='\u0AB3')))
			{
				alt33 = 76;
			}
			else if (((LA33_1>='\u0AB5' && LA33_1<='\u0AB9')))
			{
				alt33 = 77;
			}
			else if ((LA33_1=='\u0ABD'))
			{
				alt33 = 78;
			}
			else if ((LA33_1=='\u0AD0'))
			{
				alt33 = 79;
			}
			else if (((LA33_1>='\u0AE0' && LA33_1<='\u0AE1')))
			{
				alt33 = 80;
			}
			else if ((LA33_1=='\u0AF1'))
			{
				alt33 = 81;
			}
			else if (((LA33_1>='\u0B05' && LA33_1<='\u0B0C')))
			{
				alt33 = 82;
			}
			else if (((LA33_1>='\u0B0F' && LA33_1<='\u0B10')))
			{
				alt33 = 83;
			}
			else if (((LA33_1>='\u0B13' && LA33_1<='\u0B28')))
			{
				alt33 = 84;
			}
			else if (((LA33_1>='\u0B2A' && LA33_1<='\u0B30')))
			{
				alt33 = 85;
			}
			else if (((LA33_1>='\u0B32' && LA33_1<='\u0B33')))
			{
				alt33 = 86;
			}
			else if (((LA33_1>='\u0B35' && LA33_1<='\u0B39')))
			{
				alt33 = 87;
			}
			else if ((LA33_1=='\u0B3D'))
			{
				alt33 = 88;
			}
			else if (((LA33_1>='\u0B5C' && LA33_1<='\u0B5D')))
			{
				alt33 = 89;
			}
			else if (((LA33_1>='\u0B5F' && LA33_1<='\u0B61')))
			{
				alt33 = 90;
			}
			else if ((LA33_1=='\u0B71'))
			{
				alt33 = 91;
			}
			else if ((LA33_1=='\u0B83'))
			{
				alt33 = 92;
			}
			else if (((LA33_1>='\u0B85' && LA33_1<='\u0B8A')))
			{
				alt33 = 93;
			}
			else if (((LA33_1>='\u0B8E' && LA33_1<='\u0B90')))
			{
				alt33 = 94;
			}
			else if (((LA33_1>='\u0B92' && LA33_1<='\u0B95')))
			{
				alt33 = 95;
			}
			else if (((LA33_1>='\u0B99' && LA33_1<='\u0B9A')))
			{
				alt33 = 96;
			}
			else if ((LA33_1=='\u0B9C'))
			{
				alt33 = 97;
			}
			else if (((LA33_1>='\u0B9E' && LA33_1<='\u0B9F')))
			{
				alt33 = 98;
			}
			else if (((LA33_1>='\u0BA3' && LA33_1<='\u0BA4')))
			{
				alt33 = 99;
			}
			else if (((LA33_1>='\u0BA8' && LA33_1<='\u0BAA')))
			{
				alt33 = 100;
			}
			else if (((LA33_1>='\u0BAE' && LA33_1<='\u0BB5')))
			{
				alt33 = 101;
			}
			else if (((LA33_1>='\u0BB7' && LA33_1<='\u0BB9')))
			{
				alt33 = 102;
			}
			else if ((LA33_1=='\u0BF9'))
			{
				alt33 = 103;
			}
			else if (((LA33_1>='\u0C05' && LA33_1<='\u0C0C')))
			{
				alt33 = 104;
			}
			else if (((LA33_1>='\u0C0E' && LA33_1<='\u0C10')))
			{
				alt33 = 105;
			}
			else if (((LA33_1>='\u0C12' && LA33_1<='\u0C28')))
			{
				alt33 = 106;
			}
			else if (((LA33_1>='\u0C2A' && LA33_1<='\u0C33')))
			{
				alt33 = 107;
			}
			else if (((LA33_1>='\u0C35' && LA33_1<='\u0C39')))
			{
				alt33 = 108;
			}
			else if (((LA33_1>='\u0C60' && LA33_1<='\u0C61')))
			{
				alt33 = 109;
			}
			else if (((LA33_1>='\u0C85' && LA33_1<='\u0C8C')))
			{
				alt33 = 110;
			}
			else if (((LA33_1>='\u0C8E' && LA33_1<='\u0C90')))
			{
				alt33 = 111;
			}
			else if (((LA33_1>='\u0C92' && LA33_1<='\u0CA8')))
			{
				alt33 = 112;
			}
			else if (((LA33_1>='\u0CAA' && LA33_1<='\u0CB3')))
			{
				alt33 = 113;
			}
			else if (((LA33_1>='\u0CB5' && LA33_1<='\u0CB9')))
			{
				alt33 = 114;
			}
			else if ((LA33_1=='\u0CBD'))
			{
				alt33 = 115;
			}
			else if ((LA33_1=='\u0CDE'))
			{
				alt33 = 116;
			}
			else if (((LA33_1>='\u0CE0' && LA33_1<='\u0CE1')))
			{
				alt33 = 117;
			}
			else if (((LA33_1>='\u0D05' && LA33_1<='\u0D0C')))
			{
				alt33 = 118;
			}
			else if (((LA33_1>='\u0D0E' && LA33_1<='\u0D10')))
			{
				alt33 = 119;
			}
			else if (((LA33_1>='\u0D12' && LA33_1<='\u0D28')))
			{
				alt33 = 120;
			}
			else if (((LA33_1>='\u0D2A' && LA33_1<='\u0D39')))
			{
				alt33 = 121;
			}
			else if (((LA33_1>='\u0D60' && LA33_1<='\u0D61')))
			{
				alt33 = 122;
			}
			else if (((LA33_1>='\u0D85' && LA33_1<='\u0D96')))
			{
				alt33 = 123;
			}
			else if (((LA33_1>='\u0D9A' && LA33_1<='\u0DB1')))
			{
				alt33 = 124;
			}
			else if (((LA33_1>='\u0DB3' && LA33_1<='\u0DBB')))
			{
				alt33 = 125;
			}
			else if ((LA33_1=='\u0DBD'))
			{
				alt33 = 126;
			}
			else if (((LA33_1>='\u0DC0' && LA33_1<='\u0DC6')))
			{
				alt33 = 127;
			}
			else if (((LA33_1>='\u0E01' && LA33_1<='\u0E30')))
			{
				alt33 = 128;
			}
			else if (((LA33_1>='\u0E32' && LA33_1<='\u0E33')))
			{
				alt33 = 129;
			}
			else if (((LA33_1>='\u0E3F' && LA33_1<='\u0E46')))
			{
				alt33 = 130;
			}
			else if (((LA33_1>='\u0E81' && LA33_1<='\u0E82')))
			{
				alt33 = 131;
			}
			else if ((LA33_1=='\u0E84'))
			{
				alt33 = 132;
			}
			else if (((LA33_1>='\u0E87' && LA33_1<='\u0E88')))
			{
				alt33 = 133;
			}
			else if ((LA33_1=='\u0E8A'))
			{
				alt33 = 134;
			}
			else if ((LA33_1=='\u0E8D'))
			{
				alt33 = 135;
			}
			else if (((LA33_1>='\u0E94' && LA33_1<='\u0E97')))
			{
				alt33 = 136;
			}
			else if (((LA33_1>='\u0E99' && LA33_1<='\u0E9F')))
			{
				alt33 = 137;
			}
			else if (((LA33_1>='\u0EA1' && LA33_1<='\u0EA3')))
			{
				alt33 = 138;
			}
			else if ((LA33_1=='\u0EA5'))
			{
				alt33 = 139;
			}
			else if ((LA33_1=='\u0EA7'))
			{
				alt33 = 140;
			}
			else if (((LA33_1>='\u0EAA' && LA33_1<='\u0EAB')))
			{
				alt33 = 141;
			}
			else if (((LA33_1>='\u0EAD' && LA33_1<='\u0EB0')))
			{
				alt33 = 142;
			}
			else if (((LA33_1>='\u0EB2' && LA33_1<='\u0EB3')))
			{
				alt33 = 143;
			}
			else if ((LA33_1=='\u0EBD'))
			{
				alt33 = 144;
			}
			else if (((LA33_1>='\u0EC0' && LA33_1<='\u0EC4')))
			{
				alt33 = 145;
			}
			else if ((LA33_1=='\u0EC6'))
			{
				alt33 = 146;
			}
			else if (((LA33_1>='\u0EDC' && LA33_1<='\u0EDD')))
			{
				alt33 = 147;
			}
			else if ((LA33_1=='\u0F00'))
			{
				alt33 = 148;
			}
			else if (((LA33_1>='\u0F40' && LA33_1<='\u0F47')))
			{
				alt33 = 149;
			}
			else if (((LA33_1>='\u0F49' && LA33_1<='\u0F6A')))
			{
				alt33 = 150;
			}
			else if (((LA33_1>='\u0F88' && LA33_1<='\u0F8B')))
			{
				alt33 = 151;
			}
			else if (((LA33_1>='\u1000' && LA33_1<='\u1021')))
			{
				alt33 = 152;
			}
			else if (((LA33_1>='\u1023' && LA33_1<='\u1027')))
			{
				alt33 = 153;
			}
			else if (((LA33_1>='\u1029' && LA33_1<='\u102A')))
			{
				alt33 = 154;
			}
			else if (((LA33_1>='\u1050' && LA33_1<='\u1055')))
			{
				alt33 = 155;
			}
			else if (((LA33_1>='\u10A0' && LA33_1<='\u10C5')))
			{
				alt33 = 156;
			}
			else if (((LA33_1>='\u10D0' && LA33_1<='\u10F8')))
			{
				alt33 = 157;
			}
			else if (((LA33_1>='\u1100' && LA33_1<='\u1159')))
			{
				alt33 = 158;
			}
			else if (((LA33_1>='\u115F' && LA33_1<='\u11A2')))
			{
				alt33 = 159;
			}
			else if (((LA33_1>='\u11A8' && LA33_1<='\u11F9')))
			{
				alt33 = 160;
			}
			else if (((LA33_1>='\u1200' && LA33_1<='\u1206')))
			{
				alt33 = 161;
			}
			else if (((LA33_1>='\u1208' && LA33_1<='\u1246')))
			{
				alt33 = 162;
			}
			else if ((LA33_1=='\u1248'))
			{
				alt33 = 163;
			}
			else if (((LA33_1>='\u124A' && LA33_1<='\u124D')))
			{
				alt33 = 164;
			}
			else if (((LA33_1>='\u1250' && LA33_1<='\u1256')))
			{
				alt33 = 165;
			}
			else if ((LA33_1=='\u1258'))
			{
				alt33 = 166;
			}
			else if (((LA33_1>='\u125A' && LA33_1<='\u125D')))
			{
				alt33 = 167;
			}
			else if (((LA33_1>='\u1260' && LA33_1<='\u1286')))
			{
				alt33 = 168;
			}
			else if ((LA33_1=='\u1288'))
			{
				alt33 = 169;
			}
			else if (((LA33_1>='\u128A' && LA33_1<='\u128D')))
			{
				alt33 = 170;
			}
			else if (((LA33_1>='\u1290' && LA33_1<='\u12AE')))
			{
				alt33 = 171;
			}
			else if ((LA33_1=='\u12B0'))
			{
				alt33 = 172;
			}
			else if (((LA33_1>='\u12B2' && LA33_1<='\u12B5')))
			{
				alt33 = 173;
			}
			else if (((LA33_1>='\u12B8' && LA33_1<='\u12BE')))
			{
				alt33 = 174;
			}
			else if ((LA33_1=='\u12C0'))
			{
				alt33 = 175;
			}
			else if (((LA33_1>='\u12C2' && LA33_1<='\u12C5')))
			{
				alt33 = 176;
			}
			else if (((LA33_1>='\u12C8' && LA33_1<='\u12CE')))
			{
				alt33 = 177;
			}
			else if (((LA33_1>='\u12D0' && LA33_1<='\u12D6')))
			{
				alt33 = 178;
			}
			else if (((LA33_1>='\u12D8' && LA33_1<='\u12EE')))
			{
				alt33 = 179;
			}
			else if (((LA33_1>='\u12F0' && LA33_1<='\u130E')))
			{
				alt33 = 180;
			}
			else if ((LA33_1=='\u1310'))
			{
				alt33 = 181;
			}
			else if (((LA33_1>='\u1312' && LA33_1<='\u1315')))
			{
				alt33 = 182;
			}
			else if (((LA33_1>='\u1318' && LA33_1<='\u131E')))
			{
				alt33 = 183;
			}
			else if (((LA33_1>='\u1320' && LA33_1<='\u1346')))
			{
				alt33 = 184;
			}
			else if (((LA33_1>='\u1348' && LA33_1<='\u135A')))
			{
				alt33 = 185;
			}
			else if (((LA33_1>='\u13A0' && LA33_1<='\u13F4')))
			{
				alt33 = 186;
			}
			else if (((LA33_1>='\u1401' && LA33_1<='\u166C')))
			{
				alt33 = 187;
			}
			else if (((LA33_1>='\u166F' && LA33_1<='\u1676')))
			{
				alt33 = 188;
			}
			else if (((LA33_1>='\u1681' && LA33_1<='\u169A')))
			{
				alt33 = 189;
			}
			else if (((LA33_1>='\u16A0' && LA33_1<='\u16EA')))
			{
				alt33 = 190;
			}
			else if (((LA33_1>='\u16EE' && LA33_1<='\u16F0')))
			{
				alt33 = 191;
			}
			else if (((LA33_1>='\u1700' && LA33_1<='\u170C')))
			{
				alt33 = 192;
			}
			else if (((LA33_1>='\u170E' && LA33_1<='\u1711')))
			{
				alt33 = 193;
			}
			else if (((LA33_1>='\u1720' && LA33_1<='\u1731')))
			{
				alt33 = 194;
			}
			else if (((LA33_1>='\u1740' && LA33_1<='\u1751')))
			{
				alt33 = 195;
			}
			else if (((LA33_1>='\u1760' && LA33_1<='\u176C')))
			{
				alt33 = 196;
			}
			else if (((LA33_1>='\u176E' && LA33_1<='\u1770')))
			{
				alt33 = 197;
			}
			else if (((LA33_1>='\u1780' && LA33_1<='\u17B3')))
			{
				alt33 = 198;
			}
			else if ((LA33_1=='\u17D7'))
			{
				alt33 = 199;
			}
			else if (((LA33_1>='\u17DB' && LA33_1<='\u17DC')))
			{
				alt33 = 200;
			}
			else if (((LA33_1>='\u1820' && LA33_1<='\u1877')))
			{
				alt33 = 201;
			}
			else if (((LA33_1>='\u1880' && LA33_1<='\u18A8')))
			{
				alt33 = 202;
			}
			else if (((LA33_1>='\u1900' && LA33_1<='\u191C')))
			{
				alt33 = 203;
			}
			else if (((LA33_1>='\u1950' && LA33_1<='\u196D')))
			{
				alt33 = 204;
			}
			else if (((LA33_1>='\u1970' && LA33_1<='\u1974')))
			{
				alt33 = 205;
			}
			else if (((LA33_1>='\u1D00' && LA33_1<='\u1D6B')))
			{
				alt33 = 206;
			}
			else if (((LA33_1>='\u1E00' && LA33_1<='\u1E9B')))
			{
				alt33 = 207;
			}
			else if (((LA33_1>='\u1EA0' && LA33_1<='\u1EF9')))
			{
				alt33 = 208;
			}
			else if (((LA33_1>='\u1F00' && LA33_1<='\u1F15')))
			{
				alt33 = 209;
			}
			else if (((LA33_1>='\u1F18' && LA33_1<='\u1F1D')))
			{
				alt33 = 210;
			}
			else if (((LA33_1>='\u1F20' && LA33_1<='\u1F45')))
			{
				alt33 = 211;
			}
			else if (((LA33_1>='\u1F48' && LA33_1<='\u1F4D')))
			{
				alt33 = 212;
			}
			else if (((LA33_1>='\u1F50' && LA33_1<='\u1F57')))
			{
				alt33 = 213;
			}
			else if ((LA33_1=='\u1F59'))
			{
				alt33 = 214;
			}
			else if ((LA33_1=='\u1F5B'))
			{
				alt33 = 215;
			}
			else if ((LA33_1=='\u1F5D'))
			{
				alt33 = 216;
			}
			else if (((LA33_1>='\u1F5F' && LA33_1<='\u1F7D')))
			{
				alt33 = 217;
			}
			else if (((LA33_1>='\u1F80' && LA33_1<='\u1FB4')))
			{
				alt33 = 218;
			}
			else if (((LA33_1>='\u1FB6' && LA33_1<='\u1FBC')))
			{
				alt33 = 219;
			}
			else if ((LA33_1=='\u1FBE'))
			{
				alt33 = 220;
			}
			else if (((LA33_1>='\u1FC2' && LA33_1<='\u1FC4')))
			{
				alt33 = 221;
			}
			else if (((LA33_1>='\u1FC6' && LA33_1<='\u1FCC')))
			{
				alt33 = 222;
			}
			else if (((LA33_1>='\u1FD0' && LA33_1<='\u1FD3')))
			{
				alt33 = 223;
			}
			else if (((LA33_1>='\u1FD6' && LA33_1<='\u1FDB')))
			{
				alt33 = 224;
			}
			else if (((LA33_1>='\u1FE0' && LA33_1<='\u1FEC')))
			{
				alt33 = 225;
			}
			else if (((LA33_1>='\u1FF2' && LA33_1<='\u1FF4')))
			{
				alt33 = 226;
			}
			else if (((LA33_1>='\u1FF6' && LA33_1<='\u1FFC')))
			{
				alt33 = 227;
			}
			else if (((LA33_1>='\u203F' && LA33_1<='\u2040')))
			{
				alt33 = 228;
			}
			else if ((LA33_1=='\u2054'))
			{
				alt33 = 229;
			}
			else if ((LA33_1=='\u2071'))
			{
				alt33 = 230;
			}
			else if ((LA33_1=='\u207F'))
			{
				alt33 = 231;
			}
			else if (((LA33_1>='\u20A0' && LA33_1<='\u20B1')))
			{
				alt33 = 232;
			}
			else if ((LA33_1=='\u2102'))
			{
				alt33 = 233;
			}
			else if ((LA33_1=='\u2107'))
			{
				alt33 = 234;
			}
			else if (((LA33_1>='\u210A' && LA33_1<='\u2113')))
			{
				alt33 = 235;
			}
			else if ((LA33_1=='\u2115'))
			{
				alt33 = 236;
			}
			else if (((LA33_1>='\u2119' && LA33_1<='\u211D')))
			{
				alt33 = 237;
			}
			else if ((LA33_1=='\u2124'))
			{
				alt33 = 238;
			}
			else if ((LA33_1=='\u2126'))
			{
				alt33 = 239;
			}
			else if ((LA33_1=='\u2128'))
			{
				alt33 = 240;
			}
			else if (((LA33_1>='\u212A' && LA33_1<='\u212D')))
			{
				alt33 = 241;
			}
			else if (((LA33_1>='\u212F' && LA33_1<='\u2131')))
			{
				alt33 = 242;
			}
			else if (((LA33_1>='\u2133' && LA33_1<='\u2139')))
			{
				alt33 = 243;
			}
			else if (((LA33_1>='\u213D' && LA33_1<='\u213F')))
			{
				alt33 = 244;
			}
			else if (((LA33_1>='\u2145' && LA33_1<='\u2149')))
			{
				alt33 = 245;
			}
			else if (((LA33_1>='\u2160' && LA33_1<='\u2183')))
			{
				alt33 = 246;
			}
			else if (((LA33_1>='\u3005' && LA33_1<='\u3007')))
			{
				alt33 = 247;
			}
			else if (((LA33_1>='\u3021' && LA33_1<='\u3029')))
			{
				alt33 = 248;
			}
			else if (((LA33_1>='\u3031' && LA33_1<='\u3035')))
			{
				alt33 = 249;
			}
			else if (((LA33_1>='\u3038' && LA33_1<='\u303C')))
			{
				alt33 = 250;
			}
			else if (((LA33_1>='\u3041' && LA33_1<='\u3096')))
			{
				alt33 = 251;
			}
			else if (((LA33_1>='\u309D' && LA33_1<='\u309F')))
			{
				alt33 = 252;
			}
			else if (((LA33_1>='\u30A1' && LA33_1<='\u30FF')))
			{
				alt33 = 253;
			}
			else if (((LA33_1>='\u3105' && LA33_1<='\u312C')))
			{
				alt33 = 254;
			}
			else if (((LA33_1>='\u3131' && LA33_1<='\u318E')))
			{
				alt33 = 255;
			}
			else if (((LA33_1>='\u31A0' && LA33_1<='\u31B7')))
			{
				alt33 = 256;
			}
			else if (((LA33_1>='\u31F0' && LA33_1<='\u31FF')))
			{
				alt33 = 257;
			}
			else if (((LA33_1>='\u3400' && LA33_1<='\u4DB5')))
			{
				alt33 = 258;
			}
			else if (((LA33_1>='\u4E00' && LA33_1<='\u9FA5')))
			{
				alt33 = 259;
			}
			else if (((LA33_1>='\uA000' && LA33_1<='\uA48C')))
			{
				alt33 = 260;
			}
			else if (((LA33_1>='\uAC00' && LA33_1<='\uD7A3')))
			{
				alt33 = 261;
			}
			else if (((LA33_1>='\uF900' && LA33_1<='\uFA2D')))
			{
				alt33 = 262;
			}
			else if (((LA33_1>='\uFA30' && LA33_1<='\uFA6A')))
			{
				alt33 = 263;
			}
			else if (((LA33_1>='\uFB00' && LA33_1<='\uFB06')))
			{
				alt33 = 264;
			}
			else if (((LA33_1>='\uFB13' && LA33_1<='\uFB17')))
			{
				alt33 = 265;
			}
			else if ((LA33_1=='\uFB1D'))
			{
				alt33 = 266;
			}
			else if (((LA33_1>='\uFB1F' && LA33_1<='\uFB28')))
			{
				alt33 = 267;
			}
			else if (((LA33_1>='\uFB2A' && LA33_1<='\uFB36')))
			{
				alt33 = 268;
			}
			else if (((LA33_1>='\uFB38' && LA33_1<='\uFB3C')))
			{
				alt33 = 269;
			}
			else if ((LA33_1=='\uFB3E'))
			{
				alt33 = 270;
			}
			else if (((LA33_1>='\uFB40' && LA33_1<='\uFB41')))
			{
				alt33 = 271;
			}
			else if (((LA33_1>='\uFB43' && LA33_1<='\uFB44')))
			{
				alt33 = 272;
			}
			else if (((LA33_1>='\uFB46' && LA33_1<='\uFBB1')))
			{
				alt33 = 273;
			}
			else if (((LA33_1>='\uFBD3' && LA33_1<='\uFD3D')))
			{
				alt33 = 274;
			}
			else if (((LA33_1>='\uFD50' && LA33_1<='\uFD8F')))
			{
				alt33 = 275;
			}
			else if (((LA33_1>='\uFD92' && LA33_1<='\uFDC7')))
			{
				alt33 = 276;
			}
			else if (((LA33_1>='\uFDF0' && LA33_1<='\uFDFC')))
			{
				alt33 = 277;
			}
			else if (((LA33_1>='\uFE33' && LA33_1<='\uFE34')))
			{
				alt33 = 278;
			}
			else if (((LA33_1>='\uFE4D' && LA33_1<='\uFE4F')))
			{
				alt33 = 279;
			}
			else if ((LA33_1=='\uFE69'))
			{
				alt33 = 280;
			}
			else if (((LA33_1>='\uFE70' && LA33_1<='\uFE74')))
			{
				alt33 = 281;
			}
			else if (((LA33_1>='\uFE76' && LA33_1<='\uFEFC')))
			{
				alt33 = 282;
			}
			else if ((LA33_1=='\uFF04'))
			{
				alt33 = 283;
			}
			else if (((LA33_1>='\uFF21' && LA33_1<='\uFF3A')))
			{
				alt33 = 284;
			}
			else if ((LA33_1=='\uFF3F'))
			{
				alt33 = 285;
			}
			else if (((LA33_1>='\uFF41' && LA33_1<='\uFF5A')))
			{
				alt33 = 286;
			}
			else if (((LA33_1>='\uFF65' && LA33_1<='\uFFBE')))
			{
				alt33 = 287;
			}
			else if (((LA33_1>='\uFFC2' && LA33_1<='\uFFC7')))
			{
				alt33 = 288;
			}
			else if (((LA33_1>='\uFFCA' && LA33_1<='\uFFCF')))
			{
				alt33 = 289;
			}
			else if (((LA33_1>='\uFFD2' && LA33_1<='\uFFD7')))
			{
				alt33 = 290;
			}
			else if (((LA33_1>='\uFFDA' && LA33_1<='\uFFDC')))
			{
				alt33 = 291;
			}
			else if (((LA33_1>='\uFFE0' && LA33_1<='\uFFE1')))
			{
				alt33 = 292;
			}
			else if (((LA33_1>='\uFFE5' && LA33_1<='\uFFE6')))
			{
				alt33 = 293;
			}
			else if (((LA33_1>='\uD800' && LA33_1<='\uDBFF')))
			{
				alt33 = 294;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 33, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(33); }
			switch (alt33)
			{
			case 1:
				DebugEnterAlt(1);
				// Java6ColorizerLexer.g:478:9: '\\u0024'
				{
				DebugLocation(478, 9);
				Match('$'); if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Java6ColorizerLexer.g:479:9: '\\u0041' .. '\\u005a'
				{
				DebugLocation(479, 9);
				MatchRange('A','Z'); if (state.failed) return;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Java6ColorizerLexer.g:480:9: '\\u005f'
				{
				DebugLocation(480, 9);
				Match('_'); if (state.failed) return;

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Java6ColorizerLexer.g:481:9: '\\u0061' .. '\\u007a'
				{
				DebugLocation(481, 9);
				MatchRange('a','z'); if (state.failed) return;

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Java6ColorizerLexer.g:482:9: '\\u00a2' .. '\\u00a5'
				{
				DebugLocation(482, 9);
				MatchRange('\u00A2','\u00A5'); if (state.failed) return;

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// Java6ColorizerLexer.g:483:9: '\\u00aa'
				{
				DebugLocation(483, 9);
				Match('\u00AA'); if (state.failed) return;

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// Java6ColorizerLexer.g:484:9: '\\u00b5'
				{
				DebugLocation(484, 9);
				Match('\u00B5'); if (state.failed) return;

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// Java6ColorizerLexer.g:485:9: '\\u00ba'
				{
				DebugLocation(485, 9);
				Match('\u00BA'); if (state.failed) return;

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// Java6ColorizerLexer.g:486:9: '\\u00c0' .. '\\u00d6'
				{
				DebugLocation(486, 9);
				MatchRange('\u00C0','\u00D6'); if (state.failed) return;

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// Java6ColorizerLexer.g:487:9: '\\u00d8' .. '\\u00f6'
				{
				DebugLocation(487, 9);
				MatchRange('\u00D8','\u00F6'); if (state.failed) return;

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// Java6ColorizerLexer.g:488:9: '\\u00f8' .. '\\u0236'
				{
				DebugLocation(488, 9);
				MatchRange('\u00F8','\u0236'); if (state.failed) return;

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// Java6ColorizerLexer.g:489:9: '\\u0250' .. '\\u02c1'
				{
				DebugLocation(489, 9);
				MatchRange('\u0250','\u02C1'); if (state.failed) return;

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// Java6ColorizerLexer.g:490:9: '\\u02c6' .. '\\u02d1'
				{
				DebugLocation(490, 9);
				MatchRange('\u02C6','\u02D1'); if (state.failed) return;

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// Java6ColorizerLexer.g:491:9: '\\u02e0' .. '\\u02e4'
				{
				DebugLocation(491, 9);
				MatchRange('\u02E0','\u02E4'); if (state.failed) return;

				}
				break;
			case 15:
				DebugEnterAlt(15);
				// Java6ColorizerLexer.g:492:9: '\\u02ee'
				{
				DebugLocation(492, 9);
				Match('\u02EE'); if (state.failed) return;

				}
				break;
			case 16:
				DebugEnterAlt(16);
				// Java6ColorizerLexer.g:493:9: '\\u037a'
				{
				DebugLocation(493, 9);
				Match('\u037A'); if (state.failed) return;

				}
				break;
			case 17:
				DebugEnterAlt(17);
				// Java6ColorizerLexer.g:494:9: '\\u0386'
				{
				DebugLocation(494, 9);
				Match('\u0386'); if (state.failed) return;

				}
				break;
			case 18:
				DebugEnterAlt(18);
				// Java6ColorizerLexer.g:495:9: '\\u0388' .. '\\u038a'
				{
				DebugLocation(495, 9);
				MatchRange('\u0388','\u038A'); if (state.failed) return;

				}
				break;
			case 19:
				DebugEnterAlt(19);
				// Java6ColorizerLexer.g:496:9: '\\u038c'
				{
				DebugLocation(496, 9);
				Match('\u038C'); if (state.failed) return;

				}
				break;
			case 20:
				DebugEnterAlt(20);
				// Java6ColorizerLexer.g:497:9: '\\u038e' .. '\\u03a1'
				{
				DebugLocation(497, 9);
				MatchRange('\u038E','\u03A1'); if (state.failed) return;

				}
				break;
			case 21:
				DebugEnterAlt(21);
				// Java6ColorizerLexer.g:498:9: '\\u03a3' .. '\\u03ce'
				{
				DebugLocation(498, 9);
				MatchRange('\u03A3','\u03CE'); if (state.failed) return;

				}
				break;
			case 22:
				DebugEnterAlt(22);
				// Java6ColorizerLexer.g:499:9: '\\u03d0' .. '\\u03f5'
				{
				DebugLocation(499, 9);
				MatchRange('\u03D0','\u03F5'); if (state.failed) return;

				}
				break;
			case 23:
				DebugEnterAlt(23);
				// Java6ColorizerLexer.g:500:9: '\\u03f7' .. '\\u03fb'
				{
				DebugLocation(500, 9);
				MatchRange('\u03F7','\u03FB'); if (state.failed) return;

				}
				break;
			case 24:
				DebugEnterAlt(24);
				// Java6ColorizerLexer.g:501:9: '\\u0400' .. '\\u0481'
				{
				DebugLocation(501, 9);
				MatchRange('\u0400','\u0481'); if (state.failed) return;

				}
				break;
			case 25:
				DebugEnterAlt(25);
				// Java6ColorizerLexer.g:502:9: '\\u048a' .. '\\u04ce'
				{
				DebugLocation(502, 9);
				MatchRange('\u048A','\u04CE'); if (state.failed) return;

				}
				break;
			case 26:
				DebugEnterAlt(26);
				// Java6ColorizerLexer.g:503:9: '\\u04d0' .. '\\u04f5'
				{
				DebugLocation(503, 9);
				MatchRange('\u04D0','\u04F5'); if (state.failed) return;

				}
				break;
			case 27:
				DebugEnterAlt(27);
				// Java6ColorizerLexer.g:504:9: '\\u04f8' .. '\\u04f9'
				{
				DebugLocation(504, 9);
				MatchRange('\u04F8','\u04F9'); if (state.failed) return;

				}
				break;
			case 28:
				DebugEnterAlt(28);
				// Java6ColorizerLexer.g:505:9: '\\u0500' .. '\\u050f'
				{
				DebugLocation(505, 9);
				MatchRange('\u0500','\u050F'); if (state.failed) return;

				}
				break;
			case 29:
				DebugEnterAlt(29);
				// Java6ColorizerLexer.g:506:9: '\\u0531' .. '\\u0556'
				{
				DebugLocation(506, 9);
				MatchRange('\u0531','\u0556'); if (state.failed) return;

				}
				break;
			case 30:
				DebugEnterAlt(30);
				// Java6ColorizerLexer.g:507:9: '\\u0559'
				{
				DebugLocation(507, 9);
				Match('\u0559'); if (state.failed) return;

				}
				break;
			case 31:
				DebugEnterAlt(31);
				// Java6ColorizerLexer.g:508:9: '\\u0561' .. '\\u0587'
				{
				DebugLocation(508, 9);
				MatchRange('\u0561','\u0587'); if (state.failed) return;

				}
				break;
			case 32:
				DebugEnterAlt(32);
				// Java6ColorizerLexer.g:509:9: '\\u05d0' .. '\\u05ea'
				{
				DebugLocation(509, 9);
				MatchRange('\u05D0','\u05EA'); if (state.failed) return;

				}
				break;
			case 33:
				DebugEnterAlt(33);
				// Java6ColorizerLexer.g:510:9: '\\u05f0' .. '\\u05f2'
				{
				DebugLocation(510, 9);
				MatchRange('\u05F0','\u05F2'); if (state.failed) return;

				}
				break;
			case 34:
				DebugEnterAlt(34);
				// Java6ColorizerLexer.g:511:9: '\\u0621' .. '\\u063a'
				{
				DebugLocation(511, 9);
				MatchRange('\u0621','\u063A'); if (state.failed) return;

				}
				break;
			case 35:
				DebugEnterAlt(35);
				// Java6ColorizerLexer.g:512:9: '\\u0640' .. '\\u064a'
				{
				DebugLocation(512, 9);
				MatchRange('\u0640','\u064A'); if (state.failed) return;

				}
				break;
			case 36:
				DebugEnterAlt(36);
				// Java6ColorizerLexer.g:513:9: '\\u066e' .. '\\u066f'
				{
				DebugLocation(513, 9);
				MatchRange('\u066E','\u066F'); if (state.failed) return;

				}
				break;
			case 37:
				DebugEnterAlt(37);
				// Java6ColorizerLexer.g:514:9: '\\u0671' .. '\\u06d3'
				{
				DebugLocation(514, 9);
				MatchRange('\u0671','\u06D3'); if (state.failed) return;

				}
				break;
			case 38:
				DebugEnterAlt(38);
				// Java6ColorizerLexer.g:515:9: '\\u06d5'
				{
				DebugLocation(515, 9);
				Match('\u06D5'); if (state.failed) return;

				}
				break;
			case 39:
				DebugEnterAlt(39);
				// Java6ColorizerLexer.g:516:9: '\\u06e5' .. '\\u06e6'
				{
				DebugLocation(516, 9);
				MatchRange('\u06E5','\u06E6'); if (state.failed) return;

				}
				break;
			case 40:
				DebugEnterAlt(40);
				// Java6ColorizerLexer.g:517:9: '\\u06ee' .. '\\u06ef'
				{
				DebugLocation(517, 9);
				MatchRange('\u06EE','\u06EF'); if (state.failed) return;

				}
				break;
			case 41:
				DebugEnterAlt(41);
				// Java6ColorizerLexer.g:518:9: '\\u06fa' .. '\\u06fc'
				{
				DebugLocation(518, 9);
				MatchRange('\u06FA','\u06FC'); if (state.failed) return;

				}
				break;
			case 42:
				DebugEnterAlt(42);
				// Java6ColorizerLexer.g:519:9: '\\u06ff'
				{
				DebugLocation(519, 9);
				Match('\u06FF'); if (state.failed) return;

				}
				break;
			case 43:
				DebugEnterAlt(43);
				// Java6ColorizerLexer.g:520:9: '\\u0710'
				{
				DebugLocation(520, 9);
				Match('\u0710'); if (state.failed) return;

				}
				break;
			case 44:
				DebugEnterAlt(44);
				// Java6ColorizerLexer.g:521:9: '\\u0712' .. '\\u072f'
				{
				DebugLocation(521, 9);
				MatchRange('\u0712','\u072F'); if (state.failed) return;

				}
				break;
			case 45:
				DebugEnterAlt(45);
				// Java6ColorizerLexer.g:522:9: '\\u074d' .. '\\u074f'
				{
				DebugLocation(522, 9);
				MatchRange('\u074D','\u074F'); if (state.failed) return;

				}
				break;
			case 46:
				DebugEnterAlt(46);
				// Java6ColorizerLexer.g:523:9: '\\u0780' .. '\\u07a5'
				{
				DebugLocation(523, 9);
				MatchRange('\u0780','\u07A5'); if (state.failed) return;

				}
				break;
			case 47:
				DebugEnterAlt(47);
				// Java6ColorizerLexer.g:524:9: '\\u07b1'
				{
				DebugLocation(524, 9);
				Match('\u07B1'); if (state.failed) return;

				}
				break;
			case 48:
				DebugEnterAlt(48);
				// Java6ColorizerLexer.g:525:9: '\\u0904' .. '\\u0939'
				{
				DebugLocation(525, 9);
				MatchRange('\u0904','\u0939'); if (state.failed) return;

				}
				break;
			case 49:
				DebugEnterAlt(49);
				// Java6ColorizerLexer.g:526:9: '\\u093d'
				{
				DebugLocation(526, 9);
				Match('\u093D'); if (state.failed) return;

				}
				break;
			case 50:
				DebugEnterAlt(50);
				// Java6ColorizerLexer.g:527:9: '\\u0950'
				{
				DebugLocation(527, 9);
				Match('\u0950'); if (state.failed) return;

				}
				break;
			case 51:
				DebugEnterAlt(51);
				// Java6ColorizerLexer.g:528:9: '\\u0958' .. '\\u0961'
				{
				DebugLocation(528, 9);
				MatchRange('\u0958','\u0961'); if (state.failed) return;

				}
				break;
			case 52:
				DebugEnterAlt(52);
				// Java6ColorizerLexer.g:529:9: '\\u0985' .. '\\u098c'
				{
				DebugLocation(529, 9);
				MatchRange('\u0985','\u098C'); if (state.failed) return;

				}
				break;
			case 53:
				DebugEnterAlt(53);
				// Java6ColorizerLexer.g:530:9: '\\u098f' .. '\\u0990'
				{
				DebugLocation(530, 9);
				MatchRange('\u098F','\u0990'); if (state.failed) return;

				}
				break;
			case 54:
				DebugEnterAlt(54);
				// Java6ColorizerLexer.g:531:9: '\\u0993' .. '\\u09a8'
				{
				DebugLocation(531, 9);
				MatchRange('\u0993','\u09A8'); if (state.failed) return;

				}
				break;
			case 55:
				DebugEnterAlt(55);
				// Java6ColorizerLexer.g:532:9: '\\u09aa' .. '\\u09b0'
				{
				DebugLocation(532, 9);
				MatchRange('\u09AA','\u09B0'); if (state.failed) return;

				}
				break;
			case 56:
				DebugEnterAlt(56);
				// Java6ColorizerLexer.g:533:9: '\\u09b2'
				{
				DebugLocation(533, 9);
				Match('\u09B2'); if (state.failed) return;

				}
				break;
			case 57:
				DebugEnterAlt(57);
				// Java6ColorizerLexer.g:534:9: '\\u09b6' .. '\\u09b9'
				{
				DebugLocation(534, 9);
				MatchRange('\u09B6','\u09B9'); if (state.failed) return;

				}
				break;
			case 58:
				DebugEnterAlt(58);
				// Java6ColorizerLexer.g:535:9: '\\u09bd'
				{
				DebugLocation(535, 9);
				Match('\u09BD'); if (state.failed) return;

				}
				break;
			case 59:
				DebugEnterAlt(59);
				// Java6ColorizerLexer.g:536:9: '\\u09dc' .. '\\u09dd'
				{
				DebugLocation(536, 9);
				MatchRange('\u09DC','\u09DD'); if (state.failed) return;

				}
				break;
			case 60:
				DebugEnterAlt(60);
				// Java6ColorizerLexer.g:537:9: '\\u09df' .. '\\u09e1'
				{
				DebugLocation(537, 9);
				MatchRange('\u09DF','\u09E1'); if (state.failed) return;

				}
				break;
			case 61:
				DebugEnterAlt(61);
				// Java6ColorizerLexer.g:538:9: '\\u09f0' .. '\\u09f3'
				{
				DebugLocation(538, 9);
				MatchRange('\u09F0','\u09F3'); if (state.failed) return;

				}
				break;
			case 62:
				DebugEnterAlt(62);
				// Java6ColorizerLexer.g:539:9: '\\u0a05' .. '\\u0a0a'
				{
				DebugLocation(539, 9);
				MatchRange('\u0A05','\u0A0A'); if (state.failed) return;

				}
				break;
			case 63:
				DebugEnterAlt(63);
				// Java6ColorizerLexer.g:540:9: '\\u0a0f' .. '\\u0a10'
				{
				DebugLocation(540, 9);
				MatchRange('\u0A0F','\u0A10'); if (state.failed) return;

				}
				break;
			case 64:
				DebugEnterAlt(64);
				// Java6ColorizerLexer.g:541:9: '\\u0a13' .. '\\u0a28'
				{
				DebugLocation(541, 9);
				MatchRange('\u0A13','\u0A28'); if (state.failed) return;

				}
				break;
			case 65:
				DebugEnterAlt(65);
				// Java6ColorizerLexer.g:542:9: '\\u0a2a' .. '\\u0a30'
				{
				DebugLocation(542, 9);
				MatchRange('\u0A2A','\u0A30'); if (state.failed) return;

				}
				break;
			case 66:
				DebugEnterAlt(66);
				// Java6ColorizerLexer.g:543:9: '\\u0a32' .. '\\u0a33'
				{
				DebugLocation(543, 9);
				MatchRange('\u0A32','\u0A33'); if (state.failed) return;

				}
				break;
			case 67:
				DebugEnterAlt(67);
				// Java6ColorizerLexer.g:544:9: '\\u0a35' .. '\\u0a36'
				{
				DebugLocation(544, 9);
				MatchRange('\u0A35','\u0A36'); if (state.failed) return;

				}
				break;
			case 68:
				DebugEnterAlt(68);
				// Java6ColorizerLexer.g:545:9: '\\u0a38' .. '\\u0a39'
				{
				DebugLocation(545, 9);
				MatchRange('\u0A38','\u0A39'); if (state.failed) return;

				}
				break;
			case 69:
				DebugEnterAlt(69);
				// Java6ColorizerLexer.g:546:9: '\\u0a59' .. '\\u0a5c'
				{
				DebugLocation(546, 9);
				MatchRange('\u0A59','\u0A5C'); if (state.failed) return;

				}
				break;
			case 70:
				DebugEnterAlt(70);
				// Java6ColorizerLexer.g:547:9: '\\u0a5e'
				{
				DebugLocation(547, 9);
				Match('\u0A5E'); if (state.failed) return;

				}
				break;
			case 71:
				DebugEnterAlt(71);
				// Java6ColorizerLexer.g:548:9: '\\u0a72' .. '\\u0a74'
				{
				DebugLocation(548, 9);
				MatchRange('\u0A72','\u0A74'); if (state.failed) return;

				}
				break;
			case 72:
				DebugEnterAlt(72);
				// Java6ColorizerLexer.g:549:9: '\\u0a85' .. '\\u0a8d'
				{
				DebugLocation(549, 9);
				MatchRange('\u0A85','\u0A8D'); if (state.failed) return;

				}
				break;
			case 73:
				DebugEnterAlt(73);
				// Java6ColorizerLexer.g:550:9: '\\u0a8f' .. '\\u0a91'
				{
				DebugLocation(550, 9);
				MatchRange('\u0A8F','\u0A91'); if (state.failed) return;

				}
				break;
			case 74:
				DebugEnterAlt(74);
				// Java6ColorizerLexer.g:551:9: '\\u0a93' .. '\\u0aa8'
				{
				DebugLocation(551, 9);
				MatchRange('\u0A93','\u0AA8'); if (state.failed) return;

				}
				break;
			case 75:
				DebugEnterAlt(75);
				// Java6ColorizerLexer.g:552:9: '\\u0aaa' .. '\\u0ab0'
				{
				DebugLocation(552, 9);
				MatchRange('\u0AAA','\u0AB0'); if (state.failed) return;

				}
				break;
			case 76:
				DebugEnterAlt(76);
				// Java6ColorizerLexer.g:553:9: '\\u0ab2' .. '\\u0ab3'
				{
				DebugLocation(553, 9);
				MatchRange('\u0AB2','\u0AB3'); if (state.failed) return;

				}
				break;
			case 77:
				DebugEnterAlt(77);
				// Java6ColorizerLexer.g:554:9: '\\u0ab5' .. '\\u0ab9'
				{
				DebugLocation(554, 9);
				MatchRange('\u0AB5','\u0AB9'); if (state.failed) return;

				}
				break;
			case 78:
				DebugEnterAlt(78);
				// Java6ColorizerLexer.g:555:9: '\\u0abd'
				{
				DebugLocation(555, 9);
				Match('\u0ABD'); if (state.failed) return;

				}
				break;
			case 79:
				DebugEnterAlt(79);
				// Java6ColorizerLexer.g:556:9: '\\u0ad0'
				{
				DebugLocation(556, 9);
				Match('\u0AD0'); if (state.failed) return;

				}
				break;
			case 80:
				DebugEnterAlt(80);
				// Java6ColorizerLexer.g:557:9: '\\u0ae0' .. '\\u0ae1'
				{
				DebugLocation(557, 9);
				MatchRange('\u0AE0','\u0AE1'); if (state.failed) return;

				}
				break;
			case 81:
				DebugEnterAlt(81);
				// Java6ColorizerLexer.g:558:9: '\\u0af1'
				{
				DebugLocation(558, 9);
				Match('\u0AF1'); if (state.failed) return;

				}
				break;
			case 82:
				DebugEnterAlt(82);
				// Java6ColorizerLexer.g:559:9: '\\u0b05' .. '\\u0b0c'
				{
				DebugLocation(559, 9);
				MatchRange('\u0B05','\u0B0C'); if (state.failed) return;

				}
				break;
			case 83:
				DebugEnterAlt(83);
				// Java6ColorizerLexer.g:560:9: '\\u0b0f' .. '\\u0b10'
				{
				DebugLocation(560, 9);
				MatchRange('\u0B0F','\u0B10'); if (state.failed) return;

				}
				break;
			case 84:
				DebugEnterAlt(84);
				// Java6ColorizerLexer.g:561:9: '\\u0b13' .. '\\u0b28'
				{
				DebugLocation(561, 9);
				MatchRange('\u0B13','\u0B28'); if (state.failed) return;

				}
				break;
			case 85:
				DebugEnterAlt(85);
				// Java6ColorizerLexer.g:562:9: '\\u0b2a' .. '\\u0b30'
				{
				DebugLocation(562, 9);
				MatchRange('\u0B2A','\u0B30'); if (state.failed) return;

				}
				break;
			case 86:
				DebugEnterAlt(86);
				// Java6ColorizerLexer.g:563:9: '\\u0b32' .. '\\u0b33'
				{
				DebugLocation(563, 9);
				MatchRange('\u0B32','\u0B33'); if (state.failed) return;

				}
				break;
			case 87:
				DebugEnterAlt(87);
				// Java6ColorizerLexer.g:564:9: '\\u0b35' .. '\\u0b39'
				{
				DebugLocation(564, 9);
				MatchRange('\u0B35','\u0B39'); if (state.failed) return;

				}
				break;
			case 88:
				DebugEnterAlt(88);
				// Java6ColorizerLexer.g:565:9: '\\u0b3d'
				{
				DebugLocation(565, 9);
				Match('\u0B3D'); if (state.failed) return;

				}
				break;
			case 89:
				DebugEnterAlt(89);
				// Java6ColorizerLexer.g:566:9: '\\u0b5c' .. '\\u0b5d'
				{
				DebugLocation(566, 9);
				MatchRange('\u0B5C','\u0B5D'); if (state.failed) return;

				}
				break;
			case 90:
				DebugEnterAlt(90);
				// Java6ColorizerLexer.g:567:9: '\\u0b5f' .. '\\u0b61'
				{
				DebugLocation(567, 9);
				MatchRange('\u0B5F','\u0B61'); if (state.failed) return;

				}
				break;
			case 91:
				DebugEnterAlt(91);
				// Java6ColorizerLexer.g:568:9: '\\u0b71'
				{
				DebugLocation(568, 9);
				Match('\u0B71'); if (state.failed) return;

				}
				break;
			case 92:
				DebugEnterAlt(92);
				// Java6ColorizerLexer.g:569:9: '\\u0b83'
				{
				DebugLocation(569, 9);
				Match('\u0B83'); if (state.failed) return;

				}
				break;
			case 93:
				DebugEnterAlt(93);
				// Java6ColorizerLexer.g:570:9: '\\u0b85' .. '\\u0b8a'
				{
				DebugLocation(570, 9);
				MatchRange('\u0B85','\u0B8A'); if (state.failed) return;

				}
				break;
			case 94:
				DebugEnterAlt(94);
				// Java6ColorizerLexer.g:571:9: '\\u0b8e' .. '\\u0b90'
				{
				DebugLocation(571, 9);
				MatchRange('\u0B8E','\u0B90'); if (state.failed) return;

				}
				break;
			case 95:
				DebugEnterAlt(95);
				// Java6ColorizerLexer.g:572:9: '\\u0b92' .. '\\u0b95'
				{
				DebugLocation(572, 9);
				MatchRange('\u0B92','\u0B95'); if (state.failed) return;

				}
				break;
			case 96:
				DebugEnterAlt(96);
				// Java6ColorizerLexer.g:573:9: '\\u0b99' .. '\\u0b9a'
				{
				DebugLocation(573, 9);
				MatchRange('\u0B99','\u0B9A'); if (state.failed) return;

				}
				break;
			case 97:
				DebugEnterAlt(97);
				// Java6ColorizerLexer.g:574:9: '\\u0b9c'
				{
				DebugLocation(574, 9);
				Match('\u0B9C'); if (state.failed) return;

				}
				break;
			case 98:
				DebugEnterAlt(98);
				// Java6ColorizerLexer.g:575:9: '\\u0b9e' .. '\\u0b9f'
				{
				DebugLocation(575, 9);
				MatchRange('\u0B9E','\u0B9F'); if (state.failed) return;

				}
				break;
			case 99:
				DebugEnterAlt(99);
				// Java6ColorizerLexer.g:576:9: '\\u0ba3' .. '\\u0ba4'
				{
				DebugLocation(576, 9);
				MatchRange('\u0BA3','\u0BA4'); if (state.failed) return;

				}
				break;
			case 100:
				DebugEnterAlt(100);
				// Java6ColorizerLexer.g:577:9: '\\u0ba8' .. '\\u0baa'
				{
				DebugLocation(577, 9);
				MatchRange('\u0BA8','\u0BAA'); if (state.failed) return;

				}
				break;
			case 101:
				DebugEnterAlt(101);
				// Java6ColorizerLexer.g:578:9: '\\u0bae' .. '\\u0bb5'
				{
				DebugLocation(578, 9);
				MatchRange('\u0BAE','\u0BB5'); if (state.failed) return;

				}
				break;
			case 102:
				DebugEnterAlt(102);
				// Java6ColorizerLexer.g:579:9: '\\u0bb7' .. '\\u0bb9'
				{
				DebugLocation(579, 9);
				MatchRange('\u0BB7','\u0BB9'); if (state.failed) return;

				}
				break;
			case 103:
				DebugEnterAlt(103);
				// Java6ColorizerLexer.g:580:9: '\\u0bf9'
				{
				DebugLocation(580, 9);
				Match('\u0BF9'); if (state.failed) return;

				}
				break;
			case 104:
				DebugEnterAlt(104);
				// Java6ColorizerLexer.g:581:9: '\\u0c05' .. '\\u0c0c'
				{
				DebugLocation(581, 9);
				MatchRange('\u0C05','\u0C0C'); if (state.failed) return;

				}
				break;
			case 105:
				DebugEnterAlt(105);
				// Java6ColorizerLexer.g:582:9: '\\u0c0e' .. '\\u0c10'
				{
				DebugLocation(582, 9);
				MatchRange('\u0C0E','\u0C10'); if (state.failed) return;

				}
				break;
			case 106:
				DebugEnterAlt(106);
				// Java6ColorizerLexer.g:583:9: '\\u0c12' .. '\\u0c28'
				{
				DebugLocation(583, 9);
				MatchRange('\u0C12','\u0C28'); if (state.failed) return;

				}
				break;
			case 107:
				DebugEnterAlt(107);
				// Java6ColorizerLexer.g:584:9: '\\u0c2a' .. '\\u0c33'
				{
				DebugLocation(584, 9);
				MatchRange('\u0C2A','\u0C33'); if (state.failed) return;

				}
				break;
			case 108:
				DebugEnterAlt(108);
				// Java6ColorizerLexer.g:585:9: '\\u0c35' .. '\\u0c39'
				{
				DebugLocation(585, 9);
				MatchRange('\u0C35','\u0C39'); if (state.failed) return;

				}
				break;
			case 109:
				DebugEnterAlt(109);
				// Java6ColorizerLexer.g:586:9: '\\u0c60' .. '\\u0c61'
				{
				DebugLocation(586, 9);
				MatchRange('\u0C60','\u0C61'); if (state.failed) return;

				}
				break;
			case 110:
				DebugEnterAlt(110);
				// Java6ColorizerLexer.g:587:9: '\\u0c85' .. '\\u0c8c'
				{
				DebugLocation(587, 9);
				MatchRange('\u0C85','\u0C8C'); if (state.failed) return;

				}
				break;
			case 111:
				DebugEnterAlt(111);
				// Java6ColorizerLexer.g:588:9: '\\u0c8e' .. '\\u0c90'
				{
				DebugLocation(588, 9);
				MatchRange('\u0C8E','\u0C90'); if (state.failed) return;

				}
				break;
			case 112:
				DebugEnterAlt(112);
				// Java6ColorizerLexer.g:589:9: '\\u0c92' .. '\\u0ca8'
				{
				DebugLocation(589, 9);
				MatchRange('\u0C92','\u0CA8'); if (state.failed) return;

				}
				break;
			case 113:
				DebugEnterAlt(113);
				// Java6ColorizerLexer.g:590:9: '\\u0caa' .. '\\u0cb3'
				{
				DebugLocation(590, 9);
				MatchRange('\u0CAA','\u0CB3'); if (state.failed) return;

				}
				break;
			case 114:
				DebugEnterAlt(114);
				// Java6ColorizerLexer.g:591:9: '\\u0cb5' .. '\\u0cb9'
				{
				DebugLocation(591, 9);
				MatchRange('\u0CB5','\u0CB9'); if (state.failed) return;

				}
				break;
			case 115:
				DebugEnterAlt(115);
				// Java6ColorizerLexer.g:592:9: '\\u0cbd'
				{
				DebugLocation(592, 9);
				Match('\u0CBD'); if (state.failed) return;

				}
				break;
			case 116:
				DebugEnterAlt(116);
				// Java6ColorizerLexer.g:593:9: '\\u0cde'
				{
				DebugLocation(593, 9);
				Match('\u0CDE'); if (state.failed) return;

				}
				break;
			case 117:
				DebugEnterAlt(117);
				// Java6ColorizerLexer.g:594:9: '\\u0ce0' .. '\\u0ce1'
				{
				DebugLocation(594, 9);
				MatchRange('\u0CE0','\u0CE1'); if (state.failed) return;

				}
				break;
			case 118:
				DebugEnterAlt(118);
				// Java6ColorizerLexer.g:595:9: '\\u0d05' .. '\\u0d0c'
				{
				DebugLocation(595, 9);
				MatchRange('\u0D05','\u0D0C'); if (state.failed) return;

				}
				break;
			case 119:
				DebugEnterAlt(119);
				// Java6ColorizerLexer.g:596:9: '\\u0d0e' .. '\\u0d10'
				{
				DebugLocation(596, 9);
				MatchRange('\u0D0E','\u0D10'); if (state.failed) return;

				}
				break;
			case 120:
				DebugEnterAlt(120);
				// Java6ColorizerLexer.g:597:9: '\\u0d12' .. '\\u0d28'
				{
				DebugLocation(597, 9);
				MatchRange('\u0D12','\u0D28'); if (state.failed) return;

				}
				break;
			case 121:
				DebugEnterAlt(121);
				// Java6ColorizerLexer.g:598:9: '\\u0d2a' .. '\\u0d39'
				{
				DebugLocation(598, 9);
				MatchRange('\u0D2A','\u0D39'); if (state.failed) return;

				}
				break;
			case 122:
				DebugEnterAlt(122);
				// Java6ColorizerLexer.g:599:9: '\\u0d60' .. '\\u0d61'
				{
				DebugLocation(599, 9);
				MatchRange('\u0D60','\u0D61'); if (state.failed) return;

				}
				break;
			case 123:
				DebugEnterAlt(123);
				// Java6ColorizerLexer.g:600:9: '\\u0d85' .. '\\u0d96'
				{
				DebugLocation(600, 9);
				MatchRange('\u0D85','\u0D96'); if (state.failed) return;

				}
				break;
			case 124:
				DebugEnterAlt(124);
				// Java6ColorizerLexer.g:601:9: '\\u0d9a' .. '\\u0db1'
				{
				DebugLocation(601, 9);
				MatchRange('\u0D9A','\u0DB1'); if (state.failed) return;

				}
				break;
			case 125:
				DebugEnterAlt(125);
				// Java6ColorizerLexer.g:602:9: '\\u0db3' .. '\\u0dbb'
				{
				DebugLocation(602, 9);
				MatchRange('\u0DB3','\u0DBB'); if (state.failed) return;

				}
				break;
			case 126:
				DebugEnterAlt(126);
				// Java6ColorizerLexer.g:603:9: '\\u0dbd'
				{
				DebugLocation(603, 9);
				Match('\u0DBD'); if (state.failed) return;

				}
				break;
			case 127:
				DebugEnterAlt(127);
				// Java6ColorizerLexer.g:604:9: '\\u0dc0' .. '\\u0dc6'
				{
				DebugLocation(604, 9);
				MatchRange('\u0DC0','\u0DC6'); if (state.failed) return;

				}
				break;
			case 128:
				DebugEnterAlt(128);
				// Java6ColorizerLexer.g:605:9: '\\u0e01' .. '\\u0e30'
				{
				DebugLocation(605, 9);
				MatchRange('\u0E01','\u0E30'); if (state.failed) return;

				}
				break;
			case 129:
				DebugEnterAlt(129);
				// Java6ColorizerLexer.g:606:9: '\\u0e32' .. '\\u0e33'
				{
				DebugLocation(606, 9);
				MatchRange('\u0E32','\u0E33'); if (state.failed) return;

				}
				break;
			case 130:
				DebugEnterAlt(130);
				// Java6ColorizerLexer.g:607:9: '\\u0e3f' .. '\\u0e46'
				{
				DebugLocation(607, 9);
				MatchRange('\u0E3F','\u0E46'); if (state.failed) return;

				}
				break;
			case 131:
				DebugEnterAlt(131);
				// Java6ColorizerLexer.g:608:9: '\\u0e81' .. '\\u0e82'
				{
				DebugLocation(608, 9);
				MatchRange('\u0E81','\u0E82'); if (state.failed) return;

				}
				break;
			case 132:
				DebugEnterAlt(132);
				// Java6ColorizerLexer.g:609:9: '\\u0e84'
				{
				DebugLocation(609, 9);
				Match('\u0E84'); if (state.failed) return;

				}
				break;
			case 133:
				DebugEnterAlt(133);
				// Java6ColorizerLexer.g:610:9: '\\u0e87' .. '\\u0e88'
				{
				DebugLocation(610, 9);
				MatchRange('\u0E87','\u0E88'); if (state.failed) return;

				}
				break;
			case 134:
				DebugEnterAlt(134);
				// Java6ColorizerLexer.g:611:9: '\\u0e8a'
				{
				DebugLocation(611, 9);
				Match('\u0E8A'); if (state.failed) return;

				}
				break;
			case 135:
				DebugEnterAlt(135);
				// Java6ColorizerLexer.g:612:9: '\\u0e8d'
				{
				DebugLocation(612, 9);
				Match('\u0E8D'); if (state.failed) return;

				}
				break;
			case 136:
				DebugEnterAlt(136);
				// Java6ColorizerLexer.g:613:9: '\\u0e94' .. '\\u0e97'
				{
				DebugLocation(613, 9);
				MatchRange('\u0E94','\u0E97'); if (state.failed) return;

				}
				break;
			case 137:
				DebugEnterAlt(137);
				// Java6ColorizerLexer.g:614:9: '\\u0e99' .. '\\u0e9f'
				{
				DebugLocation(614, 9);
				MatchRange('\u0E99','\u0E9F'); if (state.failed) return;

				}
				break;
			case 138:
				DebugEnterAlt(138);
				// Java6ColorizerLexer.g:615:9: '\\u0ea1' .. '\\u0ea3'
				{
				DebugLocation(615, 9);
				MatchRange('\u0EA1','\u0EA3'); if (state.failed) return;

				}
				break;
			case 139:
				DebugEnterAlt(139);
				// Java6ColorizerLexer.g:616:9: '\\u0ea5'
				{
				DebugLocation(616, 9);
				Match('\u0EA5'); if (state.failed) return;

				}
				break;
			case 140:
				DebugEnterAlt(140);
				// Java6ColorizerLexer.g:617:9: '\\u0ea7'
				{
				DebugLocation(617, 9);
				Match('\u0EA7'); if (state.failed) return;

				}
				break;
			case 141:
				DebugEnterAlt(141);
				// Java6ColorizerLexer.g:618:9: '\\u0eaa' .. '\\u0eab'
				{
				DebugLocation(618, 9);
				MatchRange('\u0EAA','\u0EAB'); if (state.failed) return;

				}
				break;
			case 142:
				DebugEnterAlt(142);
				// Java6ColorizerLexer.g:619:9: '\\u0ead' .. '\\u0eb0'
				{
				DebugLocation(619, 9);
				MatchRange('\u0EAD','\u0EB0'); if (state.failed) return;

				}
				break;
			case 143:
				DebugEnterAlt(143);
				// Java6ColorizerLexer.g:620:9: '\\u0eb2' .. '\\u0eb3'
				{
				DebugLocation(620, 9);
				MatchRange('\u0EB2','\u0EB3'); if (state.failed) return;

				}
				break;
			case 144:
				DebugEnterAlt(144);
				// Java6ColorizerLexer.g:621:9: '\\u0ebd'
				{
				DebugLocation(621, 9);
				Match('\u0EBD'); if (state.failed) return;

				}
				break;
			case 145:
				DebugEnterAlt(145);
				// Java6ColorizerLexer.g:622:9: '\\u0ec0' .. '\\u0ec4'
				{
				DebugLocation(622, 9);
				MatchRange('\u0EC0','\u0EC4'); if (state.failed) return;

				}
				break;
			case 146:
				DebugEnterAlt(146);
				// Java6ColorizerLexer.g:623:9: '\\u0ec6'
				{
				DebugLocation(623, 9);
				Match('\u0EC6'); if (state.failed) return;

				}
				break;
			case 147:
				DebugEnterAlt(147);
				// Java6ColorizerLexer.g:624:9: '\\u0edc' .. '\\u0edd'
				{
				DebugLocation(624, 9);
				MatchRange('\u0EDC','\u0EDD'); if (state.failed) return;

				}
				break;
			case 148:
				DebugEnterAlt(148);
				// Java6ColorizerLexer.g:625:9: '\\u0f00'
				{
				DebugLocation(625, 9);
				Match('\u0F00'); if (state.failed) return;

				}
				break;
			case 149:
				DebugEnterAlt(149);
				// Java6ColorizerLexer.g:626:9: '\\u0f40' .. '\\u0f47'
				{
				DebugLocation(626, 9);
				MatchRange('\u0F40','\u0F47'); if (state.failed) return;

				}
				break;
			case 150:
				DebugEnterAlt(150);
				// Java6ColorizerLexer.g:627:9: '\\u0f49' .. '\\u0f6a'
				{
				DebugLocation(627, 9);
				MatchRange('\u0F49','\u0F6A'); if (state.failed) return;

				}
				break;
			case 151:
				DebugEnterAlt(151);
				// Java6ColorizerLexer.g:628:9: '\\u0f88' .. '\\u0f8b'
				{
				DebugLocation(628, 9);
				MatchRange('\u0F88','\u0F8B'); if (state.failed) return;

				}
				break;
			case 152:
				DebugEnterAlt(152);
				// Java6ColorizerLexer.g:629:9: '\\u1000' .. '\\u1021'
				{
				DebugLocation(629, 9);
				MatchRange('\u1000','\u1021'); if (state.failed) return;

				}
				break;
			case 153:
				DebugEnterAlt(153);
				// Java6ColorizerLexer.g:630:9: '\\u1023' .. '\\u1027'
				{
				DebugLocation(630, 9);
				MatchRange('\u1023','\u1027'); if (state.failed) return;

				}
				break;
			case 154:
				DebugEnterAlt(154);
				// Java6ColorizerLexer.g:631:9: '\\u1029' .. '\\u102a'
				{
				DebugLocation(631, 9);
				MatchRange('\u1029','\u102A'); if (state.failed) return;

				}
				break;
			case 155:
				DebugEnterAlt(155);
				// Java6ColorizerLexer.g:632:9: '\\u1050' .. '\\u1055'
				{
				DebugLocation(632, 9);
				MatchRange('\u1050','\u1055'); if (state.failed) return;

				}
				break;
			case 156:
				DebugEnterAlt(156);
				// Java6ColorizerLexer.g:633:9: '\\u10a0' .. '\\u10c5'
				{
				DebugLocation(633, 9);
				MatchRange('\u10A0','\u10C5'); if (state.failed) return;

				}
				break;
			case 157:
				DebugEnterAlt(157);
				// Java6ColorizerLexer.g:634:9: '\\u10d0' .. '\\u10f8'
				{
				DebugLocation(634, 9);
				MatchRange('\u10D0','\u10F8'); if (state.failed) return;

				}
				break;
			case 158:
				DebugEnterAlt(158);
				// Java6ColorizerLexer.g:635:9: '\\u1100' .. '\\u1159'
				{
				DebugLocation(635, 9);
				MatchRange('\u1100','\u1159'); if (state.failed) return;

				}
				break;
			case 159:
				DebugEnterAlt(159);
				// Java6ColorizerLexer.g:636:9: '\\u115f' .. '\\u11a2'
				{
				DebugLocation(636, 9);
				MatchRange('\u115F','\u11A2'); if (state.failed) return;

				}
				break;
			case 160:
				DebugEnterAlt(160);
				// Java6ColorizerLexer.g:637:9: '\\u11a8' .. '\\u11f9'
				{
				DebugLocation(637, 9);
				MatchRange('\u11A8','\u11F9'); if (state.failed) return;

				}
				break;
			case 161:
				DebugEnterAlt(161);
				// Java6ColorizerLexer.g:638:9: '\\u1200' .. '\\u1206'
				{
				DebugLocation(638, 9);
				MatchRange('\u1200','\u1206'); if (state.failed) return;

				}
				break;
			case 162:
				DebugEnterAlt(162);
				// Java6ColorizerLexer.g:639:9: '\\u1208' .. '\\u1246'
				{
				DebugLocation(639, 9);
				MatchRange('\u1208','\u1246'); if (state.failed) return;

				}
				break;
			case 163:
				DebugEnterAlt(163);
				// Java6ColorizerLexer.g:640:9: '\\u1248'
				{
				DebugLocation(640, 9);
				Match('\u1248'); if (state.failed) return;

				}
				break;
			case 164:
				DebugEnterAlt(164);
				// Java6ColorizerLexer.g:641:9: '\\u124a' .. '\\u124d'
				{
				DebugLocation(641, 9);
				MatchRange('\u124A','\u124D'); if (state.failed) return;

				}
				break;
			case 165:
				DebugEnterAlt(165);
				// Java6ColorizerLexer.g:642:9: '\\u1250' .. '\\u1256'
				{
				DebugLocation(642, 9);
				MatchRange('\u1250','\u1256'); if (state.failed) return;

				}
				break;
			case 166:
				DebugEnterAlt(166);
				// Java6ColorizerLexer.g:643:9: '\\u1258'
				{
				DebugLocation(643, 9);
				Match('\u1258'); if (state.failed) return;

				}
				break;
			case 167:
				DebugEnterAlt(167);
				// Java6ColorizerLexer.g:644:9: '\\u125a' .. '\\u125d'
				{
				DebugLocation(644, 9);
				MatchRange('\u125A','\u125D'); if (state.failed) return;

				}
				break;
			case 168:
				DebugEnterAlt(168);
				// Java6ColorizerLexer.g:645:9: '\\u1260' .. '\\u1286'
				{
				DebugLocation(645, 9);
				MatchRange('\u1260','\u1286'); if (state.failed) return;

				}
				break;
			case 169:
				DebugEnterAlt(169);
				// Java6ColorizerLexer.g:646:9: '\\u1288'
				{
				DebugLocation(646, 9);
				Match('\u1288'); if (state.failed) return;

				}
				break;
			case 170:
				DebugEnterAlt(170);
				// Java6ColorizerLexer.g:647:9: '\\u128a' .. '\\u128d'
				{
				DebugLocation(647, 9);
				MatchRange('\u128A','\u128D'); if (state.failed) return;

				}
				break;
			case 171:
				DebugEnterAlt(171);
				// Java6ColorizerLexer.g:648:9: '\\u1290' .. '\\u12ae'
				{
				DebugLocation(648, 9);
				MatchRange('\u1290','\u12AE'); if (state.failed) return;

				}
				break;
			case 172:
				DebugEnterAlt(172);
				// Java6ColorizerLexer.g:649:9: '\\u12b0'
				{
				DebugLocation(649, 9);
				Match('\u12B0'); if (state.failed) return;

				}
				break;
			case 173:
				DebugEnterAlt(173);
				// Java6ColorizerLexer.g:650:9: '\\u12b2' .. '\\u12b5'
				{
				DebugLocation(650, 9);
				MatchRange('\u12B2','\u12B5'); if (state.failed) return;

				}
				break;
			case 174:
				DebugEnterAlt(174);
				// Java6ColorizerLexer.g:651:9: '\\u12b8' .. '\\u12be'
				{
				DebugLocation(651, 9);
				MatchRange('\u12B8','\u12BE'); if (state.failed) return;

				}
				break;
			case 175:
				DebugEnterAlt(175);
				// Java6ColorizerLexer.g:652:9: '\\u12c0'
				{
				DebugLocation(652, 9);
				Match('\u12C0'); if (state.failed) return;

				}
				break;
			case 176:
				DebugEnterAlt(176);
				// Java6ColorizerLexer.g:653:9: '\\u12c2' .. '\\u12c5'
				{
				DebugLocation(653, 9);
				MatchRange('\u12C2','\u12C5'); if (state.failed) return;

				}
				break;
			case 177:
				DebugEnterAlt(177);
				// Java6ColorizerLexer.g:654:9: '\\u12c8' .. '\\u12ce'
				{
				DebugLocation(654, 9);
				MatchRange('\u12C8','\u12CE'); if (state.failed) return;

				}
				break;
			case 178:
				DebugEnterAlt(178);
				// Java6ColorizerLexer.g:655:9: '\\u12d0' .. '\\u12d6'
				{
				DebugLocation(655, 9);
				MatchRange('\u12D0','\u12D6'); if (state.failed) return;

				}
				break;
			case 179:
				DebugEnterAlt(179);
				// Java6ColorizerLexer.g:656:9: '\\u12d8' .. '\\u12ee'
				{
				DebugLocation(656, 9);
				MatchRange('\u12D8','\u12EE'); if (state.failed) return;

				}
				break;
			case 180:
				DebugEnterAlt(180);
				// Java6ColorizerLexer.g:657:9: '\\u12f0' .. '\\u130e'
				{
				DebugLocation(657, 9);
				MatchRange('\u12F0','\u130E'); if (state.failed) return;

				}
				break;
			case 181:
				DebugEnterAlt(181);
				// Java6ColorizerLexer.g:658:9: '\\u1310'
				{
				DebugLocation(658, 9);
				Match('\u1310'); if (state.failed) return;

				}
				break;
			case 182:
				DebugEnterAlt(182);
				// Java6ColorizerLexer.g:659:9: '\\u1312' .. '\\u1315'
				{
				DebugLocation(659, 9);
				MatchRange('\u1312','\u1315'); if (state.failed) return;

				}
				break;
			case 183:
				DebugEnterAlt(183);
				// Java6ColorizerLexer.g:660:9: '\\u1318' .. '\\u131e'
				{
				DebugLocation(660, 9);
				MatchRange('\u1318','\u131E'); if (state.failed) return;

				}
				break;
			case 184:
				DebugEnterAlt(184);
				// Java6ColorizerLexer.g:661:9: '\\u1320' .. '\\u1346'
				{
				DebugLocation(661, 9);
				MatchRange('\u1320','\u1346'); if (state.failed) return;

				}
				break;
			case 185:
				DebugEnterAlt(185);
				// Java6ColorizerLexer.g:662:9: '\\u1348' .. '\\u135a'
				{
				DebugLocation(662, 9);
				MatchRange('\u1348','\u135A'); if (state.failed) return;

				}
				break;
			case 186:
				DebugEnterAlt(186);
				// Java6ColorizerLexer.g:663:9: '\\u13a0' .. '\\u13f4'
				{
				DebugLocation(663, 9);
				MatchRange('\u13A0','\u13F4'); if (state.failed) return;

				}
				break;
			case 187:
				DebugEnterAlt(187);
				// Java6ColorizerLexer.g:664:9: '\\u1401' .. '\\u166c'
				{
				DebugLocation(664, 9);
				MatchRange('\u1401','\u166C'); if (state.failed) return;

				}
				break;
			case 188:
				DebugEnterAlt(188);
				// Java6ColorizerLexer.g:665:9: '\\u166f' .. '\\u1676'
				{
				DebugLocation(665, 9);
				MatchRange('\u166F','\u1676'); if (state.failed) return;

				}
				break;
			case 189:
				DebugEnterAlt(189);
				// Java6ColorizerLexer.g:666:9: '\\u1681' .. '\\u169a'
				{
				DebugLocation(666, 9);
				MatchRange('\u1681','\u169A'); if (state.failed) return;

				}
				break;
			case 190:
				DebugEnterAlt(190);
				// Java6ColorizerLexer.g:667:9: '\\u16a0' .. '\\u16ea'
				{
				DebugLocation(667, 9);
				MatchRange('\u16A0','\u16EA'); if (state.failed) return;

				}
				break;
			case 191:
				DebugEnterAlt(191);
				// Java6ColorizerLexer.g:668:9: '\\u16ee' .. '\\u16f0'
				{
				DebugLocation(668, 9);
				MatchRange('\u16EE','\u16F0'); if (state.failed) return;

				}
				break;
			case 192:
				DebugEnterAlt(192);
				// Java6ColorizerLexer.g:669:9: '\\u1700' .. '\\u170c'
				{
				DebugLocation(669, 9);
				MatchRange('\u1700','\u170C'); if (state.failed) return;

				}
				break;
			case 193:
				DebugEnterAlt(193);
				// Java6ColorizerLexer.g:670:9: '\\u170e' .. '\\u1711'
				{
				DebugLocation(670, 9);
				MatchRange('\u170E','\u1711'); if (state.failed) return;

				}
				break;
			case 194:
				DebugEnterAlt(194);
				// Java6ColorizerLexer.g:671:9: '\\u1720' .. '\\u1731'
				{
				DebugLocation(671, 9);
				MatchRange('\u1720','\u1731'); if (state.failed) return;

				}
				break;
			case 195:
				DebugEnterAlt(195);
				// Java6ColorizerLexer.g:672:9: '\\u1740' .. '\\u1751'
				{
				DebugLocation(672, 9);
				MatchRange('\u1740','\u1751'); if (state.failed) return;

				}
				break;
			case 196:
				DebugEnterAlt(196);
				// Java6ColorizerLexer.g:673:9: '\\u1760' .. '\\u176c'
				{
				DebugLocation(673, 9);
				MatchRange('\u1760','\u176C'); if (state.failed) return;

				}
				break;
			case 197:
				DebugEnterAlt(197);
				// Java6ColorizerLexer.g:674:9: '\\u176e' .. '\\u1770'
				{
				DebugLocation(674, 9);
				MatchRange('\u176E','\u1770'); if (state.failed) return;

				}
				break;
			case 198:
				DebugEnterAlt(198);
				// Java6ColorizerLexer.g:675:9: '\\u1780' .. '\\u17b3'
				{
				DebugLocation(675, 9);
				MatchRange('\u1780','\u17B3'); if (state.failed) return;

				}
				break;
			case 199:
				DebugEnterAlt(199);
				// Java6ColorizerLexer.g:676:9: '\\u17d7'
				{
				DebugLocation(676, 9);
				Match('\u17D7'); if (state.failed) return;

				}
				break;
			case 200:
				DebugEnterAlt(200);
				// Java6ColorizerLexer.g:677:9: '\\u17db' .. '\\u17dc'
				{
				DebugLocation(677, 9);
				MatchRange('\u17DB','\u17DC'); if (state.failed) return;

				}
				break;
			case 201:
				DebugEnterAlt(201);
				// Java6ColorizerLexer.g:678:9: '\\u1820' .. '\\u1877'
				{
				DebugLocation(678, 9);
				MatchRange('\u1820','\u1877'); if (state.failed) return;

				}
				break;
			case 202:
				DebugEnterAlt(202);
				// Java6ColorizerLexer.g:679:9: '\\u1880' .. '\\u18a8'
				{
				DebugLocation(679, 9);
				MatchRange('\u1880','\u18A8'); if (state.failed) return;

				}
				break;
			case 203:
				DebugEnterAlt(203);
				// Java6ColorizerLexer.g:680:9: '\\u1900' .. '\\u191c'
				{
				DebugLocation(680, 9);
				MatchRange('\u1900','\u191C'); if (state.failed) return;

				}
				break;
			case 204:
				DebugEnterAlt(204);
				// Java6ColorizerLexer.g:681:9: '\\u1950' .. '\\u196d'
				{
				DebugLocation(681, 9);
				MatchRange('\u1950','\u196D'); if (state.failed) return;

				}
				break;
			case 205:
				DebugEnterAlt(205);
				// Java6ColorizerLexer.g:682:9: '\\u1970' .. '\\u1974'
				{
				DebugLocation(682, 9);
				MatchRange('\u1970','\u1974'); if (state.failed) return;

				}
				break;
			case 206:
				DebugEnterAlt(206);
				// Java6ColorizerLexer.g:683:9: '\\u1d00' .. '\\u1d6b'
				{
				DebugLocation(683, 9);
				MatchRange('\u1D00','\u1D6B'); if (state.failed) return;

				}
				break;
			case 207:
				DebugEnterAlt(207);
				// Java6ColorizerLexer.g:684:9: '\\u1e00' .. '\\u1e9b'
				{
				DebugLocation(684, 9);
				MatchRange('\u1E00','\u1E9B'); if (state.failed) return;

				}
				break;
			case 208:
				DebugEnterAlt(208);
				// Java6ColorizerLexer.g:685:9: '\\u1ea0' .. '\\u1ef9'
				{
				DebugLocation(685, 9);
				MatchRange('\u1EA0','\u1EF9'); if (state.failed) return;

				}
				break;
			case 209:
				DebugEnterAlt(209);
				// Java6ColorizerLexer.g:686:9: '\\u1f00' .. '\\u1f15'
				{
				DebugLocation(686, 9);
				MatchRange('\u1F00','\u1F15'); if (state.failed) return;

				}
				break;
			case 210:
				DebugEnterAlt(210);
				// Java6ColorizerLexer.g:687:9: '\\u1f18' .. '\\u1f1d'
				{
				DebugLocation(687, 9);
				MatchRange('\u1F18','\u1F1D'); if (state.failed) return;

				}
				break;
			case 211:
				DebugEnterAlt(211);
				// Java6ColorizerLexer.g:688:9: '\\u1f20' .. '\\u1f45'
				{
				DebugLocation(688, 9);
				MatchRange('\u1F20','\u1F45'); if (state.failed) return;

				}
				break;
			case 212:
				DebugEnterAlt(212);
				// Java6ColorizerLexer.g:689:9: '\\u1f48' .. '\\u1f4d'
				{
				DebugLocation(689, 9);
				MatchRange('\u1F48','\u1F4D'); if (state.failed) return;

				}
				break;
			case 213:
				DebugEnterAlt(213);
				// Java6ColorizerLexer.g:690:9: '\\u1f50' .. '\\u1f57'
				{
				DebugLocation(690, 9);
				MatchRange('\u1F50','\u1F57'); if (state.failed) return;

				}
				break;
			case 214:
				DebugEnterAlt(214);
				// Java6ColorizerLexer.g:691:9: '\\u1f59'
				{
				DebugLocation(691, 9);
				Match('\u1F59'); if (state.failed) return;

				}
				break;
			case 215:
				DebugEnterAlt(215);
				// Java6ColorizerLexer.g:692:9: '\\u1f5b'
				{
				DebugLocation(692, 9);
				Match('\u1F5B'); if (state.failed) return;

				}
				break;
			case 216:
				DebugEnterAlt(216);
				// Java6ColorizerLexer.g:693:9: '\\u1f5d'
				{
				DebugLocation(693, 9);
				Match('\u1F5D'); if (state.failed) return;

				}
				break;
			case 217:
				DebugEnterAlt(217);
				// Java6ColorizerLexer.g:694:9: '\\u1f5f' .. '\\u1f7d'
				{
				DebugLocation(694, 9);
				MatchRange('\u1F5F','\u1F7D'); if (state.failed) return;

				}
				break;
			case 218:
				DebugEnterAlt(218);
				// Java6ColorizerLexer.g:695:9: '\\u1f80' .. '\\u1fb4'
				{
				DebugLocation(695, 9);
				MatchRange('\u1F80','\u1FB4'); if (state.failed) return;

				}
				break;
			case 219:
				DebugEnterAlt(219);
				// Java6ColorizerLexer.g:696:9: '\\u1fb6' .. '\\u1fbc'
				{
				DebugLocation(696, 9);
				MatchRange('\u1FB6','\u1FBC'); if (state.failed) return;

				}
				break;
			case 220:
				DebugEnterAlt(220);
				// Java6ColorizerLexer.g:697:9: '\\u1fbe'
				{
				DebugLocation(697, 9);
				Match('\u1FBE'); if (state.failed) return;

				}
				break;
			case 221:
				DebugEnterAlt(221);
				// Java6ColorizerLexer.g:698:9: '\\u1fc2' .. '\\u1fc4'
				{
				DebugLocation(698, 9);
				MatchRange('\u1FC2','\u1FC4'); if (state.failed) return;

				}
				break;
			case 222:
				DebugEnterAlt(222);
				// Java6ColorizerLexer.g:699:9: '\\u1fc6' .. '\\u1fcc'
				{
				DebugLocation(699, 9);
				MatchRange('\u1FC6','\u1FCC'); if (state.failed) return;

				}
				break;
			case 223:
				DebugEnterAlt(223);
				// Java6ColorizerLexer.g:700:9: '\\u1fd0' .. '\\u1fd3'
				{
				DebugLocation(700, 9);
				MatchRange('\u1FD0','\u1FD3'); if (state.failed) return;

				}
				break;
			case 224:
				DebugEnterAlt(224);
				// Java6ColorizerLexer.g:701:9: '\\u1fd6' .. '\\u1fdb'
				{
				DebugLocation(701, 9);
				MatchRange('\u1FD6','\u1FDB'); if (state.failed) return;

				}
				break;
			case 225:
				DebugEnterAlt(225);
				// Java6ColorizerLexer.g:702:9: '\\u1fe0' .. '\\u1fec'
				{
				DebugLocation(702, 9);
				MatchRange('\u1FE0','\u1FEC'); if (state.failed) return;

				}
				break;
			case 226:
				DebugEnterAlt(226);
				// Java6ColorizerLexer.g:703:9: '\\u1ff2' .. '\\u1ff4'
				{
				DebugLocation(703, 9);
				MatchRange('\u1FF2','\u1FF4'); if (state.failed) return;

				}
				break;
			case 227:
				DebugEnterAlt(227);
				// Java6ColorizerLexer.g:704:9: '\\u1ff6' .. '\\u1ffc'
				{
				DebugLocation(704, 9);
				MatchRange('\u1FF6','\u1FFC'); if (state.failed) return;

				}
				break;
			case 228:
				DebugEnterAlt(228);
				// Java6ColorizerLexer.g:705:9: '\\u203f' .. '\\u2040'
				{
				DebugLocation(705, 9);
				MatchRange('\u203F','\u2040'); if (state.failed) return;

				}
				break;
			case 229:
				DebugEnterAlt(229);
				// Java6ColorizerLexer.g:706:9: '\\u2054'
				{
				DebugLocation(706, 9);
				Match('\u2054'); if (state.failed) return;

				}
				break;
			case 230:
				DebugEnterAlt(230);
				// Java6ColorizerLexer.g:707:9: '\\u2071'
				{
				DebugLocation(707, 9);
				Match('\u2071'); if (state.failed) return;

				}
				break;
			case 231:
				DebugEnterAlt(231);
				// Java6ColorizerLexer.g:708:9: '\\u207f'
				{
				DebugLocation(708, 9);
				Match('\u207F'); if (state.failed) return;

				}
				break;
			case 232:
				DebugEnterAlt(232);
				// Java6ColorizerLexer.g:709:9: '\\u20a0' .. '\\u20b1'
				{
				DebugLocation(709, 9);
				MatchRange('\u20A0','\u20B1'); if (state.failed) return;

				}
				break;
			case 233:
				DebugEnterAlt(233);
				// Java6ColorizerLexer.g:710:9: '\\u2102'
				{
				DebugLocation(710, 9);
				Match('\u2102'); if (state.failed) return;

				}
				break;
			case 234:
				DebugEnterAlt(234);
				// Java6ColorizerLexer.g:711:9: '\\u2107'
				{
				DebugLocation(711, 9);
				Match('\u2107'); if (state.failed) return;

				}
				break;
			case 235:
				DebugEnterAlt(235);
				// Java6ColorizerLexer.g:712:9: '\\u210a' .. '\\u2113'
				{
				DebugLocation(712, 9);
				MatchRange('\u210A','\u2113'); if (state.failed) return;

				}
				break;
			case 236:
				DebugEnterAlt(236);
				// Java6ColorizerLexer.g:713:9: '\\u2115'
				{
				DebugLocation(713, 9);
				Match('\u2115'); if (state.failed) return;

				}
				break;
			case 237:
				DebugEnterAlt(237);
				// Java6ColorizerLexer.g:714:9: '\\u2119' .. '\\u211d'
				{
				DebugLocation(714, 9);
				MatchRange('\u2119','\u211D'); if (state.failed) return;

				}
				break;
			case 238:
				DebugEnterAlt(238);
				// Java6ColorizerLexer.g:715:9: '\\u2124'
				{
				DebugLocation(715, 9);
				Match('\u2124'); if (state.failed) return;

				}
				break;
			case 239:
				DebugEnterAlt(239);
				// Java6ColorizerLexer.g:716:9: '\\u2126'
				{
				DebugLocation(716, 9);
				Match('\u2126'); if (state.failed) return;

				}
				break;
			case 240:
				DebugEnterAlt(240);
				// Java6ColorizerLexer.g:717:9: '\\u2128'
				{
				DebugLocation(717, 9);
				Match('\u2128'); if (state.failed) return;

				}
				break;
			case 241:
				DebugEnterAlt(241);
				// Java6ColorizerLexer.g:718:9: '\\u212a' .. '\\u212d'
				{
				DebugLocation(718, 9);
				MatchRange('\u212A','\u212D'); if (state.failed) return;

				}
				break;
			case 242:
				DebugEnterAlt(242);
				// Java6ColorizerLexer.g:719:9: '\\u212f' .. '\\u2131'
				{
				DebugLocation(719, 9);
				MatchRange('\u212F','\u2131'); if (state.failed) return;

				}
				break;
			case 243:
				DebugEnterAlt(243);
				// Java6ColorizerLexer.g:720:9: '\\u2133' .. '\\u2139'
				{
				DebugLocation(720, 9);
				MatchRange('\u2133','\u2139'); if (state.failed) return;

				}
				break;
			case 244:
				DebugEnterAlt(244);
				// Java6ColorizerLexer.g:721:9: '\\u213d' .. '\\u213f'
				{
				DebugLocation(721, 9);
				MatchRange('\u213D','\u213F'); if (state.failed) return;

				}
				break;
			case 245:
				DebugEnterAlt(245);
				// Java6ColorizerLexer.g:722:9: '\\u2145' .. '\\u2149'
				{
				DebugLocation(722, 9);
				MatchRange('\u2145','\u2149'); if (state.failed) return;

				}
				break;
			case 246:
				DebugEnterAlt(246);
				// Java6ColorizerLexer.g:723:9: '\\u2160' .. '\\u2183'
				{
				DebugLocation(723, 9);
				MatchRange('\u2160','\u2183'); if (state.failed) return;

				}
				break;
			case 247:
				DebugEnterAlt(247);
				// Java6ColorizerLexer.g:724:9: '\\u3005' .. '\\u3007'
				{
				DebugLocation(724, 9);
				MatchRange('\u3005','\u3007'); if (state.failed) return;

				}
				break;
			case 248:
				DebugEnterAlt(248);
				// Java6ColorizerLexer.g:725:9: '\\u3021' .. '\\u3029'
				{
				DebugLocation(725, 9);
				MatchRange('\u3021','\u3029'); if (state.failed) return;

				}
				break;
			case 249:
				DebugEnterAlt(249);
				// Java6ColorizerLexer.g:726:9: '\\u3031' .. '\\u3035'
				{
				DebugLocation(726, 9);
				MatchRange('\u3031','\u3035'); if (state.failed) return;

				}
				break;
			case 250:
				DebugEnterAlt(250);
				// Java6ColorizerLexer.g:727:9: '\\u3038' .. '\\u303c'
				{
				DebugLocation(727, 9);
				MatchRange('\u3038','\u303C'); if (state.failed) return;

				}
				break;
			case 251:
				DebugEnterAlt(251);
				// Java6ColorizerLexer.g:728:9: '\\u3041' .. '\\u3096'
				{
				DebugLocation(728, 9);
				MatchRange('\u3041','\u3096'); if (state.failed) return;

				}
				break;
			case 252:
				DebugEnterAlt(252);
				// Java6ColorizerLexer.g:729:9: '\\u309d' .. '\\u309f'
				{
				DebugLocation(729, 9);
				MatchRange('\u309D','\u309F'); if (state.failed) return;

				}
				break;
			case 253:
				DebugEnterAlt(253);
				// Java6ColorizerLexer.g:730:9: '\\u30a1' .. '\\u30ff'
				{
				DebugLocation(730, 9);
				MatchRange('\u30A1','\u30FF'); if (state.failed) return;

				}
				break;
			case 254:
				DebugEnterAlt(254);
				// Java6ColorizerLexer.g:731:9: '\\u3105' .. '\\u312c'
				{
				DebugLocation(731, 9);
				MatchRange('\u3105','\u312C'); if (state.failed) return;

				}
				break;
			case 255:
				DebugEnterAlt(255);
				// Java6ColorizerLexer.g:732:9: '\\u3131' .. '\\u318e'
				{
				DebugLocation(732, 9);
				MatchRange('\u3131','\u318E'); if (state.failed) return;

				}
				break;
			case 256:
				DebugEnterAlt(256);
				// Java6ColorizerLexer.g:733:9: '\\u31a0' .. '\\u31b7'
				{
				DebugLocation(733, 9);
				MatchRange('\u31A0','\u31B7'); if (state.failed) return;

				}
				break;
			case 257:
				DebugEnterAlt(257);
				// Java6ColorizerLexer.g:734:9: '\\u31f0' .. '\\u31ff'
				{
				DebugLocation(734, 9);
				MatchRange('\u31F0','\u31FF'); if (state.failed) return;

				}
				break;
			case 258:
				DebugEnterAlt(258);
				// Java6ColorizerLexer.g:735:9: '\\u3400' .. '\\u4db5'
				{
				DebugLocation(735, 9);
				MatchRange('\u3400','\u4DB5'); if (state.failed) return;

				}
				break;
			case 259:
				DebugEnterAlt(259);
				// Java6ColorizerLexer.g:736:9: '\\u4e00' .. '\\u9fa5'
				{
				DebugLocation(736, 9);
				MatchRange('\u4E00','\u9FA5'); if (state.failed) return;

				}
				break;
			case 260:
				DebugEnterAlt(260);
				// Java6ColorizerLexer.g:737:9: '\\ua000' .. '\\ua48c'
				{
				DebugLocation(737, 9);
				MatchRange('\uA000','\uA48C'); if (state.failed) return;

				}
				break;
			case 261:
				DebugEnterAlt(261);
				// Java6ColorizerLexer.g:738:9: '\\uac00' .. '\\ud7a3'
				{
				DebugLocation(738, 9);
				MatchRange('\uAC00','\uD7A3'); if (state.failed) return;

				}
				break;
			case 262:
				DebugEnterAlt(262);
				// Java6ColorizerLexer.g:739:9: '\\uf900' .. '\\ufa2d'
				{
				DebugLocation(739, 9);
				MatchRange('\uF900','\uFA2D'); if (state.failed) return;

				}
				break;
			case 263:
				DebugEnterAlt(263);
				// Java6ColorizerLexer.g:740:9: '\\ufa30' .. '\\ufa6a'
				{
				DebugLocation(740, 9);
				MatchRange('\uFA30','\uFA6A'); if (state.failed) return;

				}
				break;
			case 264:
				DebugEnterAlt(264);
				// Java6ColorizerLexer.g:741:9: '\\ufb00' .. '\\ufb06'
				{
				DebugLocation(741, 9);
				MatchRange('\uFB00','\uFB06'); if (state.failed) return;

				}
				break;
			case 265:
				DebugEnterAlt(265);
				// Java6ColorizerLexer.g:742:9: '\\ufb13' .. '\\ufb17'
				{
				DebugLocation(742, 9);
				MatchRange('\uFB13','\uFB17'); if (state.failed) return;

				}
				break;
			case 266:
				DebugEnterAlt(266);
				// Java6ColorizerLexer.g:743:9: '\\ufb1d'
				{
				DebugLocation(743, 9);
				Match('\uFB1D'); if (state.failed) return;

				}
				break;
			case 267:
				DebugEnterAlt(267);
				// Java6ColorizerLexer.g:744:9: '\\ufb1f' .. '\\ufb28'
				{
				DebugLocation(744, 9);
				MatchRange('\uFB1F','\uFB28'); if (state.failed) return;

				}
				break;
			case 268:
				DebugEnterAlt(268);
				// Java6ColorizerLexer.g:745:9: '\\ufb2a' .. '\\ufb36'
				{
				DebugLocation(745, 9);
				MatchRange('\uFB2A','\uFB36'); if (state.failed) return;

				}
				break;
			case 269:
				DebugEnterAlt(269);
				// Java6ColorizerLexer.g:746:9: '\\ufb38' .. '\\ufb3c'
				{
				DebugLocation(746, 9);
				MatchRange('\uFB38','\uFB3C'); if (state.failed) return;

				}
				break;
			case 270:
				DebugEnterAlt(270);
				// Java6ColorizerLexer.g:747:9: '\\ufb3e'
				{
				DebugLocation(747, 9);
				Match('\uFB3E'); if (state.failed) return;

				}
				break;
			case 271:
				DebugEnterAlt(271);
				// Java6ColorizerLexer.g:748:9: '\\ufb40' .. '\\ufb41'
				{
				DebugLocation(748, 9);
				MatchRange('\uFB40','\uFB41'); if (state.failed) return;

				}
				break;
			case 272:
				DebugEnterAlt(272);
				// Java6ColorizerLexer.g:749:9: '\\ufb43' .. '\\ufb44'
				{
				DebugLocation(749, 9);
				MatchRange('\uFB43','\uFB44'); if (state.failed) return;

				}
				break;
			case 273:
				DebugEnterAlt(273);
				// Java6ColorizerLexer.g:750:9: '\\ufb46' .. '\\ufbb1'
				{
				DebugLocation(750, 9);
				MatchRange('\uFB46','\uFBB1'); if (state.failed) return;

				}
				break;
			case 274:
				DebugEnterAlt(274);
				// Java6ColorizerLexer.g:751:9: '\\ufbd3' .. '\\ufd3d'
				{
				DebugLocation(751, 9);
				MatchRange('\uFBD3','\uFD3D'); if (state.failed) return;

				}
				break;
			case 275:
				DebugEnterAlt(275);
				// Java6ColorizerLexer.g:752:9: '\\ufd50' .. '\\ufd8f'
				{
				DebugLocation(752, 9);
				MatchRange('\uFD50','\uFD8F'); if (state.failed) return;

				}
				break;
			case 276:
				DebugEnterAlt(276);
				// Java6ColorizerLexer.g:753:9: '\\ufd92' .. '\\ufdc7'
				{
				DebugLocation(753, 9);
				MatchRange('\uFD92','\uFDC7'); if (state.failed) return;

				}
				break;
			case 277:
				DebugEnterAlt(277);
				// Java6ColorizerLexer.g:754:9: '\\ufdf0' .. '\\ufdfc'
				{
				DebugLocation(754, 9);
				MatchRange('\uFDF0','\uFDFC'); if (state.failed) return;

				}
				break;
			case 278:
				DebugEnterAlt(278);
				// Java6ColorizerLexer.g:755:9: '\\ufe33' .. '\\ufe34'
				{
				DebugLocation(755, 9);
				MatchRange('\uFE33','\uFE34'); if (state.failed) return;

				}
				break;
			case 279:
				DebugEnterAlt(279);
				// Java6ColorizerLexer.g:756:9: '\\ufe4d' .. '\\ufe4f'
				{
				DebugLocation(756, 9);
				MatchRange('\uFE4D','\uFE4F'); if (state.failed) return;

				}
				break;
			case 280:
				DebugEnterAlt(280);
				// Java6ColorizerLexer.g:757:9: '\\ufe69'
				{
				DebugLocation(757, 9);
				Match('\uFE69'); if (state.failed) return;

				}
				break;
			case 281:
				DebugEnterAlt(281);
				// Java6ColorizerLexer.g:758:9: '\\ufe70' .. '\\ufe74'
				{
				DebugLocation(758, 9);
				MatchRange('\uFE70','\uFE74'); if (state.failed) return;

				}
				break;
			case 282:
				DebugEnterAlt(282);
				// Java6ColorizerLexer.g:759:9: '\\ufe76' .. '\\ufefc'
				{
				DebugLocation(759, 9);
				MatchRange('\uFE76','\uFEFC'); if (state.failed) return;

				}
				break;
			case 283:
				DebugEnterAlt(283);
				// Java6ColorizerLexer.g:760:9: '\\uff04'
				{
				DebugLocation(760, 9);
				Match('\uFF04'); if (state.failed) return;

				}
				break;
			case 284:
				DebugEnterAlt(284);
				// Java6ColorizerLexer.g:761:9: '\\uff21' .. '\\uff3a'
				{
				DebugLocation(761, 9);
				MatchRange('\uFF21','\uFF3A'); if (state.failed) return;

				}
				break;
			case 285:
				DebugEnterAlt(285);
				// Java6ColorizerLexer.g:762:9: '\\uff3f'
				{
				DebugLocation(762, 9);
				Match('\uFF3F'); if (state.failed) return;

				}
				break;
			case 286:
				DebugEnterAlt(286);
				// Java6ColorizerLexer.g:763:9: '\\uff41' .. '\\uff5a'
				{
				DebugLocation(763, 9);
				MatchRange('\uFF41','\uFF5A'); if (state.failed) return;

				}
				break;
			case 287:
				DebugEnterAlt(287);
				// Java6ColorizerLexer.g:764:9: '\\uff65' .. '\\uffbe'
				{
				DebugLocation(764, 9);
				MatchRange('\uFF65','\uFFBE'); if (state.failed) return;

				}
				break;
			case 288:
				DebugEnterAlt(288);
				// Java6ColorizerLexer.g:765:9: '\\uffc2' .. '\\uffc7'
				{
				DebugLocation(765, 9);
				MatchRange('\uFFC2','\uFFC7'); if (state.failed) return;

				}
				break;
			case 289:
				DebugEnterAlt(289);
				// Java6ColorizerLexer.g:766:9: '\\uffca' .. '\\uffcf'
				{
				DebugLocation(766, 9);
				MatchRange('\uFFCA','\uFFCF'); if (state.failed) return;

				}
				break;
			case 290:
				DebugEnterAlt(290);
				// Java6ColorizerLexer.g:767:9: '\\uffd2' .. '\\uffd7'
				{
				DebugLocation(767, 9);
				MatchRange('\uFFD2','\uFFD7'); if (state.failed) return;

				}
				break;
			case 291:
				DebugEnterAlt(291);
				// Java6ColorizerLexer.g:768:9: '\\uffda' .. '\\uffdc'
				{
				DebugLocation(768, 9);
				MatchRange('\uFFDA','\uFFDC'); if (state.failed) return;

				}
				break;
			case 292:
				DebugEnterAlt(292);
				// Java6ColorizerLexer.g:769:9: '\\uffe0' .. '\\uffe1'
				{
				DebugLocation(769, 9);
				MatchRange('\uFFE0','\uFFE1'); if (state.failed) return;

				}
				break;
			case 293:
				DebugEnterAlt(293);
				// Java6ColorizerLexer.g:770:9: '\\uffe5' .. '\\uffe6'
				{
				DebugLocation(770, 9);
				MatchRange('\uFFE5','\uFFE6'); if (state.failed) return;

				}
				break;
			case 294:
				DebugEnterAlt(294);
				// Java6ColorizerLexer.g:771:9: ( '\\ud800' .. '\\udbff' ) ( '\\udc00' .. '\\udfff' )
				{
				DebugLocation(771, 9);
				input.Consume();
				state.failed=false;
				DebugLocation(771, 30);
				input.Consume();
				state.failed=false;

				}
				break;

			}
		}
		finally
		{
			TraceOut("IdentifierStart", 63);
			LeaveRule("IdentifierStart", 63);
			LeaveRule_IdentifierStart();
		}
	}
	// $ANTLR end "IdentifierStart"

	partial void EnterRule_IdentifierPart();
	partial void LeaveRule_IdentifierPart();

	// $ANTLR start "IdentifierPart"
	[GrammarRule("IdentifierPart")]
	private void mIdentifierPart()
	{
		EnterRule_IdentifierPart();
		EnterRule("IdentifierPart", 64);
		TraceIn("IdentifierPart", 64);
		try
		{
			// Java6ColorizerLexer.g:776:5: ( '\\u0000' .. '\\u0008' | '\\u000e' .. '\\u001b' | '\\u0024' | '\\u0030' .. '\\u0039' | '\\u0041' .. '\\u005a' | '\\u005f' | '\\u0061' .. '\\u007a' | '\\u007f' .. '\\u009f' | '\\u00a2' .. '\\u00a5' | '\\u00aa' | '\\u00ad' | '\\u00b5' | '\\u00ba' | '\\u00c0' .. '\\u00d6' | '\\u00d8' .. '\\u00f6' | '\\u00f8' .. '\\u0236' | '\\u0250' .. '\\u02c1' | '\\u02c6' .. '\\u02d1' | '\\u02e0' .. '\\u02e4' | '\\u02ee' | '\\u0300' .. '\\u0357' | '\\u035d' .. '\\u036f' | '\\u037a' | '\\u0386' | '\\u0388' .. '\\u038a' | '\\u038c' | '\\u038e' .. '\\u03a1' | '\\u03a3' .. '\\u03ce' | '\\u03d0' .. '\\u03f5' | '\\u03f7' .. '\\u03fb' | '\\u0400' .. '\\u0481' | '\\u0483' .. '\\u0486' | '\\u048a' .. '\\u04ce' | '\\u04d0' .. '\\u04f5' | '\\u04f8' .. '\\u04f9' | '\\u0500' .. '\\u050f' | '\\u0531' .. '\\u0556' | '\\u0559' | '\\u0561' .. '\\u0587' | '\\u0591' .. '\\u05a1' | '\\u05a3' .. '\\u05b9' | '\\u05bb' .. '\\u05bd' | '\\u05bf' | '\\u05c1' .. '\\u05c2' | '\\u05c4' | '\\u05d0' .. '\\u05ea' | '\\u05f0' .. '\\u05f2' | '\\u0600' .. '\\u0603' | '\\u0610' .. '\\u0615' | '\\u0621' .. '\\u063a' | '\\u0640' .. '\\u0658' | '\\u0660' .. '\\u0669' | '\\u066e' .. '\\u06d3' | '\\u06d5' .. '\\u06dd' | '\\u06df' .. '\\u06e8' | '\\u06ea' .. '\\u06fc' | '\\u06ff' | '\\u070f' .. '\\u074a' | '\\u074d' .. '\\u074f' | '\\u0780' .. '\\u07b1' | '\\u0901' .. '\\u0939' | '\\u093c' .. '\\u094d' | '\\u0950' .. '\\u0954' | '\\u0958' .. '\\u0963' | '\\u0966' .. '\\u096f' | '\\u0981' .. '\\u0983' | '\\u0985' .. '\\u098c' | '\\u098f' .. '\\u0990' | '\\u0993' .. '\\u09a8' | '\\u09aa' .. '\\u09b0' | '\\u09b2' | '\\u09b6' .. '\\u09b9' | '\\u09bc' .. '\\u09c4' | '\\u09c7' .. '\\u09c8' | '\\u09cb' .. '\\u09cd' | '\\u09d7' | '\\u09dc' .. '\\u09dd' | '\\u09df' .. '\\u09e3' | '\\u09e6' .. '\\u09f3' | '\\u0a01' .. '\\u0a03' | '\\u0a05' .. '\\u0a0a' | '\\u0a0f' .. '\\u0a10' | '\\u0a13' .. '\\u0a28' | '\\u0a2a' .. '\\u0a30' | '\\u0a32' .. '\\u0a33' | '\\u0a35' .. '\\u0a36' | '\\u0a38' .. '\\u0a39' | '\\u0a3c' | '\\u0a3e' .. '\\u0a42' | '\\u0a47' .. '\\u0a48' | '\\u0a4b' .. '\\u0a4d' | '\\u0a59' .. '\\u0a5c' | '\\u0a5e' | '\\u0a66' .. '\\u0a74' | '\\u0a81' .. '\\u0a83' | '\\u0a85' .. '\\u0a8d' | '\\u0a8f' .. '\\u0a91' | '\\u0a93' .. '\\u0aa8' | '\\u0aaa' .. '\\u0ab0' | '\\u0ab2' .. '\\u0ab3' | '\\u0ab5' .. '\\u0ab9' | '\\u0abc' .. '\\u0ac5' | '\\u0ac7' .. '\\u0ac9' | '\\u0acb' .. '\\u0acd' | '\\u0ad0' | '\\u0ae0' .. '\\u0ae3' | '\\u0ae6' .. '\\u0aef' | '\\u0af1' | '\\u0b01' .. '\\u0b03' | '\\u0b05' .. '\\u0b0c' | '\\u0b0f' .. '\\u0b10' | '\\u0b13' .. '\\u0b28' | '\\u0b2a' .. '\\u0b30' | '\\u0b32' .. '\\u0b33' | '\\u0b35' .. '\\u0b39' | '\\u0b3c' .. '\\u0b43' | '\\u0b47' .. '\\u0b48' | '\\u0b4b' .. '\\u0b4d' | '\\u0b56' .. '\\u0b57' | '\\u0b5c' .. '\\u0b5d' | '\\u0b5f' .. '\\u0b61' | '\\u0b66' .. '\\u0b6f' | '\\u0b71' | '\\u0b82' .. '\\u0b83' | '\\u0b85' .. '\\u0b8a' | '\\u0b8e' .. '\\u0b90' | '\\u0b92' .. '\\u0b95' | '\\u0b99' .. '\\u0b9a' | '\\u0b9c' | '\\u0b9e' .. '\\u0b9f' | '\\u0ba3' .. '\\u0ba4' | '\\u0ba8' .. '\\u0baa' | '\\u0bae' .. '\\u0bb5' | '\\u0bb7' .. '\\u0bb9' | '\\u0bbe' .. '\\u0bc2' | '\\u0bc6' .. '\\u0bc8' | '\\u0bca' .. '\\u0bcd' | '\\u0bd7' | '\\u0be7' .. '\\u0bef' | '\\u0bf9' | '\\u0c01' .. '\\u0c03' | '\\u0c05' .. '\\u0c0c' | '\\u0c0e' .. '\\u0c10' | '\\u0c12' .. '\\u0c28' | '\\u0c2a' .. '\\u0c33' | '\\u0c35' .. '\\u0c39' | '\\u0c3e' .. '\\u0c44' | '\\u0c46' .. '\\u0c48' | '\\u0c4a' .. '\\u0c4d' | '\\u0c55' .. '\\u0c56' | '\\u0c60' .. '\\u0c61' | '\\u0c66' .. '\\u0c6f' | '\\u0c82' .. '\\u0c83' | '\\u0c85' .. '\\u0c8c' | '\\u0c8e' .. '\\u0c90' | '\\u0c92' .. '\\u0ca8' | '\\u0caa' .. '\\u0cb3' | '\\u0cb5' .. '\\u0cb9' | '\\u0cbc' .. '\\u0cc4' | '\\u0cc6' .. '\\u0cc8' | '\\u0cca' .. '\\u0ccd' | '\\u0cd5' .. '\\u0cd6' | '\\u0cde' | '\\u0ce0' .. '\\u0ce1' | '\\u0ce6' .. '\\u0cef' | '\\u0d02' .. '\\u0d03' | '\\u0d05' .. '\\u0d0c' | '\\u0d0e' .. '\\u0d10' | '\\u0d12' .. '\\u0d28' | '\\u0d2a' .. '\\u0d39' | '\\u0d3e' .. '\\u0d43' | '\\u0d46' .. '\\u0d48' | '\\u0d4a' .. '\\u0d4d' | '\\u0d57' | '\\u0d60' .. '\\u0d61' | '\\u0d66' .. '\\u0d6f' | '\\u0d82' .. '\\u0d83' | '\\u0d85' .. '\\u0d96' | '\\u0d9a' .. '\\u0db1' | '\\u0db3' .. '\\u0dbb' | '\\u0dbd' | '\\u0dc0' .. '\\u0dc6' | '\\u0dca' | '\\u0dcf' .. '\\u0dd4' | '\\u0dd6' | '\\u0dd8' .. '\\u0ddf' | '\\u0df2' .. '\\u0df3' | '\\u0e01' .. '\\u0e3a' | '\\u0e3f' .. '\\u0e4e' | '\\u0e50' .. '\\u0e59' | '\\u0e81' .. '\\u0e82' | '\\u0e84' | '\\u0e87' .. '\\u0e88' | '\\u0e8a' | '\\u0e8d' | '\\u0e94' .. '\\u0e97' | '\\u0e99' .. '\\u0e9f' | '\\u0ea1' .. '\\u0ea3' | '\\u0ea5' | '\\u0ea7' | '\\u0eaa' .. '\\u0eab' | '\\u0ead' .. '\\u0eb9' | '\\u0ebb' .. '\\u0ebd' | '\\u0ec0' .. '\\u0ec4' | '\\u0ec6' | '\\u0ec8' .. '\\u0ecd' | '\\u0ed0' .. '\\u0ed9' | '\\u0edc' .. '\\u0edd' | '\\u0f00' | '\\u0f18' .. '\\u0f19' | '\\u0f20' .. '\\u0f29' | '\\u0f35' | '\\u0f37' | '\\u0f39' | '\\u0f3e' .. '\\u0f47' | '\\u0f49' .. '\\u0f6a' | '\\u0f71' .. '\\u0f84' | '\\u0f86' .. '\\u0f8b' | '\\u0f90' .. '\\u0f97' | '\\u0f99' .. '\\u0fbc' | '\\u0fc6' | '\\u1000' .. '\\u1021' | '\\u1023' .. '\\u1027' | '\\u1029' .. '\\u102a' | '\\u102c' .. '\\u1032' | '\\u1036' .. '\\u1039' | '\\u1040' .. '\\u1049' | '\\u1050' .. '\\u1059' | '\\u10a0' .. '\\u10c5' | '\\u10d0' .. '\\u10f8' | '\\u1100' .. '\\u1159' | '\\u115f' .. '\\u11a2' | '\\u11a8' .. '\\u11f9' | '\\u1200' .. '\\u1206' | '\\u1208' .. '\\u1246' | '\\u1248' | '\\u124a' .. '\\u124d' | '\\u1250' .. '\\u1256' | '\\u1258' | '\\u125a' .. '\\u125d' | '\\u1260' .. '\\u1286' | '\\u1288' | '\\u128a' .. '\\u128d' | '\\u1290' .. '\\u12ae' | '\\u12b0' | '\\u12b2' .. '\\u12b5' | '\\u12b8' .. '\\u12be' | '\\u12c0' | '\\u12c2' .. '\\u12c5' | '\\u12c8' .. '\\u12ce' | '\\u12d0' .. '\\u12d6' | '\\u12d8' .. '\\u12ee' | '\\u12f0' .. '\\u130e' | '\\u1310' | '\\u1312' .. '\\u1315' | '\\u1318' .. '\\u131e' | '\\u1320' .. '\\u1346' | '\\u1348' .. '\\u135a' | '\\u1369' .. '\\u1371' | '\\u13a0' .. '\\u13f4' | '\\u1401' .. '\\u166c' | '\\u166f' .. '\\u1676' | '\\u1681' .. '\\u169a' | '\\u16a0' .. '\\u16ea' | '\\u16ee' .. '\\u16f0' | '\\u1700' .. '\\u170c' | '\\u170e' .. '\\u1714' | '\\u1720' .. '\\u1734' | '\\u1740' .. '\\u1753' | '\\u1760' .. '\\u176c' | '\\u176e' .. '\\u1770' | '\\u1772' .. '\\u1773' | '\\u1780' .. '\\u17d3' | '\\u17d7' | '\\u17db' .. '\\u17dd' | '\\u17e0' .. '\\u17e9' | '\\u180b' .. '\\u180d' | '\\u1810' .. '\\u1819' | '\\u1820' .. '\\u1877' | '\\u1880' .. '\\u18a9' | '\\u1900' .. '\\u191c' | '\\u1920' .. '\\u192b' | '\\u1930' .. '\\u193b' | '\\u1946' .. '\\u196d' | '\\u1970' .. '\\u1974' | '\\u1d00' .. '\\u1d6b' | '\\u1e00' .. '\\u1e9b' | '\\u1ea0' .. '\\u1ef9' | '\\u1f00' .. '\\u1f15' | '\\u1f18' .. '\\u1f1d' | '\\u1f20' .. '\\u1f45' | '\\u1f48' .. '\\u1f4d' | '\\u1f50' .. '\\u1f57' | '\\u1f59' | '\\u1f5b' | '\\u1f5d' | '\\u1f5f' .. '\\u1f7d' | '\\u1f80' .. '\\u1fb4' | '\\u1fb6' .. '\\u1fbc' | '\\u1fbe' | '\\u1fc2' .. '\\u1fc4' | '\\u1fc6' .. '\\u1fcc' | '\\u1fd0' .. '\\u1fd3' | '\\u1fd6' .. '\\u1fdb' | '\\u1fe0' .. '\\u1fec' | '\\u1ff2' .. '\\u1ff4' | '\\u1ff6' .. '\\u1ffc' | '\\u200c' .. '\\u200f' | '\\u202a' .. '\\u202e' | '\\u203f' .. '\\u2040' | '\\u2054' | '\\u2060' .. '\\u2063' | '\\u206a' .. '\\u206f' | '\\u2071' | '\\u207f' | '\\u20a0' .. '\\u20b1' | '\\u20d0' .. '\\u20dc' | '\\u20e1' | '\\u20e5' .. '\\u20ea' | '\\u2102' | '\\u2107' | '\\u210a' .. '\\u2113' | '\\u2115' | '\\u2119' .. '\\u211d' | '\\u2124' | '\\u2126' | '\\u2128' | '\\u212a' .. '\\u212d' | '\\u212f' .. '\\u2131' | '\\u2133' .. '\\u2139' | '\\u213d' .. '\\u213f' | '\\u2145' .. '\\u2149' | '\\u2160' .. '\\u2183' | '\\u3005' .. '\\u3007' | '\\u3021' .. '\\u302f' | '\\u3031' .. '\\u3035' | '\\u3038' .. '\\u303c' | '\\u3041' .. '\\u3096' | '\\u3099' .. '\\u309a' | '\\u309d' .. '\\u309f' | '\\u30a1' .. '\\u30ff' | '\\u3105' .. '\\u312c' | '\\u3131' .. '\\u318e' | '\\u31a0' .. '\\u31b7' | '\\u31f0' .. '\\u31ff' | '\\u3400' .. '\\u4db5' | '\\u4e00' .. '\\u9fa5' | '\\ua000' .. '\\ua48c' | '\\uac00' .. '\\ud7a3' | '\\uf900' .. '\\ufa2d' | '\\ufa30' .. '\\ufa6a' | '\\ufb00' .. '\\ufb06' | '\\ufb13' .. '\\ufb17' | '\\ufb1d' .. '\\ufb28' | '\\ufb2a' .. '\\ufb36' | '\\ufb38' .. '\\ufb3c' | '\\ufb3e' | '\\ufb40' .. '\\ufb41' | '\\ufb43' .. '\\ufb44' | '\\ufb46' .. '\\ufbb1' | '\\ufbd3' .. '\\ufd3d' | '\\ufd50' .. '\\ufd8f' | '\\ufd92' .. '\\ufdc7' | '\\ufdf0' .. '\\ufdfc' | '\\ufe00' .. '\\ufe0f' | '\\ufe20' .. '\\ufe23' | '\\ufe33' .. '\\ufe34' | '\\ufe4d' .. '\\ufe4f' | '\\ufe69' | '\\ufe70' .. '\\ufe74' | '\\ufe76' .. '\\ufefc' | '\\ufeff' | '\\uff04' | '\\uff10' .. '\\uff19' | '\\uff21' .. '\\uff3a' | '\\uff3f' | '\\uff41' .. '\\uff5a' | '\\uff65' .. '\\uffbe' | '\\uffc2' .. '\\uffc7' | '\\uffca' .. '\\uffcf' | '\\uffd2' .. '\\uffd7' | '\\uffda' .. '\\uffdc' | '\\uffe0' .. '\\uffe1' | '\\uffe5' .. '\\uffe6' | '\\ufff9' .. '\\ufffb' | ( '\\ud800' .. '\\udbff' ) ( '\\udc00' .. '\\udfff' ) )
			int alt34=386;
			try { DebugEnterDecision(34, false);
			int LA34_1 = input.LA(1);

			if (((LA34_1>='\u0000' && LA34_1<='\b')))
			{
				alt34 = 1;
			}
			else if (((LA34_1>='\u000E' && LA34_1<='\u001B')))
			{
				alt34 = 2;
			}
			else if ((LA34_1=='$'))
			{
				alt34 = 3;
			}
			else if (((LA34_1>='0' && LA34_1<='9')))
			{
				alt34 = 4;
			}
			else if (((LA34_1>='A' && LA34_1<='Z')))
			{
				alt34 = 5;
			}
			else if ((LA34_1=='_'))
			{
				alt34 = 6;
			}
			else if (((LA34_1>='a' && LA34_1<='z')))
			{
				alt34 = 7;
			}
			else if (((LA34_1>='\u007F' && LA34_1<='\u009F')))
			{
				alt34 = 8;
			}
			else if (((LA34_1>='\u00A2' && LA34_1<='\u00A5')))
			{
				alt34 = 9;
			}
			else if ((LA34_1=='\u00AA'))
			{
				alt34 = 10;
			}
			else if ((LA34_1=='\u00AD'))
			{
				alt34 = 11;
			}
			else if ((LA34_1=='\u00B5'))
			{
				alt34 = 12;
			}
			else if ((LA34_1=='\u00BA'))
			{
				alt34 = 13;
			}
			else if (((LA34_1>='\u00C0' && LA34_1<='\u00D6')))
			{
				alt34 = 14;
			}
			else if (((LA34_1>='\u00D8' && LA34_1<='\u00F6')))
			{
				alt34 = 15;
			}
			else if (((LA34_1>='\u00F8' && LA34_1<='\u0236')))
			{
				alt34 = 16;
			}
			else if (((LA34_1>='\u0250' && LA34_1<='\u02C1')))
			{
				alt34 = 17;
			}
			else if (((LA34_1>='\u02C6' && LA34_1<='\u02D1')))
			{
				alt34 = 18;
			}
			else if (((LA34_1>='\u02E0' && LA34_1<='\u02E4')))
			{
				alt34 = 19;
			}
			else if ((LA34_1=='\u02EE'))
			{
				alt34 = 20;
			}
			else if (((LA34_1>='\u0300' && LA34_1<='\u0357')))
			{
				alt34 = 21;
			}
			else if (((LA34_1>='\u035D' && LA34_1<='\u036F')))
			{
				alt34 = 22;
			}
			else if ((LA34_1=='\u037A'))
			{
				alt34 = 23;
			}
			else if ((LA34_1=='\u0386'))
			{
				alt34 = 24;
			}
			else if (((LA34_1>='\u0388' && LA34_1<='\u038A')))
			{
				alt34 = 25;
			}
			else if ((LA34_1=='\u038C'))
			{
				alt34 = 26;
			}
			else if (((LA34_1>='\u038E' && LA34_1<='\u03A1')))
			{
				alt34 = 27;
			}
			else if (((LA34_1>='\u03A3' && LA34_1<='\u03CE')))
			{
				alt34 = 28;
			}
			else if (((LA34_1>='\u03D0' && LA34_1<='\u03F5')))
			{
				alt34 = 29;
			}
			else if (((LA34_1>='\u03F7' && LA34_1<='\u03FB')))
			{
				alt34 = 30;
			}
			else if (((LA34_1>='\u0400' && LA34_1<='\u0481')))
			{
				alt34 = 31;
			}
			else if (((LA34_1>='\u0483' && LA34_1<='\u0486')))
			{
				alt34 = 32;
			}
			else if (((LA34_1>='\u048A' && LA34_1<='\u04CE')))
			{
				alt34 = 33;
			}
			else if (((LA34_1>='\u04D0' && LA34_1<='\u04F5')))
			{
				alt34 = 34;
			}
			else if (((LA34_1>='\u04F8' && LA34_1<='\u04F9')))
			{
				alt34 = 35;
			}
			else if (((LA34_1>='\u0500' && LA34_1<='\u050F')))
			{
				alt34 = 36;
			}
			else if (((LA34_1>='\u0531' && LA34_1<='\u0556')))
			{
				alt34 = 37;
			}
			else if ((LA34_1=='\u0559'))
			{
				alt34 = 38;
			}
			else if (((LA34_1>='\u0561' && LA34_1<='\u0587')))
			{
				alt34 = 39;
			}
			else if (((LA34_1>='\u0591' && LA34_1<='\u05A1')))
			{
				alt34 = 40;
			}
			else if (((LA34_1>='\u05A3' && LA34_1<='\u05B9')))
			{
				alt34 = 41;
			}
			else if (((LA34_1>='\u05BB' && LA34_1<='\u05BD')))
			{
				alt34 = 42;
			}
			else if ((LA34_1=='\u05BF'))
			{
				alt34 = 43;
			}
			else if (((LA34_1>='\u05C1' && LA34_1<='\u05C2')))
			{
				alt34 = 44;
			}
			else if ((LA34_1=='\u05C4'))
			{
				alt34 = 45;
			}
			else if (((LA34_1>='\u05D0' && LA34_1<='\u05EA')))
			{
				alt34 = 46;
			}
			else if (((LA34_1>='\u05F0' && LA34_1<='\u05F2')))
			{
				alt34 = 47;
			}
			else if (((LA34_1>='\u0600' && LA34_1<='\u0603')))
			{
				alt34 = 48;
			}
			else if (((LA34_1>='\u0610' && LA34_1<='\u0615')))
			{
				alt34 = 49;
			}
			else if (((LA34_1>='\u0621' && LA34_1<='\u063A')))
			{
				alt34 = 50;
			}
			else if (((LA34_1>='\u0640' && LA34_1<='\u0658')))
			{
				alt34 = 51;
			}
			else if (((LA34_1>='\u0660' && LA34_1<='\u0669')))
			{
				alt34 = 52;
			}
			else if (((LA34_1>='\u066E' && LA34_1<='\u06D3')))
			{
				alt34 = 53;
			}
			else if (((LA34_1>='\u06D5' && LA34_1<='\u06DD')))
			{
				alt34 = 54;
			}
			else if (((LA34_1>='\u06DF' && LA34_1<='\u06E8')))
			{
				alt34 = 55;
			}
			else if (((LA34_1>='\u06EA' && LA34_1<='\u06FC')))
			{
				alt34 = 56;
			}
			else if ((LA34_1=='\u06FF'))
			{
				alt34 = 57;
			}
			else if (((LA34_1>='\u070F' && LA34_1<='\u074A')))
			{
				alt34 = 58;
			}
			else if (((LA34_1>='\u074D' && LA34_1<='\u074F')))
			{
				alt34 = 59;
			}
			else if (((LA34_1>='\u0780' && LA34_1<='\u07B1')))
			{
				alt34 = 60;
			}
			else if (((LA34_1>='\u0901' && LA34_1<='\u0939')))
			{
				alt34 = 61;
			}
			else if (((LA34_1>='\u093C' && LA34_1<='\u094D')))
			{
				alt34 = 62;
			}
			else if (((LA34_1>='\u0950' && LA34_1<='\u0954')))
			{
				alt34 = 63;
			}
			else if (((LA34_1>='\u0958' && LA34_1<='\u0963')))
			{
				alt34 = 64;
			}
			else if (((LA34_1>='\u0966' && LA34_1<='\u096F')))
			{
				alt34 = 65;
			}
			else if (((LA34_1>='\u0981' && LA34_1<='\u0983')))
			{
				alt34 = 66;
			}
			else if (((LA34_1>='\u0985' && LA34_1<='\u098C')))
			{
				alt34 = 67;
			}
			else if (((LA34_1>='\u098F' && LA34_1<='\u0990')))
			{
				alt34 = 68;
			}
			else if (((LA34_1>='\u0993' && LA34_1<='\u09A8')))
			{
				alt34 = 69;
			}
			else if (((LA34_1>='\u09AA' && LA34_1<='\u09B0')))
			{
				alt34 = 70;
			}
			else if ((LA34_1=='\u09B2'))
			{
				alt34 = 71;
			}
			else if (((LA34_1>='\u09B6' && LA34_1<='\u09B9')))
			{
				alt34 = 72;
			}
			else if (((LA34_1>='\u09BC' && LA34_1<='\u09C4')))
			{
				alt34 = 73;
			}
			else if (((LA34_1>='\u09C7' && LA34_1<='\u09C8')))
			{
				alt34 = 74;
			}
			else if (((LA34_1>='\u09CB' && LA34_1<='\u09CD')))
			{
				alt34 = 75;
			}
			else if ((LA34_1=='\u09D7'))
			{
				alt34 = 76;
			}
			else if (((LA34_1>='\u09DC' && LA34_1<='\u09DD')))
			{
				alt34 = 77;
			}
			else if (((LA34_1>='\u09DF' && LA34_1<='\u09E3')))
			{
				alt34 = 78;
			}
			else if (((LA34_1>='\u09E6' && LA34_1<='\u09F3')))
			{
				alt34 = 79;
			}
			else if (((LA34_1>='\u0A01' && LA34_1<='\u0A03')))
			{
				alt34 = 80;
			}
			else if (((LA34_1>='\u0A05' && LA34_1<='\u0A0A')))
			{
				alt34 = 81;
			}
			else if (((LA34_1>='\u0A0F' && LA34_1<='\u0A10')))
			{
				alt34 = 82;
			}
			else if (((LA34_1>='\u0A13' && LA34_1<='\u0A28')))
			{
				alt34 = 83;
			}
			else if (((LA34_1>='\u0A2A' && LA34_1<='\u0A30')))
			{
				alt34 = 84;
			}
			else if (((LA34_1>='\u0A32' && LA34_1<='\u0A33')))
			{
				alt34 = 85;
			}
			else if (((LA34_1>='\u0A35' && LA34_1<='\u0A36')))
			{
				alt34 = 86;
			}
			else if (((LA34_1>='\u0A38' && LA34_1<='\u0A39')))
			{
				alt34 = 87;
			}
			else if ((LA34_1=='\u0A3C'))
			{
				alt34 = 88;
			}
			else if (((LA34_1>='\u0A3E' && LA34_1<='\u0A42')))
			{
				alt34 = 89;
			}
			else if (((LA34_1>='\u0A47' && LA34_1<='\u0A48')))
			{
				alt34 = 90;
			}
			else if (((LA34_1>='\u0A4B' && LA34_1<='\u0A4D')))
			{
				alt34 = 91;
			}
			else if (((LA34_1>='\u0A59' && LA34_1<='\u0A5C')))
			{
				alt34 = 92;
			}
			else if ((LA34_1=='\u0A5E'))
			{
				alt34 = 93;
			}
			else if (((LA34_1>='\u0A66' && LA34_1<='\u0A74')))
			{
				alt34 = 94;
			}
			else if (((LA34_1>='\u0A81' && LA34_1<='\u0A83')))
			{
				alt34 = 95;
			}
			else if (((LA34_1>='\u0A85' && LA34_1<='\u0A8D')))
			{
				alt34 = 96;
			}
			else if (((LA34_1>='\u0A8F' && LA34_1<='\u0A91')))
			{
				alt34 = 97;
			}
			else if (((LA34_1>='\u0A93' && LA34_1<='\u0AA8')))
			{
				alt34 = 98;
			}
			else if (((LA34_1>='\u0AAA' && LA34_1<='\u0AB0')))
			{
				alt34 = 99;
			}
			else if (((LA34_1>='\u0AB2' && LA34_1<='\u0AB3')))
			{
				alt34 = 100;
			}
			else if (((LA34_1>='\u0AB5' && LA34_1<='\u0AB9')))
			{
				alt34 = 101;
			}
			else if (((LA34_1>='\u0ABC' && LA34_1<='\u0AC5')))
			{
				alt34 = 102;
			}
			else if (((LA34_1>='\u0AC7' && LA34_1<='\u0AC9')))
			{
				alt34 = 103;
			}
			else if (((LA34_1>='\u0ACB' && LA34_1<='\u0ACD')))
			{
				alt34 = 104;
			}
			else if ((LA34_1=='\u0AD0'))
			{
				alt34 = 105;
			}
			else if (((LA34_1>='\u0AE0' && LA34_1<='\u0AE3')))
			{
				alt34 = 106;
			}
			else if (((LA34_1>='\u0AE6' && LA34_1<='\u0AEF')))
			{
				alt34 = 107;
			}
			else if ((LA34_1=='\u0AF1'))
			{
				alt34 = 108;
			}
			else if (((LA34_1>='\u0B01' && LA34_1<='\u0B03')))
			{
				alt34 = 109;
			}
			else if (((LA34_1>='\u0B05' && LA34_1<='\u0B0C')))
			{
				alt34 = 110;
			}
			else if (((LA34_1>='\u0B0F' && LA34_1<='\u0B10')))
			{
				alt34 = 111;
			}
			else if (((LA34_1>='\u0B13' && LA34_1<='\u0B28')))
			{
				alt34 = 112;
			}
			else if (((LA34_1>='\u0B2A' && LA34_1<='\u0B30')))
			{
				alt34 = 113;
			}
			else if (((LA34_1>='\u0B32' && LA34_1<='\u0B33')))
			{
				alt34 = 114;
			}
			else if (((LA34_1>='\u0B35' && LA34_1<='\u0B39')))
			{
				alt34 = 115;
			}
			else if (((LA34_1>='\u0B3C' && LA34_1<='\u0B43')))
			{
				alt34 = 116;
			}
			else if (((LA34_1>='\u0B47' && LA34_1<='\u0B48')))
			{
				alt34 = 117;
			}
			else if (((LA34_1>='\u0B4B' && LA34_1<='\u0B4D')))
			{
				alt34 = 118;
			}
			else if (((LA34_1>='\u0B56' && LA34_1<='\u0B57')))
			{
				alt34 = 119;
			}
			else if (((LA34_1>='\u0B5C' && LA34_1<='\u0B5D')))
			{
				alt34 = 120;
			}
			else if (((LA34_1>='\u0B5F' && LA34_1<='\u0B61')))
			{
				alt34 = 121;
			}
			else if (((LA34_1>='\u0B66' && LA34_1<='\u0B6F')))
			{
				alt34 = 122;
			}
			else if ((LA34_1=='\u0B71'))
			{
				alt34 = 123;
			}
			else if (((LA34_1>='\u0B82' && LA34_1<='\u0B83')))
			{
				alt34 = 124;
			}
			else if (((LA34_1>='\u0B85' && LA34_1<='\u0B8A')))
			{
				alt34 = 125;
			}
			else if (((LA34_1>='\u0B8E' && LA34_1<='\u0B90')))
			{
				alt34 = 126;
			}
			else if (((LA34_1>='\u0B92' && LA34_1<='\u0B95')))
			{
				alt34 = 127;
			}
			else if (((LA34_1>='\u0B99' && LA34_1<='\u0B9A')))
			{
				alt34 = 128;
			}
			else if ((LA34_1=='\u0B9C'))
			{
				alt34 = 129;
			}
			else if (((LA34_1>='\u0B9E' && LA34_1<='\u0B9F')))
			{
				alt34 = 130;
			}
			else if (((LA34_1>='\u0BA3' && LA34_1<='\u0BA4')))
			{
				alt34 = 131;
			}
			else if (((LA34_1>='\u0BA8' && LA34_1<='\u0BAA')))
			{
				alt34 = 132;
			}
			else if (((LA34_1>='\u0BAE' && LA34_1<='\u0BB5')))
			{
				alt34 = 133;
			}
			else if (((LA34_1>='\u0BB7' && LA34_1<='\u0BB9')))
			{
				alt34 = 134;
			}
			else if (((LA34_1>='\u0BBE' && LA34_1<='\u0BC2')))
			{
				alt34 = 135;
			}
			else if (((LA34_1>='\u0BC6' && LA34_1<='\u0BC8')))
			{
				alt34 = 136;
			}
			else if (((LA34_1>='\u0BCA' && LA34_1<='\u0BCD')))
			{
				alt34 = 137;
			}
			else if ((LA34_1=='\u0BD7'))
			{
				alt34 = 138;
			}
			else if (((LA34_1>='\u0BE7' && LA34_1<='\u0BEF')))
			{
				alt34 = 139;
			}
			else if ((LA34_1=='\u0BF9'))
			{
				alt34 = 140;
			}
			else if (((LA34_1>='\u0C01' && LA34_1<='\u0C03')))
			{
				alt34 = 141;
			}
			else if (((LA34_1>='\u0C05' && LA34_1<='\u0C0C')))
			{
				alt34 = 142;
			}
			else if (((LA34_1>='\u0C0E' && LA34_1<='\u0C10')))
			{
				alt34 = 143;
			}
			else if (((LA34_1>='\u0C12' && LA34_1<='\u0C28')))
			{
				alt34 = 144;
			}
			else if (((LA34_1>='\u0C2A' && LA34_1<='\u0C33')))
			{
				alt34 = 145;
			}
			else if (((LA34_1>='\u0C35' && LA34_1<='\u0C39')))
			{
				alt34 = 146;
			}
			else if (((LA34_1>='\u0C3E' && LA34_1<='\u0C44')))
			{
				alt34 = 147;
			}
			else if (((LA34_1>='\u0C46' && LA34_1<='\u0C48')))
			{
				alt34 = 148;
			}
			else if (((LA34_1>='\u0C4A' && LA34_1<='\u0C4D')))
			{
				alt34 = 149;
			}
			else if (((LA34_1>='\u0C55' && LA34_1<='\u0C56')))
			{
				alt34 = 150;
			}
			else if (((LA34_1>='\u0C60' && LA34_1<='\u0C61')))
			{
				alt34 = 151;
			}
			else if (((LA34_1>='\u0C66' && LA34_1<='\u0C6F')))
			{
				alt34 = 152;
			}
			else if (((LA34_1>='\u0C82' && LA34_1<='\u0C83')))
			{
				alt34 = 153;
			}
			else if (((LA34_1>='\u0C85' && LA34_1<='\u0C8C')))
			{
				alt34 = 154;
			}
			else if (((LA34_1>='\u0C8E' && LA34_1<='\u0C90')))
			{
				alt34 = 155;
			}
			else if (((LA34_1>='\u0C92' && LA34_1<='\u0CA8')))
			{
				alt34 = 156;
			}
			else if (((LA34_1>='\u0CAA' && LA34_1<='\u0CB3')))
			{
				alt34 = 157;
			}
			else if (((LA34_1>='\u0CB5' && LA34_1<='\u0CB9')))
			{
				alt34 = 158;
			}
			else if (((LA34_1>='\u0CBC' && LA34_1<='\u0CC4')))
			{
				alt34 = 159;
			}
			else if (((LA34_1>='\u0CC6' && LA34_1<='\u0CC8')))
			{
				alt34 = 160;
			}
			else if (((LA34_1>='\u0CCA' && LA34_1<='\u0CCD')))
			{
				alt34 = 161;
			}
			else if (((LA34_1>='\u0CD5' && LA34_1<='\u0CD6')))
			{
				alt34 = 162;
			}
			else if ((LA34_1=='\u0CDE'))
			{
				alt34 = 163;
			}
			else if (((LA34_1>='\u0CE0' && LA34_1<='\u0CE1')))
			{
				alt34 = 164;
			}
			else if (((LA34_1>='\u0CE6' && LA34_1<='\u0CEF')))
			{
				alt34 = 165;
			}
			else if (((LA34_1>='\u0D02' && LA34_1<='\u0D03')))
			{
				alt34 = 166;
			}
			else if (((LA34_1>='\u0D05' && LA34_1<='\u0D0C')))
			{
				alt34 = 167;
			}
			else if (((LA34_1>='\u0D0E' && LA34_1<='\u0D10')))
			{
				alt34 = 168;
			}
			else if (((LA34_1>='\u0D12' && LA34_1<='\u0D28')))
			{
				alt34 = 169;
			}
			else if (((LA34_1>='\u0D2A' && LA34_1<='\u0D39')))
			{
				alt34 = 170;
			}
			else if (((LA34_1>='\u0D3E' && LA34_1<='\u0D43')))
			{
				alt34 = 171;
			}
			else if (((LA34_1>='\u0D46' && LA34_1<='\u0D48')))
			{
				alt34 = 172;
			}
			else if (((LA34_1>='\u0D4A' && LA34_1<='\u0D4D')))
			{
				alt34 = 173;
			}
			else if ((LA34_1=='\u0D57'))
			{
				alt34 = 174;
			}
			else if (((LA34_1>='\u0D60' && LA34_1<='\u0D61')))
			{
				alt34 = 175;
			}
			else if (((LA34_1>='\u0D66' && LA34_1<='\u0D6F')))
			{
				alt34 = 176;
			}
			else if (((LA34_1>='\u0D82' && LA34_1<='\u0D83')))
			{
				alt34 = 177;
			}
			else if (((LA34_1>='\u0D85' && LA34_1<='\u0D96')))
			{
				alt34 = 178;
			}
			else if (((LA34_1>='\u0D9A' && LA34_1<='\u0DB1')))
			{
				alt34 = 179;
			}
			else if (((LA34_1>='\u0DB3' && LA34_1<='\u0DBB')))
			{
				alt34 = 180;
			}
			else if ((LA34_1=='\u0DBD'))
			{
				alt34 = 181;
			}
			else if (((LA34_1>='\u0DC0' && LA34_1<='\u0DC6')))
			{
				alt34 = 182;
			}
			else if ((LA34_1=='\u0DCA'))
			{
				alt34 = 183;
			}
			else if (((LA34_1>='\u0DCF' && LA34_1<='\u0DD4')))
			{
				alt34 = 184;
			}
			else if ((LA34_1=='\u0DD6'))
			{
				alt34 = 185;
			}
			else if (((LA34_1>='\u0DD8' && LA34_1<='\u0DDF')))
			{
				alt34 = 186;
			}
			else if (((LA34_1>='\u0DF2' && LA34_1<='\u0DF3')))
			{
				alt34 = 187;
			}
			else if (((LA34_1>='\u0E01' && LA34_1<='\u0E3A')))
			{
				alt34 = 188;
			}
			else if (((LA34_1>='\u0E3F' && LA34_1<='\u0E4E')))
			{
				alt34 = 189;
			}
			else if (((LA34_1>='\u0E50' && LA34_1<='\u0E59')))
			{
				alt34 = 190;
			}
			else if (((LA34_1>='\u0E81' && LA34_1<='\u0E82')))
			{
				alt34 = 191;
			}
			else if ((LA34_1=='\u0E84'))
			{
				alt34 = 192;
			}
			else if (((LA34_1>='\u0E87' && LA34_1<='\u0E88')))
			{
				alt34 = 193;
			}
			else if ((LA34_1=='\u0E8A'))
			{
				alt34 = 194;
			}
			else if ((LA34_1=='\u0E8D'))
			{
				alt34 = 195;
			}
			else if (((LA34_1>='\u0E94' && LA34_1<='\u0E97')))
			{
				alt34 = 196;
			}
			else if (((LA34_1>='\u0E99' && LA34_1<='\u0E9F')))
			{
				alt34 = 197;
			}
			else if (((LA34_1>='\u0EA1' && LA34_1<='\u0EA3')))
			{
				alt34 = 198;
			}
			else if ((LA34_1=='\u0EA5'))
			{
				alt34 = 199;
			}
			else if ((LA34_1=='\u0EA7'))
			{
				alt34 = 200;
			}
			else if (((LA34_1>='\u0EAA' && LA34_1<='\u0EAB')))
			{
				alt34 = 201;
			}
			else if (((LA34_1>='\u0EAD' && LA34_1<='\u0EB9')))
			{
				alt34 = 202;
			}
			else if (((LA34_1>='\u0EBB' && LA34_1<='\u0EBD')))
			{
				alt34 = 203;
			}
			else if (((LA34_1>='\u0EC0' && LA34_1<='\u0EC4')))
			{
				alt34 = 204;
			}
			else if ((LA34_1=='\u0EC6'))
			{
				alt34 = 205;
			}
			else if (((LA34_1>='\u0EC8' && LA34_1<='\u0ECD')))
			{
				alt34 = 206;
			}
			else if (((LA34_1>='\u0ED0' && LA34_1<='\u0ED9')))
			{
				alt34 = 207;
			}
			else if (((LA34_1>='\u0EDC' && LA34_1<='\u0EDD')))
			{
				alt34 = 208;
			}
			else if ((LA34_1=='\u0F00'))
			{
				alt34 = 209;
			}
			else if (((LA34_1>='\u0F18' && LA34_1<='\u0F19')))
			{
				alt34 = 210;
			}
			else if (((LA34_1>='\u0F20' && LA34_1<='\u0F29')))
			{
				alt34 = 211;
			}
			else if ((LA34_1=='\u0F35'))
			{
				alt34 = 212;
			}
			else if ((LA34_1=='\u0F37'))
			{
				alt34 = 213;
			}
			else if ((LA34_1=='\u0F39'))
			{
				alt34 = 214;
			}
			else if (((LA34_1>='\u0F3E' && LA34_1<='\u0F47')))
			{
				alt34 = 215;
			}
			else if (((LA34_1>='\u0F49' && LA34_1<='\u0F6A')))
			{
				alt34 = 216;
			}
			else if (((LA34_1>='\u0F71' && LA34_1<='\u0F84')))
			{
				alt34 = 217;
			}
			else if (((LA34_1>='\u0F86' && LA34_1<='\u0F8B')))
			{
				alt34 = 218;
			}
			else if (((LA34_1>='\u0F90' && LA34_1<='\u0F97')))
			{
				alt34 = 219;
			}
			else if (((LA34_1>='\u0F99' && LA34_1<='\u0FBC')))
			{
				alt34 = 220;
			}
			else if ((LA34_1=='\u0FC6'))
			{
				alt34 = 221;
			}
			else if (((LA34_1>='\u1000' && LA34_1<='\u1021')))
			{
				alt34 = 222;
			}
			else if (((LA34_1>='\u1023' && LA34_1<='\u1027')))
			{
				alt34 = 223;
			}
			else if (((LA34_1>='\u1029' && LA34_1<='\u102A')))
			{
				alt34 = 224;
			}
			else if (((LA34_1>='\u102C' && LA34_1<='\u1032')))
			{
				alt34 = 225;
			}
			else if (((LA34_1>='\u1036' && LA34_1<='\u1039')))
			{
				alt34 = 226;
			}
			else if (((LA34_1>='\u1040' && LA34_1<='\u1049')))
			{
				alt34 = 227;
			}
			else if (((LA34_1>='\u1050' && LA34_1<='\u1059')))
			{
				alt34 = 228;
			}
			else if (((LA34_1>='\u10A0' && LA34_1<='\u10C5')))
			{
				alt34 = 229;
			}
			else if (((LA34_1>='\u10D0' && LA34_1<='\u10F8')))
			{
				alt34 = 230;
			}
			else if (((LA34_1>='\u1100' && LA34_1<='\u1159')))
			{
				alt34 = 231;
			}
			else if (((LA34_1>='\u115F' && LA34_1<='\u11A2')))
			{
				alt34 = 232;
			}
			else if (((LA34_1>='\u11A8' && LA34_1<='\u11F9')))
			{
				alt34 = 233;
			}
			else if (((LA34_1>='\u1200' && LA34_1<='\u1206')))
			{
				alt34 = 234;
			}
			else if (((LA34_1>='\u1208' && LA34_1<='\u1246')))
			{
				alt34 = 235;
			}
			else if ((LA34_1=='\u1248'))
			{
				alt34 = 236;
			}
			else if (((LA34_1>='\u124A' && LA34_1<='\u124D')))
			{
				alt34 = 237;
			}
			else if (((LA34_1>='\u1250' && LA34_1<='\u1256')))
			{
				alt34 = 238;
			}
			else if ((LA34_1=='\u1258'))
			{
				alt34 = 239;
			}
			else if (((LA34_1>='\u125A' && LA34_1<='\u125D')))
			{
				alt34 = 240;
			}
			else if (((LA34_1>='\u1260' && LA34_1<='\u1286')))
			{
				alt34 = 241;
			}
			else if ((LA34_1=='\u1288'))
			{
				alt34 = 242;
			}
			else if (((LA34_1>='\u128A' && LA34_1<='\u128D')))
			{
				alt34 = 243;
			}
			else if (((LA34_1>='\u1290' && LA34_1<='\u12AE')))
			{
				alt34 = 244;
			}
			else if ((LA34_1=='\u12B0'))
			{
				alt34 = 245;
			}
			else if (((LA34_1>='\u12B2' && LA34_1<='\u12B5')))
			{
				alt34 = 246;
			}
			else if (((LA34_1>='\u12B8' && LA34_1<='\u12BE')))
			{
				alt34 = 247;
			}
			else if ((LA34_1=='\u12C0'))
			{
				alt34 = 248;
			}
			else if (((LA34_1>='\u12C2' && LA34_1<='\u12C5')))
			{
				alt34 = 249;
			}
			else if (((LA34_1>='\u12C8' && LA34_1<='\u12CE')))
			{
				alt34 = 250;
			}
			else if (((LA34_1>='\u12D0' && LA34_1<='\u12D6')))
			{
				alt34 = 251;
			}
			else if (((LA34_1>='\u12D8' && LA34_1<='\u12EE')))
			{
				alt34 = 252;
			}
			else if (((LA34_1>='\u12F0' && LA34_1<='\u130E')))
			{
				alt34 = 253;
			}
			else if ((LA34_1=='\u1310'))
			{
				alt34 = 254;
			}
			else if (((LA34_1>='\u1312' && LA34_1<='\u1315')))
			{
				alt34 = 255;
			}
			else if (((LA34_1>='\u1318' && LA34_1<='\u131E')))
			{
				alt34 = 256;
			}
			else if (((LA34_1>='\u1320' && LA34_1<='\u1346')))
			{
				alt34 = 257;
			}
			else if (((LA34_1>='\u1348' && LA34_1<='\u135A')))
			{
				alt34 = 258;
			}
			else if (((LA34_1>='\u1369' && LA34_1<='\u1371')))
			{
				alt34 = 259;
			}
			else if (((LA34_1>='\u13A0' && LA34_1<='\u13F4')))
			{
				alt34 = 260;
			}
			else if (((LA34_1>='\u1401' && LA34_1<='\u166C')))
			{
				alt34 = 261;
			}
			else if (((LA34_1>='\u166F' && LA34_1<='\u1676')))
			{
				alt34 = 262;
			}
			else if (((LA34_1>='\u1681' && LA34_1<='\u169A')))
			{
				alt34 = 263;
			}
			else if (((LA34_1>='\u16A0' && LA34_1<='\u16EA')))
			{
				alt34 = 264;
			}
			else if (((LA34_1>='\u16EE' && LA34_1<='\u16F0')))
			{
				alt34 = 265;
			}
			else if (((LA34_1>='\u1700' && LA34_1<='\u170C')))
			{
				alt34 = 266;
			}
			else if (((LA34_1>='\u170E' && LA34_1<='\u1714')))
			{
				alt34 = 267;
			}
			else if (((LA34_1>='\u1720' && LA34_1<='\u1734')))
			{
				alt34 = 268;
			}
			else if (((LA34_1>='\u1740' && LA34_1<='\u1753')))
			{
				alt34 = 269;
			}
			else if (((LA34_1>='\u1760' && LA34_1<='\u176C')))
			{
				alt34 = 270;
			}
			else if (((LA34_1>='\u176E' && LA34_1<='\u1770')))
			{
				alt34 = 271;
			}
			else if (((LA34_1>='\u1772' && LA34_1<='\u1773')))
			{
				alt34 = 272;
			}
			else if (((LA34_1>='\u1780' && LA34_1<='\u17D3')))
			{
				alt34 = 273;
			}
			else if ((LA34_1=='\u17D7'))
			{
				alt34 = 274;
			}
			else if (((LA34_1>='\u17DB' && LA34_1<='\u17DD')))
			{
				alt34 = 275;
			}
			else if (((LA34_1>='\u17E0' && LA34_1<='\u17E9')))
			{
				alt34 = 276;
			}
			else if (((LA34_1>='\u180B' && LA34_1<='\u180D')))
			{
				alt34 = 277;
			}
			else if (((LA34_1>='\u1810' && LA34_1<='\u1819')))
			{
				alt34 = 278;
			}
			else if (((LA34_1>='\u1820' && LA34_1<='\u1877')))
			{
				alt34 = 279;
			}
			else if (((LA34_1>='\u1880' && LA34_1<='\u18A9')))
			{
				alt34 = 280;
			}
			else if (((LA34_1>='\u1900' && LA34_1<='\u191C')))
			{
				alt34 = 281;
			}
			else if (((LA34_1>='\u1920' && LA34_1<='\u192B')))
			{
				alt34 = 282;
			}
			else if (((LA34_1>='\u1930' && LA34_1<='\u193B')))
			{
				alt34 = 283;
			}
			else if (((LA34_1>='\u1946' && LA34_1<='\u196D')))
			{
				alt34 = 284;
			}
			else if (((LA34_1>='\u1970' && LA34_1<='\u1974')))
			{
				alt34 = 285;
			}
			else if (((LA34_1>='\u1D00' && LA34_1<='\u1D6B')))
			{
				alt34 = 286;
			}
			else if (((LA34_1>='\u1E00' && LA34_1<='\u1E9B')))
			{
				alt34 = 287;
			}
			else if (((LA34_1>='\u1EA0' && LA34_1<='\u1EF9')))
			{
				alt34 = 288;
			}
			else if (((LA34_1>='\u1F00' && LA34_1<='\u1F15')))
			{
				alt34 = 289;
			}
			else if (((LA34_1>='\u1F18' && LA34_1<='\u1F1D')))
			{
				alt34 = 290;
			}
			else if (((LA34_1>='\u1F20' && LA34_1<='\u1F45')))
			{
				alt34 = 291;
			}
			else if (((LA34_1>='\u1F48' && LA34_1<='\u1F4D')))
			{
				alt34 = 292;
			}
			else if (((LA34_1>='\u1F50' && LA34_1<='\u1F57')))
			{
				alt34 = 293;
			}
			else if ((LA34_1=='\u1F59'))
			{
				alt34 = 294;
			}
			else if ((LA34_1=='\u1F5B'))
			{
				alt34 = 295;
			}
			else if ((LA34_1=='\u1F5D'))
			{
				alt34 = 296;
			}
			else if (((LA34_1>='\u1F5F' && LA34_1<='\u1F7D')))
			{
				alt34 = 297;
			}
			else if (((LA34_1>='\u1F80' && LA34_1<='\u1FB4')))
			{
				alt34 = 298;
			}
			else if (((LA34_1>='\u1FB6' && LA34_1<='\u1FBC')))
			{
				alt34 = 299;
			}
			else if ((LA34_1=='\u1FBE'))
			{
				alt34 = 300;
			}
			else if (((LA34_1>='\u1FC2' && LA34_1<='\u1FC4')))
			{
				alt34 = 301;
			}
			else if (((LA34_1>='\u1FC6' && LA34_1<='\u1FCC')))
			{
				alt34 = 302;
			}
			else if (((LA34_1>='\u1FD0' && LA34_1<='\u1FD3')))
			{
				alt34 = 303;
			}
			else if (((LA34_1>='\u1FD6' && LA34_1<='\u1FDB')))
			{
				alt34 = 304;
			}
			else if (((LA34_1>='\u1FE0' && LA34_1<='\u1FEC')))
			{
				alt34 = 305;
			}
			else if (((LA34_1>='\u1FF2' && LA34_1<='\u1FF4')))
			{
				alt34 = 306;
			}
			else if (((LA34_1>='\u1FF6' && LA34_1<='\u1FFC')))
			{
				alt34 = 307;
			}
			else if (((LA34_1>='\u200C' && LA34_1<='\u200F')))
			{
				alt34 = 308;
			}
			else if (((LA34_1>='\u202A' && LA34_1<='\u202E')))
			{
				alt34 = 309;
			}
			else if (((LA34_1>='\u203F' && LA34_1<='\u2040')))
			{
				alt34 = 310;
			}
			else if ((LA34_1=='\u2054'))
			{
				alt34 = 311;
			}
			else if (((LA34_1>='\u2060' && LA34_1<='\u2063')))
			{
				alt34 = 312;
			}
			else if (((LA34_1>='\u206A' && LA34_1<='\u206F')))
			{
				alt34 = 313;
			}
			else if ((LA34_1=='\u2071'))
			{
				alt34 = 314;
			}
			else if ((LA34_1=='\u207F'))
			{
				alt34 = 315;
			}
			else if (((LA34_1>='\u20A0' && LA34_1<='\u20B1')))
			{
				alt34 = 316;
			}
			else if (((LA34_1>='\u20D0' && LA34_1<='\u20DC')))
			{
				alt34 = 317;
			}
			else if ((LA34_1=='\u20E1'))
			{
				alt34 = 318;
			}
			else if (((LA34_1>='\u20E5' && LA34_1<='\u20EA')))
			{
				alt34 = 319;
			}
			else if ((LA34_1=='\u2102'))
			{
				alt34 = 320;
			}
			else if ((LA34_1=='\u2107'))
			{
				alt34 = 321;
			}
			else if (((LA34_1>='\u210A' && LA34_1<='\u2113')))
			{
				alt34 = 322;
			}
			else if ((LA34_1=='\u2115'))
			{
				alt34 = 323;
			}
			else if (((LA34_1>='\u2119' && LA34_1<='\u211D')))
			{
				alt34 = 324;
			}
			else if ((LA34_1=='\u2124'))
			{
				alt34 = 325;
			}
			else if ((LA34_1=='\u2126'))
			{
				alt34 = 326;
			}
			else if ((LA34_1=='\u2128'))
			{
				alt34 = 327;
			}
			else if (((LA34_1>='\u212A' && LA34_1<='\u212D')))
			{
				alt34 = 328;
			}
			else if (((LA34_1>='\u212F' && LA34_1<='\u2131')))
			{
				alt34 = 329;
			}
			else if (((LA34_1>='\u2133' && LA34_1<='\u2139')))
			{
				alt34 = 330;
			}
			else if (((LA34_1>='\u213D' && LA34_1<='\u213F')))
			{
				alt34 = 331;
			}
			else if (((LA34_1>='\u2145' && LA34_1<='\u2149')))
			{
				alt34 = 332;
			}
			else if (((LA34_1>='\u2160' && LA34_1<='\u2183')))
			{
				alt34 = 333;
			}
			else if (((LA34_1>='\u3005' && LA34_1<='\u3007')))
			{
				alt34 = 334;
			}
			else if (((LA34_1>='\u3021' && LA34_1<='\u302F')))
			{
				alt34 = 335;
			}
			else if (((LA34_1>='\u3031' && LA34_1<='\u3035')))
			{
				alt34 = 336;
			}
			else if (((LA34_1>='\u3038' && LA34_1<='\u303C')))
			{
				alt34 = 337;
			}
			else if (((LA34_1>='\u3041' && LA34_1<='\u3096')))
			{
				alt34 = 338;
			}
			else if (((LA34_1>='\u3099' && LA34_1<='\u309A')))
			{
				alt34 = 339;
			}
			else if (((LA34_1>='\u309D' && LA34_1<='\u309F')))
			{
				alt34 = 340;
			}
			else if (((LA34_1>='\u30A1' && LA34_1<='\u30FF')))
			{
				alt34 = 341;
			}
			else if (((LA34_1>='\u3105' && LA34_1<='\u312C')))
			{
				alt34 = 342;
			}
			else if (((LA34_1>='\u3131' && LA34_1<='\u318E')))
			{
				alt34 = 343;
			}
			else if (((LA34_1>='\u31A0' && LA34_1<='\u31B7')))
			{
				alt34 = 344;
			}
			else if (((LA34_1>='\u31F0' && LA34_1<='\u31FF')))
			{
				alt34 = 345;
			}
			else if (((LA34_1>='\u3400' && LA34_1<='\u4DB5')))
			{
				alt34 = 346;
			}
			else if (((LA34_1>='\u4E00' && LA34_1<='\u9FA5')))
			{
				alt34 = 347;
			}
			else if (((LA34_1>='\uA000' && LA34_1<='\uA48C')))
			{
				alt34 = 348;
			}
			else if (((LA34_1>='\uAC00' && LA34_1<='\uD7A3')))
			{
				alt34 = 349;
			}
			else if (((LA34_1>='\uF900' && LA34_1<='\uFA2D')))
			{
				alt34 = 350;
			}
			else if (((LA34_1>='\uFA30' && LA34_1<='\uFA6A')))
			{
				alt34 = 351;
			}
			else if (((LA34_1>='\uFB00' && LA34_1<='\uFB06')))
			{
				alt34 = 352;
			}
			else if (((LA34_1>='\uFB13' && LA34_1<='\uFB17')))
			{
				alt34 = 353;
			}
			else if (((LA34_1>='\uFB1D' && LA34_1<='\uFB28')))
			{
				alt34 = 354;
			}
			else if (((LA34_1>='\uFB2A' && LA34_1<='\uFB36')))
			{
				alt34 = 355;
			}
			else if (((LA34_1>='\uFB38' && LA34_1<='\uFB3C')))
			{
				alt34 = 356;
			}
			else if ((LA34_1=='\uFB3E'))
			{
				alt34 = 357;
			}
			else if (((LA34_1>='\uFB40' && LA34_1<='\uFB41')))
			{
				alt34 = 358;
			}
			else if (((LA34_1>='\uFB43' && LA34_1<='\uFB44')))
			{
				alt34 = 359;
			}
			else if (((LA34_1>='\uFB46' && LA34_1<='\uFBB1')))
			{
				alt34 = 360;
			}
			else if (((LA34_1>='\uFBD3' && LA34_1<='\uFD3D')))
			{
				alt34 = 361;
			}
			else if (((LA34_1>='\uFD50' && LA34_1<='\uFD8F')))
			{
				alt34 = 362;
			}
			else if (((LA34_1>='\uFD92' && LA34_1<='\uFDC7')))
			{
				alt34 = 363;
			}
			else if (((LA34_1>='\uFDF0' && LA34_1<='\uFDFC')))
			{
				alt34 = 364;
			}
			else if (((LA34_1>='\uFE00' && LA34_1<='\uFE0F')))
			{
				alt34 = 365;
			}
			else if (((LA34_1>='\uFE20' && LA34_1<='\uFE23')))
			{
				alt34 = 366;
			}
			else if (((LA34_1>='\uFE33' && LA34_1<='\uFE34')))
			{
				alt34 = 367;
			}
			else if (((LA34_1>='\uFE4D' && LA34_1<='\uFE4F')))
			{
				alt34 = 368;
			}
			else if ((LA34_1=='\uFE69'))
			{
				alt34 = 369;
			}
			else if (((LA34_1>='\uFE70' && LA34_1<='\uFE74')))
			{
				alt34 = 370;
			}
			else if (((LA34_1>='\uFE76' && LA34_1<='\uFEFC')))
			{
				alt34 = 371;
			}
			else if ((LA34_1=='\uFEFF'))
			{
				alt34 = 372;
			}
			else if ((LA34_1=='\uFF04'))
			{
				alt34 = 373;
			}
			else if (((LA34_1>='\uFF10' && LA34_1<='\uFF19')))
			{
				alt34 = 374;
			}
			else if (((LA34_1>='\uFF21' && LA34_1<='\uFF3A')))
			{
				alt34 = 375;
			}
			else if ((LA34_1=='\uFF3F'))
			{
				alt34 = 376;
			}
			else if (((LA34_1>='\uFF41' && LA34_1<='\uFF5A')))
			{
				alt34 = 377;
			}
			else if (((LA34_1>='\uFF65' && LA34_1<='\uFFBE')))
			{
				alt34 = 378;
			}
			else if (((LA34_1>='\uFFC2' && LA34_1<='\uFFC7')))
			{
				alt34 = 379;
			}
			else if (((LA34_1>='\uFFCA' && LA34_1<='\uFFCF')))
			{
				alt34 = 380;
			}
			else if (((LA34_1>='\uFFD2' && LA34_1<='\uFFD7')))
			{
				alt34 = 381;
			}
			else if (((LA34_1>='\uFFDA' && LA34_1<='\uFFDC')))
			{
				alt34 = 382;
			}
			else if (((LA34_1>='\uFFE0' && LA34_1<='\uFFE1')))
			{
				alt34 = 383;
			}
			else if (((LA34_1>='\uFFE5' && LA34_1<='\uFFE6')))
			{
				alt34 = 384;
			}
			else if (((LA34_1>='\uFFF9' && LA34_1<='\uFFFB')))
			{
				alt34 = 385;
			}
			else if (((LA34_1>='\uD800' && LA34_1<='\uDBFF')))
			{
				alt34 = 386;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 34, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(34); }
			switch (alt34)
			{
			case 1:
				DebugEnterAlt(1);
				// Java6ColorizerLexer.g:776:9: '\\u0000' .. '\\u0008'
				{
				DebugLocation(776, 9);
				MatchRange('\u0000','\b'); if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// Java6ColorizerLexer.g:777:9: '\\u000e' .. '\\u001b'
				{
				DebugLocation(777, 9);
				MatchRange('\u000E','\u001B'); if (state.failed) return;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// Java6ColorizerLexer.g:778:9: '\\u0024'
				{
				DebugLocation(778, 9);
				Match('$'); if (state.failed) return;

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// Java6ColorizerLexer.g:779:9: '\\u0030' .. '\\u0039'
				{
				DebugLocation(779, 9);
				MatchRange('0','9'); if (state.failed) return;

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// Java6ColorizerLexer.g:780:9: '\\u0041' .. '\\u005a'
				{
				DebugLocation(780, 9);
				MatchRange('A','Z'); if (state.failed) return;

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// Java6ColorizerLexer.g:781:9: '\\u005f'
				{
				DebugLocation(781, 9);
				Match('_'); if (state.failed) return;

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// Java6ColorizerLexer.g:782:9: '\\u0061' .. '\\u007a'
				{
				DebugLocation(782, 9);
				MatchRange('a','z'); if (state.failed) return;

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// Java6ColorizerLexer.g:783:9: '\\u007f' .. '\\u009f'
				{
				DebugLocation(783, 9);
				MatchRange('\u007F','\u009F'); if (state.failed) return;

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// Java6ColorizerLexer.g:784:9: '\\u00a2' .. '\\u00a5'
				{
				DebugLocation(784, 9);
				MatchRange('\u00A2','\u00A5'); if (state.failed) return;

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// Java6ColorizerLexer.g:785:9: '\\u00aa'
				{
				DebugLocation(785, 9);
				Match('\u00AA'); if (state.failed) return;

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// Java6ColorizerLexer.g:786:9: '\\u00ad'
				{
				DebugLocation(786, 9);
				Match('\u00AD'); if (state.failed) return;

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// Java6ColorizerLexer.g:787:9: '\\u00b5'
				{
				DebugLocation(787, 9);
				Match('\u00B5'); if (state.failed) return;

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// Java6ColorizerLexer.g:788:9: '\\u00ba'
				{
				DebugLocation(788, 9);
				Match('\u00BA'); if (state.failed) return;

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// Java6ColorizerLexer.g:789:9: '\\u00c0' .. '\\u00d6'
				{
				DebugLocation(789, 9);
				MatchRange('\u00C0','\u00D6'); if (state.failed) return;

				}
				break;
			case 15:
				DebugEnterAlt(15);
				// Java6ColorizerLexer.g:790:9: '\\u00d8' .. '\\u00f6'
				{
				DebugLocation(790, 9);
				MatchRange('\u00D8','\u00F6'); if (state.failed) return;

				}
				break;
			case 16:
				DebugEnterAlt(16);
				// Java6ColorizerLexer.g:791:9: '\\u00f8' .. '\\u0236'
				{
				DebugLocation(791, 9);
				MatchRange('\u00F8','\u0236'); if (state.failed) return;

				}
				break;
			case 17:
				DebugEnterAlt(17);
				// Java6ColorizerLexer.g:792:9: '\\u0250' .. '\\u02c1'
				{
				DebugLocation(792, 9);
				MatchRange('\u0250','\u02C1'); if (state.failed) return;

				}
				break;
			case 18:
				DebugEnterAlt(18);
				// Java6ColorizerLexer.g:793:9: '\\u02c6' .. '\\u02d1'
				{
				DebugLocation(793, 9);
				MatchRange('\u02C6','\u02D1'); if (state.failed) return;

				}
				break;
			case 19:
				DebugEnterAlt(19);
				// Java6ColorizerLexer.g:794:9: '\\u02e0' .. '\\u02e4'
				{
				DebugLocation(794, 9);
				MatchRange('\u02E0','\u02E4'); if (state.failed) return;

				}
				break;
			case 20:
				DebugEnterAlt(20);
				// Java6ColorizerLexer.g:795:9: '\\u02ee'
				{
				DebugLocation(795, 9);
				Match('\u02EE'); if (state.failed) return;

				}
				break;
			case 21:
				DebugEnterAlt(21);
				// Java6ColorizerLexer.g:796:9: '\\u0300' .. '\\u0357'
				{
				DebugLocation(796, 9);
				MatchRange('\u0300','\u0357'); if (state.failed) return;

				}
				break;
			case 22:
				DebugEnterAlt(22);
				// Java6ColorizerLexer.g:797:9: '\\u035d' .. '\\u036f'
				{
				DebugLocation(797, 9);
				MatchRange('\u035D','\u036F'); if (state.failed) return;

				}
				break;
			case 23:
				DebugEnterAlt(23);
				// Java6ColorizerLexer.g:798:9: '\\u037a'
				{
				DebugLocation(798, 9);
				Match('\u037A'); if (state.failed) return;

				}
				break;
			case 24:
				DebugEnterAlt(24);
				// Java6ColorizerLexer.g:799:9: '\\u0386'
				{
				DebugLocation(799, 9);
				Match('\u0386'); if (state.failed) return;

				}
				break;
			case 25:
				DebugEnterAlt(25);
				// Java6ColorizerLexer.g:800:9: '\\u0388' .. '\\u038a'
				{
				DebugLocation(800, 9);
				MatchRange('\u0388','\u038A'); if (state.failed) return;

				}
				break;
			case 26:
				DebugEnterAlt(26);
				// Java6ColorizerLexer.g:801:9: '\\u038c'
				{
				DebugLocation(801, 9);
				Match('\u038C'); if (state.failed) return;

				}
				break;
			case 27:
				DebugEnterAlt(27);
				// Java6ColorizerLexer.g:802:9: '\\u038e' .. '\\u03a1'
				{
				DebugLocation(802, 9);
				MatchRange('\u038E','\u03A1'); if (state.failed) return;

				}
				break;
			case 28:
				DebugEnterAlt(28);
				// Java6ColorizerLexer.g:803:9: '\\u03a3' .. '\\u03ce'
				{
				DebugLocation(803, 9);
				MatchRange('\u03A3','\u03CE'); if (state.failed) return;

				}
				break;
			case 29:
				DebugEnterAlt(29);
				// Java6ColorizerLexer.g:804:9: '\\u03d0' .. '\\u03f5'
				{
				DebugLocation(804, 9);
				MatchRange('\u03D0','\u03F5'); if (state.failed) return;

				}
				break;
			case 30:
				DebugEnterAlt(30);
				// Java6ColorizerLexer.g:805:9: '\\u03f7' .. '\\u03fb'
				{
				DebugLocation(805, 9);
				MatchRange('\u03F7','\u03FB'); if (state.failed) return;

				}
				break;
			case 31:
				DebugEnterAlt(31);
				// Java6ColorizerLexer.g:806:9: '\\u0400' .. '\\u0481'
				{
				DebugLocation(806, 9);
				MatchRange('\u0400','\u0481'); if (state.failed) return;

				}
				break;
			case 32:
				DebugEnterAlt(32);
				// Java6ColorizerLexer.g:807:9: '\\u0483' .. '\\u0486'
				{
				DebugLocation(807, 9);
				MatchRange('\u0483','\u0486'); if (state.failed) return;

				}
				break;
			case 33:
				DebugEnterAlt(33);
				// Java6ColorizerLexer.g:808:9: '\\u048a' .. '\\u04ce'
				{
				DebugLocation(808, 9);
				MatchRange('\u048A','\u04CE'); if (state.failed) return;

				}
				break;
			case 34:
				DebugEnterAlt(34);
				// Java6ColorizerLexer.g:809:9: '\\u04d0' .. '\\u04f5'
				{
				DebugLocation(809, 9);
				MatchRange('\u04D0','\u04F5'); if (state.failed) return;

				}
				break;
			case 35:
				DebugEnterAlt(35);
				// Java6ColorizerLexer.g:810:9: '\\u04f8' .. '\\u04f9'
				{
				DebugLocation(810, 9);
				MatchRange('\u04F8','\u04F9'); if (state.failed) return;

				}
				break;
			case 36:
				DebugEnterAlt(36);
				// Java6ColorizerLexer.g:811:9: '\\u0500' .. '\\u050f'
				{
				DebugLocation(811, 9);
				MatchRange('\u0500','\u050F'); if (state.failed) return;

				}
				break;
			case 37:
				DebugEnterAlt(37);
				// Java6ColorizerLexer.g:812:9: '\\u0531' .. '\\u0556'
				{
				DebugLocation(812, 9);
				MatchRange('\u0531','\u0556'); if (state.failed) return;

				}
				break;
			case 38:
				DebugEnterAlt(38);
				// Java6ColorizerLexer.g:813:9: '\\u0559'
				{
				DebugLocation(813, 9);
				Match('\u0559'); if (state.failed) return;

				}
				break;
			case 39:
				DebugEnterAlt(39);
				// Java6ColorizerLexer.g:814:9: '\\u0561' .. '\\u0587'
				{
				DebugLocation(814, 9);
				MatchRange('\u0561','\u0587'); if (state.failed) return;

				}
				break;
			case 40:
				DebugEnterAlt(40);
				// Java6ColorizerLexer.g:815:9: '\\u0591' .. '\\u05a1'
				{
				DebugLocation(815, 9);
				MatchRange('\u0591','\u05A1'); if (state.failed) return;

				}
				break;
			case 41:
				DebugEnterAlt(41);
				// Java6ColorizerLexer.g:816:9: '\\u05a3' .. '\\u05b9'
				{
				DebugLocation(816, 9);
				MatchRange('\u05A3','\u05B9'); if (state.failed) return;

				}
				break;
			case 42:
				DebugEnterAlt(42);
				// Java6ColorizerLexer.g:817:9: '\\u05bb' .. '\\u05bd'
				{
				DebugLocation(817, 9);
				MatchRange('\u05BB','\u05BD'); if (state.failed) return;

				}
				break;
			case 43:
				DebugEnterAlt(43);
				// Java6ColorizerLexer.g:818:9: '\\u05bf'
				{
				DebugLocation(818, 9);
				Match('\u05BF'); if (state.failed) return;

				}
				break;
			case 44:
				DebugEnterAlt(44);
				// Java6ColorizerLexer.g:819:9: '\\u05c1' .. '\\u05c2'
				{
				DebugLocation(819, 9);
				MatchRange('\u05C1','\u05C2'); if (state.failed) return;

				}
				break;
			case 45:
				DebugEnterAlt(45);
				// Java6ColorizerLexer.g:820:9: '\\u05c4'
				{
				DebugLocation(820, 9);
				Match('\u05C4'); if (state.failed) return;

				}
				break;
			case 46:
				DebugEnterAlt(46);
				// Java6ColorizerLexer.g:821:9: '\\u05d0' .. '\\u05ea'
				{
				DebugLocation(821, 9);
				MatchRange('\u05D0','\u05EA'); if (state.failed) return;

				}
				break;
			case 47:
				DebugEnterAlt(47);
				// Java6ColorizerLexer.g:822:9: '\\u05f0' .. '\\u05f2'
				{
				DebugLocation(822, 9);
				MatchRange('\u05F0','\u05F2'); if (state.failed) return;

				}
				break;
			case 48:
				DebugEnterAlt(48);
				// Java6ColorizerLexer.g:823:9: '\\u0600' .. '\\u0603'
				{
				DebugLocation(823, 9);
				MatchRange('\u0600','\u0603'); if (state.failed) return;

				}
				break;
			case 49:
				DebugEnterAlt(49);
				// Java6ColorizerLexer.g:824:9: '\\u0610' .. '\\u0615'
				{
				DebugLocation(824, 9);
				MatchRange('\u0610','\u0615'); if (state.failed) return;

				}
				break;
			case 50:
				DebugEnterAlt(50);
				// Java6ColorizerLexer.g:825:9: '\\u0621' .. '\\u063a'
				{
				DebugLocation(825, 9);
				MatchRange('\u0621','\u063A'); if (state.failed) return;

				}
				break;
			case 51:
				DebugEnterAlt(51);
				// Java6ColorizerLexer.g:826:9: '\\u0640' .. '\\u0658'
				{
				DebugLocation(826, 9);
				MatchRange('\u0640','\u0658'); if (state.failed) return;

				}
				break;
			case 52:
				DebugEnterAlt(52);
				// Java6ColorizerLexer.g:827:9: '\\u0660' .. '\\u0669'
				{
				DebugLocation(827, 9);
				MatchRange('\u0660','\u0669'); if (state.failed) return;

				}
				break;
			case 53:
				DebugEnterAlt(53);
				// Java6ColorizerLexer.g:828:9: '\\u066e' .. '\\u06d3'
				{
				DebugLocation(828, 9);
				MatchRange('\u066E','\u06D3'); if (state.failed) return;

				}
				break;
			case 54:
				DebugEnterAlt(54);
				// Java6ColorizerLexer.g:829:9: '\\u06d5' .. '\\u06dd'
				{
				DebugLocation(829, 9);
				MatchRange('\u06D5','\u06DD'); if (state.failed) return;

				}
				break;
			case 55:
				DebugEnterAlt(55);
				// Java6ColorizerLexer.g:830:9: '\\u06df' .. '\\u06e8'
				{
				DebugLocation(830, 9);
				MatchRange('\u06DF','\u06E8'); if (state.failed) return;

				}
				break;
			case 56:
				DebugEnterAlt(56);
				// Java6ColorizerLexer.g:831:9: '\\u06ea' .. '\\u06fc'
				{
				DebugLocation(831, 9);
				MatchRange('\u06EA','\u06FC'); if (state.failed) return;

				}
				break;
			case 57:
				DebugEnterAlt(57);
				// Java6ColorizerLexer.g:832:9: '\\u06ff'
				{
				DebugLocation(832, 9);
				Match('\u06FF'); if (state.failed) return;

				}
				break;
			case 58:
				DebugEnterAlt(58);
				// Java6ColorizerLexer.g:833:9: '\\u070f' .. '\\u074a'
				{
				DebugLocation(833, 9);
				MatchRange('\u070F','\u074A'); if (state.failed) return;

				}
				break;
			case 59:
				DebugEnterAlt(59);
				// Java6ColorizerLexer.g:834:9: '\\u074d' .. '\\u074f'
				{
				DebugLocation(834, 9);
				MatchRange('\u074D','\u074F'); if (state.failed) return;

				}
				break;
			case 60:
				DebugEnterAlt(60);
				// Java6ColorizerLexer.g:835:9: '\\u0780' .. '\\u07b1'
				{
				DebugLocation(835, 9);
				MatchRange('\u0780','\u07B1'); if (state.failed) return;

				}
				break;
			case 61:
				DebugEnterAlt(61);
				// Java6ColorizerLexer.g:836:9: '\\u0901' .. '\\u0939'
				{
				DebugLocation(836, 9);
				MatchRange('\u0901','\u0939'); if (state.failed) return;

				}
				break;
			case 62:
				DebugEnterAlt(62);
				// Java6ColorizerLexer.g:837:9: '\\u093c' .. '\\u094d'
				{
				DebugLocation(837, 9);
				MatchRange('\u093C','\u094D'); if (state.failed) return;

				}
				break;
			case 63:
				DebugEnterAlt(63);
				// Java6ColorizerLexer.g:838:9: '\\u0950' .. '\\u0954'
				{
				DebugLocation(838, 9);
				MatchRange('\u0950','\u0954'); if (state.failed) return;

				}
				break;
			case 64:
				DebugEnterAlt(64);
				// Java6ColorizerLexer.g:839:9: '\\u0958' .. '\\u0963'
				{
				DebugLocation(839, 9);
				MatchRange('\u0958','\u0963'); if (state.failed) return;

				}
				break;
			case 65:
				DebugEnterAlt(65);
				// Java6ColorizerLexer.g:840:9: '\\u0966' .. '\\u096f'
				{
				DebugLocation(840, 9);
				MatchRange('\u0966','\u096F'); if (state.failed) return;

				}
				break;
			case 66:
				DebugEnterAlt(66);
				// Java6ColorizerLexer.g:841:9: '\\u0981' .. '\\u0983'
				{
				DebugLocation(841, 9);
				MatchRange('\u0981','\u0983'); if (state.failed) return;

				}
				break;
			case 67:
				DebugEnterAlt(67);
				// Java6ColorizerLexer.g:842:9: '\\u0985' .. '\\u098c'
				{
				DebugLocation(842, 9);
				MatchRange('\u0985','\u098C'); if (state.failed) return;

				}
				break;
			case 68:
				DebugEnterAlt(68);
				// Java6ColorizerLexer.g:843:9: '\\u098f' .. '\\u0990'
				{
				DebugLocation(843, 9);
				MatchRange('\u098F','\u0990'); if (state.failed) return;

				}
				break;
			case 69:
				DebugEnterAlt(69);
				// Java6ColorizerLexer.g:844:9: '\\u0993' .. '\\u09a8'
				{
				DebugLocation(844, 9);
				MatchRange('\u0993','\u09A8'); if (state.failed) return;

				}
				break;
			case 70:
				DebugEnterAlt(70);
				// Java6ColorizerLexer.g:845:9: '\\u09aa' .. '\\u09b0'
				{
				DebugLocation(845, 9);
				MatchRange('\u09AA','\u09B0'); if (state.failed) return;

				}
				break;
			case 71:
				DebugEnterAlt(71);
				// Java6ColorizerLexer.g:846:9: '\\u09b2'
				{
				DebugLocation(846, 9);
				Match('\u09B2'); if (state.failed) return;

				}
				break;
			case 72:
				DebugEnterAlt(72);
				// Java6ColorizerLexer.g:847:9: '\\u09b6' .. '\\u09b9'
				{
				DebugLocation(847, 9);
				MatchRange('\u09B6','\u09B9'); if (state.failed) return;

				}
				break;
			case 73:
				DebugEnterAlt(73);
				// Java6ColorizerLexer.g:848:9: '\\u09bc' .. '\\u09c4'
				{
				DebugLocation(848, 9);
				MatchRange('\u09BC','\u09C4'); if (state.failed) return;

				}
				break;
			case 74:
				DebugEnterAlt(74);
				// Java6ColorizerLexer.g:849:9: '\\u09c7' .. '\\u09c8'
				{
				DebugLocation(849, 9);
				MatchRange('\u09C7','\u09C8'); if (state.failed) return;

				}
				break;
			case 75:
				DebugEnterAlt(75);
				// Java6ColorizerLexer.g:850:9: '\\u09cb' .. '\\u09cd'
				{
				DebugLocation(850, 9);
				MatchRange('\u09CB','\u09CD'); if (state.failed) return;

				}
				break;
			case 76:
				DebugEnterAlt(76);
				// Java6ColorizerLexer.g:851:9: '\\u09d7'
				{
				DebugLocation(851, 9);
				Match('\u09D7'); if (state.failed) return;

				}
				break;
			case 77:
				DebugEnterAlt(77);
				// Java6ColorizerLexer.g:852:9: '\\u09dc' .. '\\u09dd'
				{
				DebugLocation(852, 9);
				MatchRange('\u09DC','\u09DD'); if (state.failed) return;

				}
				break;
			case 78:
				DebugEnterAlt(78);
				// Java6ColorizerLexer.g:853:9: '\\u09df' .. '\\u09e3'
				{
				DebugLocation(853, 9);
				MatchRange('\u09DF','\u09E3'); if (state.failed) return;

				}
				break;
			case 79:
				DebugEnterAlt(79);
				// Java6ColorizerLexer.g:854:9: '\\u09e6' .. '\\u09f3'
				{
				DebugLocation(854, 9);
				MatchRange('\u09E6','\u09F3'); if (state.failed) return;

				}
				break;
			case 80:
				DebugEnterAlt(80);
				// Java6ColorizerLexer.g:855:9: '\\u0a01' .. '\\u0a03'
				{
				DebugLocation(855, 9);
				MatchRange('\u0A01','\u0A03'); if (state.failed) return;

				}
				break;
			case 81:
				DebugEnterAlt(81);
				// Java6ColorizerLexer.g:856:9: '\\u0a05' .. '\\u0a0a'
				{
				DebugLocation(856, 9);
				MatchRange('\u0A05','\u0A0A'); if (state.failed) return;

				}
				break;
			case 82:
				DebugEnterAlt(82);
				// Java6ColorizerLexer.g:857:9: '\\u0a0f' .. '\\u0a10'
				{
				DebugLocation(857, 9);
				MatchRange('\u0A0F','\u0A10'); if (state.failed) return;

				}
				break;
			case 83:
				DebugEnterAlt(83);
				// Java6ColorizerLexer.g:858:9: '\\u0a13' .. '\\u0a28'
				{
				DebugLocation(858, 9);
				MatchRange('\u0A13','\u0A28'); if (state.failed) return;

				}
				break;
			case 84:
				DebugEnterAlt(84);
				// Java6ColorizerLexer.g:859:9: '\\u0a2a' .. '\\u0a30'
				{
				DebugLocation(859, 9);
				MatchRange('\u0A2A','\u0A30'); if (state.failed) return;

				}
				break;
			case 85:
				DebugEnterAlt(85);
				// Java6ColorizerLexer.g:860:9: '\\u0a32' .. '\\u0a33'
				{
				DebugLocation(860, 9);
				MatchRange('\u0A32','\u0A33'); if (state.failed) return;

				}
				break;
			case 86:
				DebugEnterAlt(86);
				// Java6ColorizerLexer.g:861:9: '\\u0a35' .. '\\u0a36'
				{
				DebugLocation(861, 9);
				MatchRange('\u0A35','\u0A36'); if (state.failed) return;

				}
				break;
			case 87:
				DebugEnterAlt(87);
				// Java6ColorizerLexer.g:862:9: '\\u0a38' .. '\\u0a39'
				{
				DebugLocation(862, 9);
				MatchRange('\u0A38','\u0A39'); if (state.failed) return;

				}
				break;
			case 88:
				DebugEnterAlt(88);
				// Java6ColorizerLexer.g:863:9: '\\u0a3c'
				{
				DebugLocation(863, 9);
				Match('\u0A3C'); if (state.failed) return;

				}
				break;
			case 89:
				DebugEnterAlt(89);
				// Java6ColorizerLexer.g:864:9: '\\u0a3e' .. '\\u0a42'
				{
				DebugLocation(864, 9);
				MatchRange('\u0A3E','\u0A42'); if (state.failed) return;

				}
				break;
			case 90:
				DebugEnterAlt(90);
				// Java6ColorizerLexer.g:865:9: '\\u0a47' .. '\\u0a48'
				{
				DebugLocation(865, 9);
				MatchRange('\u0A47','\u0A48'); if (state.failed) return;

				}
				break;
			case 91:
				DebugEnterAlt(91);
				// Java6ColorizerLexer.g:866:9: '\\u0a4b' .. '\\u0a4d'
				{
				DebugLocation(866, 9);
				MatchRange('\u0A4B','\u0A4D'); if (state.failed) return;

				}
				break;
			case 92:
				DebugEnterAlt(92);
				// Java6ColorizerLexer.g:867:9: '\\u0a59' .. '\\u0a5c'
				{
				DebugLocation(867, 9);
				MatchRange('\u0A59','\u0A5C'); if (state.failed) return;

				}
				break;
			case 93:
				DebugEnterAlt(93);
				// Java6ColorizerLexer.g:868:9: '\\u0a5e'
				{
				DebugLocation(868, 9);
				Match('\u0A5E'); if (state.failed) return;

				}
				break;
			case 94:
				DebugEnterAlt(94);
				// Java6ColorizerLexer.g:869:9: '\\u0a66' .. '\\u0a74'
				{
				DebugLocation(869, 9);
				MatchRange('\u0A66','\u0A74'); if (state.failed) return;

				}
				break;
			case 95:
				DebugEnterAlt(95);
				// Java6ColorizerLexer.g:870:9: '\\u0a81' .. '\\u0a83'
				{
				DebugLocation(870, 9);
				MatchRange('\u0A81','\u0A83'); if (state.failed) return;

				}
				break;
			case 96:
				DebugEnterAlt(96);
				// Java6ColorizerLexer.g:871:9: '\\u0a85' .. '\\u0a8d'
				{
				DebugLocation(871, 9);
				MatchRange('\u0A85','\u0A8D'); if (state.failed) return;

				}
				break;
			case 97:
				DebugEnterAlt(97);
				// Java6ColorizerLexer.g:872:9: '\\u0a8f' .. '\\u0a91'
				{
				DebugLocation(872, 9);
				MatchRange('\u0A8F','\u0A91'); if (state.failed) return;

				}
				break;
			case 98:
				DebugEnterAlt(98);
				// Java6ColorizerLexer.g:873:9: '\\u0a93' .. '\\u0aa8'
				{
				DebugLocation(873, 9);
				MatchRange('\u0A93','\u0AA8'); if (state.failed) return;

				}
				break;
			case 99:
				DebugEnterAlt(99);
				// Java6ColorizerLexer.g:874:9: '\\u0aaa' .. '\\u0ab0'
				{
				DebugLocation(874, 9);
				MatchRange('\u0AAA','\u0AB0'); if (state.failed) return;

				}
				break;
			case 100:
				DebugEnterAlt(100);
				// Java6ColorizerLexer.g:875:9: '\\u0ab2' .. '\\u0ab3'
				{
				DebugLocation(875, 9);
				MatchRange('\u0AB2','\u0AB3'); if (state.failed) return;

				}
				break;
			case 101:
				DebugEnterAlt(101);
				// Java6ColorizerLexer.g:876:9: '\\u0ab5' .. '\\u0ab9'
				{
				DebugLocation(876, 9);
				MatchRange('\u0AB5','\u0AB9'); if (state.failed) return;

				}
				break;
			case 102:
				DebugEnterAlt(102);
				// Java6ColorizerLexer.g:877:9: '\\u0abc' .. '\\u0ac5'
				{
				DebugLocation(877, 9);
				MatchRange('\u0ABC','\u0AC5'); if (state.failed) return;

				}
				break;
			case 103:
				DebugEnterAlt(103);
				// Java6ColorizerLexer.g:878:9: '\\u0ac7' .. '\\u0ac9'
				{
				DebugLocation(878, 9);
				MatchRange('\u0AC7','\u0AC9'); if (state.failed) return;

				}
				break;
			case 104:
				DebugEnterAlt(104);
				// Java6ColorizerLexer.g:879:9: '\\u0acb' .. '\\u0acd'
				{
				DebugLocation(879, 9);
				MatchRange('\u0ACB','\u0ACD'); if (state.failed) return;

				}
				break;
			case 105:
				DebugEnterAlt(105);
				// Java6ColorizerLexer.g:880:9: '\\u0ad0'
				{
				DebugLocation(880, 9);
				Match('\u0AD0'); if (state.failed) return;

				}
				break;
			case 106:
				DebugEnterAlt(106);
				// Java6ColorizerLexer.g:881:9: '\\u0ae0' .. '\\u0ae3'
				{
				DebugLocation(881, 9);
				MatchRange('\u0AE0','\u0AE3'); if (state.failed) return;

				}
				break;
			case 107:
				DebugEnterAlt(107);
				// Java6ColorizerLexer.g:882:9: '\\u0ae6' .. '\\u0aef'
				{
				DebugLocation(882, 9);
				MatchRange('\u0AE6','\u0AEF'); if (state.failed) return;

				}
				break;
			case 108:
				DebugEnterAlt(108);
				// Java6ColorizerLexer.g:883:9: '\\u0af1'
				{
				DebugLocation(883, 9);
				Match('\u0AF1'); if (state.failed) return;

				}
				break;
			case 109:
				DebugEnterAlt(109);
				// Java6ColorizerLexer.g:884:9: '\\u0b01' .. '\\u0b03'
				{
				DebugLocation(884, 9);
				MatchRange('\u0B01','\u0B03'); if (state.failed) return;

				}
				break;
			case 110:
				DebugEnterAlt(110);
				// Java6ColorizerLexer.g:885:9: '\\u0b05' .. '\\u0b0c'
				{
				DebugLocation(885, 9);
				MatchRange('\u0B05','\u0B0C'); if (state.failed) return;

				}
				break;
			case 111:
				DebugEnterAlt(111);
				// Java6ColorizerLexer.g:886:9: '\\u0b0f' .. '\\u0b10'
				{
				DebugLocation(886, 9);
				MatchRange('\u0B0F','\u0B10'); if (state.failed) return;

				}
				break;
			case 112:
				DebugEnterAlt(112);
				// Java6ColorizerLexer.g:887:9: '\\u0b13' .. '\\u0b28'
				{
				DebugLocation(887, 9);
				MatchRange('\u0B13','\u0B28'); if (state.failed) return;

				}
				break;
			case 113:
				DebugEnterAlt(113);
				// Java6ColorizerLexer.g:888:9: '\\u0b2a' .. '\\u0b30'
				{
				DebugLocation(888, 9);
				MatchRange('\u0B2A','\u0B30'); if (state.failed) return;

				}
				break;
			case 114:
				DebugEnterAlt(114);
				// Java6ColorizerLexer.g:889:9: '\\u0b32' .. '\\u0b33'
				{
				DebugLocation(889, 9);
				MatchRange('\u0B32','\u0B33'); if (state.failed) return;

				}
				break;
			case 115:
				DebugEnterAlt(115);
				// Java6ColorizerLexer.g:890:9: '\\u0b35' .. '\\u0b39'
				{
				DebugLocation(890, 9);
				MatchRange('\u0B35','\u0B39'); if (state.failed) return;

				}
				break;
			case 116:
				DebugEnterAlt(116);
				// Java6ColorizerLexer.g:891:9: '\\u0b3c' .. '\\u0b43'
				{
				DebugLocation(891, 9);
				MatchRange('\u0B3C','\u0B43'); if (state.failed) return;

				}
				break;
			case 117:
				DebugEnterAlt(117);
				// Java6ColorizerLexer.g:892:9: '\\u0b47' .. '\\u0b48'
				{
				DebugLocation(892, 9);
				MatchRange('\u0B47','\u0B48'); if (state.failed) return;

				}
				break;
			case 118:
				DebugEnterAlt(118);
				// Java6ColorizerLexer.g:893:9: '\\u0b4b' .. '\\u0b4d'
				{
				DebugLocation(893, 9);
				MatchRange('\u0B4B','\u0B4D'); if (state.failed) return;

				}
				break;
			case 119:
				DebugEnterAlt(119);
				// Java6ColorizerLexer.g:894:9: '\\u0b56' .. '\\u0b57'
				{
				DebugLocation(894, 9);
				MatchRange('\u0B56','\u0B57'); if (state.failed) return;

				}
				break;
			case 120:
				DebugEnterAlt(120);
				// Java6ColorizerLexer.g:895:9: '\\u0b5c' .. '\\u0b5d'
				{
				DebugLocation(895, 9);
				MatchRange('\u0B5C','\u0B5D'); if (state.failed) return;

				}
				break;
			case 121:
				DebugEnterAlt(121);
				// Java6ColorizerLexer.g:896:9: '\\u0b5f' .. '\\u0b61'
				{
				DebugLocation(896, 9);
				MatchRange('\u0B5F','\u0B61'); if (state.failed) return;

				}
				break;
			case 122:
				DebugEnterAlt(122);
				// Java6ColorizerLexer.g:897:9: '\\u0b66' .. '\\u0b6f'
				{
				DebugLocation(897, 9);
				MatchRange('\u0B66','\u0B6F'); if (state.failed) return;

				}
				break;
			case 123:
				DebugEnterAlt(123);
				// Java6ColorizerLexer.g:898:9: '\\u0b71'
				{
				DebugLocation(898, 9);
				Match('\u0B71'); if (state.failed) return;

				}
				break;
			case 124:
				DebugEnterAlt(124);
				// Java6ColorizerLexer.g:899:9: '\\u0b82' .. '\\u0b83'
				{
				DebugLocation(899, 9);
				MatchRange('\u0B82','\u0B83'); if (state.failed) return;

				}
				break;
			case 125:
				DebugEnterAlt(125);
				// Java6ColorizerLexer.g:900:9: '\\u0b85' .. '\\u0b8a'
				{
				DebugLocation(900, 9);
				MatchRange('\u0B85','\u0B8A'); if (state.failed) return;

				}
				break;
			case 126:
				DebugEnterAlt(126);
				// Java6ColorizerLexer.g:901:9: '\\u0b8e' .. '\\u0b90'
				{
				DebugLocation(901, 9);
				MatchRange('\u0B8E','\u0B90'); if (state.failed) return;

				}
				break;
			case 127:
				DebugEnterAlt(127);
				// Java6ColorizerLexer.g:902:9: '\\u0b92' .. '\\u0b95'
				{
				DebugLocation(902, 9);
				MatchRange('\u0B92','\u0B95'); if (state.failed) return;

				}
				break;
			case 128:
				DebugEnterAlt(128);
				// Java6ColorizerLexer.g:903:9: '\\u0b99' .. '\\u0b9a'
				{
				DebugLocation(903, 9);
				MatchRange('\u0B99','\u0B9A'); if (state.failed) return;

				}
				break;
			case 129:
				DebugEnterAlt(129);
				// Java6ColorizerLexer.g:904:9: '\\u0b9c'
				{
				DebugLocation(904, 9);
				Match('\u0B9C'); if (state.failed) return;

				}
				break;
			case 130:
				DebugEnterAlt(130);
				// Java6ColorizerLexer.g:905:9: '\\u0b9e' .. '\\u0b9f'
				{
				DebugLocation(905, 9);
				MatchRange('\u0B9E','\u0B9F'); if (state.failed) return;

				}
				break;
			case 131:
				DebugEnterAlt(131);
				// Java6ColorizerLexer.g:906:9: '\\u0ba3' .. '\\u0ba4'
				{
				DebugLocation(906, 9);
				MatchRange('\u0BA3','\u0BA4'); if (state.failed) return;

				}
				break;
			case 132:
				DebugEnterAlt(132);
				// Java6ColorizerLexer.g:907:9: '\\u0ba8' .. '\\u0baa'
				{
				DebugLocation(907, 9);
				MatchRange('\u0BA8','\u0BAA'); if (state.failed) return;

				}
				break;
			case 133:
				DebugEnterAlt(133);
				// Java6ColorizerLexer.g:908:9: '\\u0bae' .. '\\u0bb5'
				{
				DebugLocation(908, 9);
				MatchRange('\u0BAE','\u0BB5'); if (state.failed) return;

				}
				break;
			case 134:
				DebugEnterAlt(134);
				// Java6ColorizerLexer.g:909:9: '\\u0bb7' .. '\\u0bb9'
				{
				DebugLocation(909, 9);
				MatchRange('\u0BB7','\u0BB9'); if (state.failed) return;

				}
				break;
			case 135:
				DebugEnterAlt(135);
				// Java6ColorizerLexer.g:910:9: '\\u0bbe' .. '\\u0bc2'
				{
				DebugLocation(910, 9);
				MatchRange('\u0BBE','\u0BC2'); if (state.failed) return;

				}
				break;
			case 136:
				DebugEnterAlt(136);
				// Java6ColorizerLexer.g:911:9: '\\u0bc6' .. '\\u0bc8'
				{
				DebugLocation(911, 9);
				MatchRange('\u0BC6','\u0BC8'); if (state.failed) return;

				}
				break;
			case 137:
				DebugEnterAlt(137);
				// Java6ColorizerLexer.g:912:9: '\\u0bca' .. '\\u0bcd'
				{
				DebugLocation(912, 9);
				MatchRange('\u0BCA','\u0BCD'); if (state.failed) return;

				}
				break;
			case 138:
				DebugEnterAlt(138);
				// Java6ColorizerLexer.g:913:9: '\\u0bd7'
				{
				DebugLocation(913, 9);
				Match('\u0BD7'); if (state.failed) return;

				}
				break;
			case 139:
				DebugEnterAlt(139);
				// Java6ColorizerLexer.g:914:9: '\\u0be7' .. '\\u0bef'
				{
				DebugLocation(914, 9);
				MatchRange('\u0BE7','\u0BEF'); if (state.failed) return;

				}
				break;
			case 140:
				DebugEnterAlt(140);
				// Java6ColorizerLexer.g:915:9: '\\u0bf9'
				{
				DebugLocation(915, 9);
				Match('\u0BF9'); if (state.failed) return;

				}
				break;
			case 141:
				DebugEnterAlt(141);
				// Java6ColorizerLexer.g:916:9: '\\u0c01' .. '\\u0c03'
				{
				DebugLocation(916, 9);
				MatchRange('\u0C01','\u0C03'); if (state.failed) return;

				}
				break;
			case 142:
				DebugEnterAlt(142);
				// Java6ColorizerLexer.g:917:9: '\\u0c05' .. '\\u0c0c'
				{
				DebugLocation(917, 9);
				MatchRange('\u0C05','\u0C0C'); if (state.failed) return;

				}
				break;
			case 143:
				DebugEnterAlt(143);
				// Java6ColorizerLexer.g:918:9: '\\u0c0e' .. '\\u0c10'
				{
				DebugLocation(918, 9);
				MatchRange('\u0C0E','\u0C10'); if (state.failed) return;

				}
				break;
			case 144:
				DebugEnterAlt(144);
				// Java6ColorizerLexer.g:919:9: '\\u0c12' .. '\\u0c28'
				{
				DebugLocation(919, 9);
				MatchRange('\u0C12','\u0C28'); if (state.failed) return;

				}
				break;
			case 145:
				DebugEnterAlt(145);
				// Java6ColorizerLexer.g:920:9: '\\u0c2a' .. '\\u0c33'
				{
				DebugLocation(920, 9);
				MatchRange('\u0C2A','\u0C33'); if (state.failed) return;

				}
				break;
			case 146:
				DebugEnterAlt(146);
				// Java6ColorizerLexer.g:921:9: '\\u0c35' .. '\\u0c39'
				{
				DebugLocation(921, 9);
				MatchRange('\u0C35','\u0C39'); if (state.failed) return;

				}
				break;
			case 147:
				DebugEnterAlt(147);
				// Java6ColorizerLexer.g:922:9: '\\u0c3e' .. '\\u0c44'
				{
				DebugLocation(922, 9);
				MatchRange('\u0C3E','\u0C44'); if (state.failed) return;

				}
				break;
			case 148:
				DebugEnterAlt(148);
				// Java6ColorizerLexer.g:923:9: '\\u0c46' .. '\\u0c48'
				{
				DebugLocation(923, 9);
				MatchRange('\u0C46','\u0C48'); if (state.failed) return;

				}
				break;
			case 149:
				DebugEnterAlt(149);
				// Java6ColorizerLexer.g:924:9: '\\u0c4a' .. '\\u0c4d'
				{
				DebugLocation(924, 9);
				MatchRange('\u0C4A','\u0C4D'); if (state.failed) return;

				}
				break;
			case 150:
				DebugEnterAlt(150);
				// Java6ColorizerLexer.g:925:9: '\\u0c55' .. '\\u0c56'
				{
				DebugLocation(925, 9);
				MatchRange('\u0C55','\u0C56'); if (state.failed) return;

				}
				break;
			case 151:
				DebugEnterAlt(151);
				// Java6ColorizerLexer.g:926:9: '\\u0c60' .. '\\u0c61'
				{
				DebugLocation(926, 9);
				MatchRange('\u0C60','\u0C61'); if (state.failed) return;

				}
				break;
			case 152:
				DebugEnterAlt(152);
				// Java6ColorizerLexer.g:927:9: '\\u0c66' .. '\\u0c6f'
				{
				DebugLocation(927, 9);
				MatchRange('\u0C66','\u0C6F'); if (state.failed) return;

				}
				break;
			case 153:
				DebugEnterAlt(153);
				// Java6ColorizerLexer.g:928:9: '\\u0c82' .. '\\u0c83'
				{
				DebugLocation(928, 9);
				MatchRange('\u0C82','\u0C83'); if (state.failed) return;

				}
				break;
			case 154:
				DebugEnterAlt(154);
				// Java6ColorizerLexer.g:929:9: '\\u0c85' .. '\\u0c8c'
				{
				DebugLocation(929, 9);
				MatchRange('\u0C85','\u0C8C'); if (state.failed) return;

				}
				break;
			case 155:
				DebugEnterAlt(155);
				// Java6ColorizerLexer.g:930:9: '\\u0c8e' .. '\\u0c90'
				{
				DebugLocation(930, 9);
				MatchRange('\u0C8E','\u0C90'); if (state.failed) return;

				}
				break;
			case 156:
				DebugEnterAlt(156);
				// Java6ColorizerLexer.g:931:9: '\\u0c92' .. '\\u0ca8'
				{
				DebugLocation(931, 9);
				MatchRange('\u0C92','\u0CA8'); if (state.failed) return;

				}
				break;
			case 157:
				DebugEnterAlt(157);
				// Java6ColorizerLexer.g:932:9: '\\u0caa' .. '\\u0cb3'
				{
				DebugLocation(932, 9);
				MatchRange('\u0CAA','\u0CB3'); if (state.failed) return;

				}
				break;
			case 158:
				DebugEnterAlt(158);
				// Java6ColorizerLexer.g:933:9: '\\u0cb5' .. '\\u0cb9'
				{
				DebugLocation(933, 9);
				MatchRange('\u0CB5','\u0CB9'); if (state.failed) return;

				}
				break;
			case 159:
				DebugEnterAlt(159);
				// Java6ColorizerLexer.g:934:9: '\\u0cbc' .. '\\u0cc4'
				{
				DebugLocation(934, 9);
				MatchRange('\u0CBC','\u0CC4'); if (state.failed) return;

				}
				break;
			case 160:
				DebugEnterAlt(160);
				// Java6ColorizerLexer.g:935:9: '\\u0cc6' .. '\\u0cc8'
				{
				DebugLocation(935, 9);
				MatchRange('\u0CC6','\u0CC8'); if (state.failed) return;

				}
				break;
			case 161:
				DebugEnterAlt(161);
				// Java6ColorizerLexer.g:936:9: '\\u0cca' .. '\\u0ccd'
				{
				DebugLocation(936, 9);
				MatchRange('\u0CCA','\u0CCD'); if (state.failed) return;

				}
				break;
			case 162:
				DebugEnterAlt(162);
				// Java6ColorizerLexer.g:937:9: '\\u0cd5' .. '\\u0cd6'
				{
				DebugLocation(937, 9);
				MatchRange('\u0CD5','\u0CD6'); if (state.failed) return;

				}
				break;
			case 163:
				DebugEnterAlt(163);
				// Java6ColorizerLexer.g:938:9: '\\u0cde'
				{
				DebugLocation(938, 9);
				Match('\u0CDE'); if (state.failed) return;

				}
				break;
			case 164:
				DebugEnterAlt(164);
				// Java6ColorizerLexer.g:939:9: '\\u0ce0' .. '\\u0ce1'
				{
				DebugLocation(939, 9);
				MatchRange('\u0CE0','\u0CE1'); if (state.failed) return;

				}
				break;
			case 165:
				DebugEnterAlt(165);
				// Java6ColorizerLexer.g:940:9: '\\u0ce6' .. '\\u0cef'
				{
				DebugLocation(940, 9);
				MatchRange('\u0CE6','\u0CEF'); if (state.failed) return;

				}
				break;
			case 166:
				DebugEnterAlt(166);
				// Java6ColorizerLexer.g:941:9: '\\u0d02' .. '\\u0d03'
				{
				DebugLocation(941, 9);
				MatchRange('\u0D02','\u0D03'); if (state.failed) return;

				}
				break;
			case 167:
				DebugEnterAlt(167);
				// Java6ColorizerLexer.g:942:9: '\\u0d05' .. '\\u0d0c'
				{
				DebugLocation(942, 9);
				MatchRange('\u0D05','\u0D0C'); if (state.failed) return;

				}
				break;
			case 168:
				DebugEnterAlt(168);
				// Java6ColorizerLexer.g:943:9: '\\u0d0e' .. '\\u0d10'
				{
				DebugLocation(943, 9);
				MatchRange('\u0D0E','\u0D10'); if (state.failed) return;

				}
				break;
			case 169:
				DebugEnterAlt(169);
				// Java6ColorizerLexer.g:944:9: '\\u0d12' .. '\\u0d28'
				{
				DebugLocation(944, 9);
				MatchRange('\u0D12','\u0D28'); if (state.failed) return;

				}
				break;
			case 170:
				DebugEnterAlt(170);
				// Java6ColorizerLexer.g:945:9: '\\u0d2a' .. '\\u0d39'
				{
				DebugLocation(945, 9);
				MatchRange('\u0D2A','\u0D39'); if (state.failed) return;

				}
				break;
			case 171:
				DebugEnterAlt(171);
				// Java6ColorizerLexer.g:946:9: '\\u0d3e' .. '\\u0d43'
				{
				DebugLocation(946, 9);
				MatchRange('\u0D3E','\u0D43'); if (state.failed) return;

				}
				break;
			case 172:
				DebugEnterAlt(172);
				// Java6ColorizerLexer.g:947:9: '\\u0d46' .. '\\u0d48'
				{
				DebugLocation(947, 9);
				MatchRange('\u0D46','\u0D48'); if (state.failed) return;

				}
				break;
			case 173:
				DebugEnterAlt(173);
				// Java6ColorizerLexer.g:948:9: '\\u0d4a' .. '\\u0d4d'
				{
				DebugLocation(948, 9);
				MatchRange('\u0D4A','\u0D4D'); if (state.failed) return;

				}
				break;
			case 174:
				DebugEnterAlt(174);
				// Java6ColorizerLexer.g:949:9: '\\u0d57'
				{
				DebugLocation(949, 9);
				Match('\u0D57'); if (state.failed) return;

				}
				break;
			case 175:
				DebugEnterAlt(175);
				// Java6ColorizerLexer.g:950:9: '\\u0d60' .. '\\u0d61'
				{
				DebugLocation(950, 9);
				MatchRange('\u0D60','\u0D61'); if (state.failed) return;

				}
				break;
			case 176:
				DebugEnterAlt(176);
				// Java6ColorizerLexer.g:951:9: '\\u0d66' .. '\\u0d6f'
				{
				DebugLocation(951, 9);
				MatchRange('\u0D66','\u0D6F'); if (state.failed) return;

				}
				break;
			case 177:
				DebugEnterAlt(177);
				// Java6ColorizerLexer.g:952:9: '\\u0d82' .. '\\u0d83'
				{
				DebugLocation(952, 9);
				MatchRange('\u0D82','\u0D83'); if (state.failed) return;

				}
				break;
			case 178:
				DebugEnterAlt(178);
				// Java6ColorizerLexer.g:953:9: '\\u0d85' .. '\\u0d96'
				{
				DebugLocation(953, 9);
				MatchRange('\u0D85','\u0D96'); if (state.failed) return;

				}
				break;
			case 179:
				DebugEnterAlt(179);
				// Java6ColorizerLexer.g:954:9: '\\u0d9a' .. '\\u0db1'
				{
				DebugLocation(954, 9);
				MatchRange('\u0D9A','\u0DB1'); if (state.failed) return;

				}
				break;
			case 180:
				DebugEnterAlt(180);
				// Java6ColorizerLexer.g:955:9: '\\u0db3' .. '\\u0dbb'
				{
				DebugLocation(955, 9);
				MatchRange('\u0DB3','\u0DBB'); if (state.failed) return;

				}
				break;
			case 181:
				DebugEnterAlt(181);
				// Java6ColorizerLexer.g:956:9: '\\u0dbd'
				{
				DebugLocation(956, 9);
				Match('\u0DBD'); if (state.failed) return;

				}
				break;
			case 182:
				DebugEnterAlt(182);
				// Java6ColorizerLexer.g:957:9: '\\u0dc0' .. '\\u0dc6'
				{
				DebugLocation(957, 9);
				MatchRange('\u0DC0','\u0DC6'); if (state.failed) return;

				}
				break;
			case 183:
				DebugEnterAlt(183);
				// Java6ColorizerLexer.g:958:9: '\\u0dca'
				{
				DebugLocation(958, 9);
				Match('\u0DCA'); if (state.failed) return;

				}
				break;
			case 184:
				DebugEnterAlt(184);
				// Java6ColorizerLexer.g:959:9: '\\u0dcf' .. '\\u0dd4'
				{
				DebugLocation(959, 9);
				MatchRange('\u0DCF','\u0DD4'); if (state.failed) return;

				}
				break;
			case 185:
				DebugEnterAlt(185);
				// Java6ColorizerLexer.g:960:9: '\\u0dd6'
				{
				DebugLocation(960, 9);
				Match('\u0DD6'); if (state.failed) return;

				}
				break;
			case 186:
				DebugEnterAlt(186);
				// Java6ColorizerLexer.g:961:9: '\\u0dd8' .. '\\u0ddf'
				{
				DebugLocation(961, 9);
				MatchRange('\u0DD8','\u0DDF'); if (state.failed) return;

				}
				break;
			case 187:
				DebugEnterAlt(187);
				// Java6ColorizerLexer.g:962:9: '\\u0df2' .. '\\u0df3'
				{
				DebugLocation(962, 9);
				MatchRange('\u0DF2','\u0DF3'); if (state.failed) return;

				}
				break;
			case 188:
				DebugEnterAlt(188);
				// Java6ColorizerLexer.g:963:9: '\\u0e01' .. '\\u0e3a'
				{
				DebugLocation(963, 9);
				MatchRange('\u0E01','\u0E3A'); if (state.failed) return;

				}
				break;
			case 189:
				DebugEnterAlt(189);
				// Java6ColorizerLexer.g:964:9: '\\u0e3f' .. '\\u0e4e'
				{
				DebugLocation(964, 9);
				MatchRange('\u0E3F','\u0E4E'); if (state.failed) return;

				}
				break;
			case 190:
				DebugEnterAlt(190);
				// Java6ColorizerLexer.g:965:9: '\\u0e50' .. '\\u0e59'
				{
				DebugLocation(965, 9);
				MatchRange('\u0E50','\u0E59'); if (state.failed) return;

				}
				break;
			case 191:
				DebugEnterAlt(191);
				// Java6ColorizerLexer.g:966:9: '\\u0e81' .. '\\u0e82'
				{
				DebugLocation(966, 9);
				MatchRange('\u0E81','\u0E82'); if (state.failed) return;

				}
				break;
			case 192:
				DebugEnterAlt(192);
				// Java6ColorizerLexer.g:967:9: '\\u0e84'
				{
				DebugLocation(967, 9);
				Match('\u0E84'); if (state.failed) return;

				}
				break;
			case 193:
				DebugEnterAlt(193);
				// Java6ColorizerLexer.g:968:9: '\\u0e87' .. '\\u0e88'
				{
				DebugLocation(968, 9);
				MatchRange('\u0E87','\u0E88'); if (state.failed) return;

				}
				break;
			case 194:
				DebugEnterAlt(194);
				// Java6ColorizerLexer.g:969:9: '\\u0e8a'
				{
				DebugLocation(969, 9);
				Match('\u0E8A'); if (state.failed) return;

				}
				break;
			case 195:
				DebugEnterAlt(195);
				// Java6ColorizerLexer.g:970:9: '\\u0e8d'
				{
				DebugLocation(970, 9);
				Match('\u0E8D'); if (state.failed) return;

				}
				break;
			case 196:
				DebugEnterAlt(196);
				// Java6ColorizerLexer.g:971:9: '\\u0e94' .. '\\u0e97'
				{
				DebugLocation(971, 9);
				MatchRange('\u0E94','\u0E97'); if (state.failed) return;

				}
				break;
			case 197:
				DebugEnterAlt(197);
				// Java6ColorizerLexer.g:972:9: '\\u0e99' .. '\\u0e9f'
				{
				DebugLocation(972, 9);
				MatchRange('\u0E99','\u0E9F'); if (state.failed) return;

				}
				break;
			case 198:
				DebugEnterAlt(198);
				// Java6ColorizerLexer.g:973:9: '\\u0ea1' .. '\\u0ea3'
				{
				DebugLocation(973, 9);
				MatchRange('\u0EA1','\u0EA3'); if (state.failed) return;

				}
				break;
			case 199:
				DebugEnterAlt(199);
				// Java6ColorizerLexer.g:974:9: '\\u0ea5'
				{
				DebugLocation(974, 9);
				Match('\u0EA5'); if (state.failed) return;

				}
				break;
			case 200:
				DebugEnterAlt(200);
				// Java6ColorizerLexer.g:975:9: '\\u0ea7'
				{
				DebugLocation(975, 9);
				Match('\u0EA7'); if (state.failed) return;

				}
				break;
			case 201:
				DebugEnterAlt(201);
				// Java6ColorizerLexer.g:976:9: '\\u0eaa' .. '\\u0eab'
				{
				DebugLocation(976, 9);
				MatchRange('\u0EAA','\u0EAB'); if (state.failed) return;

				}
				break;
			case 202:
				DebugEnterAlt(202);
				// Java6ColorizerLexer.g:977:9: '\\u0ead' .. '\\u0eb9'
				{
				DebugLocation(977, 9);
				MatchRange('\u0EAD','\u0EB9'); if (state.failed) return;

				}
				break;
			case 203:
				DebugEnterAlt(203);
				// Java6ColorizerLexer.g:978:9: '\\u0ebb' .. '\\u0ebd'
				{
				DebugLocation(978, 9);
				MatchRange('\u0EBB','\u0EBD'); if (state.failed) return;

				}
				break;
			case 204:
				DebugEnterAlt(204);
				// Java6ColorizerLexer.g:979:9: '\\u0ec0' .. '\\u0ec4'
				{
				DebugLocation(979, 9);
				MatchRange('\u0EC0','\u0EC4'); if (state.failed) return;

				}
				break;
			case 205:
				DebugEnterAlt(205);
				// Java6ColorizerLexer.g:980:9: '\\u0ec6'
				{
				DebugLocation(980, 9);
				Match('\u0EC6'); if (state.failed) return;

				}
				break;
			case 206:
				DebugEnterAlt(206);
				// Java6ColorizerLexer.g:981:9: '\\u0ec8' .. '\\u0ecd'
				{
				DebugLocation(981, 9);
				MatchRange('\u0EC8','\u0ECD'); if (state.failed) return;

				}
				break;
			case 207:
				DebugEnterAlt(207);
				// Java6ColorizerLexer.g:982:9: '\\u0ed0' .. '\\u0ed9'
				{
				DebugLocation(982, 9);
				MatchRange('\u0ED0','\u0ED9'); if (state.failed) return;

				}
				break;
			case 208:
				DebugEnterAlt(208);
				// Java6ColorizerLexer.g:983:9: '\\u0edc' .. '\\u0edd'
				{
				DebugLocation(983, 9);
				MatchRange('\u0EDC','\u0EDD'); if (state.failed) return;

				}
				break;
			case 209:
				DebugEnterAlt(209);
				// Java6ColorizerLexer.g:984:9: '\\u0f00'
				{
				DebugLocation(984, 9);
				Match('\u0F00'); if (state.failed) return;

				}
				break;
			case 210:
				DebugEnterAlt(210);
				// Java6ColorizerLexer.g:985:9: '\\u0f18' .. '\\u0f19'
				{
				DebugLocation(985, 9);
				MatchRange('\u0F18','\u0F19'); if (state.failed) return;

				}
				break;
			case 211:
				DebugEnterAlt(211);
				// Java6ColorizerLexer.g:986:9: '\\u0f20' .. '\\u0f29'
				{
				DebugLocation(986, 9);
				MatchRange('\u0F20','\u0F29'); if (state.failed) return;

				}
				break;
			case 212:
				DebugEnterAlt(212);
				// Java6ColorizerLexer.g:987:9: '\\u0f35'
				{
				DebugLocation(987, 9);
				Match('\u0F35'); if (state.failed) return;

				}
				break;
			case 213:
				DebugEnterAlt(213);
				// Java6ColorizerLexer.g:988:9: '\\u0f37'
				{
				DebugLocation(988, 9);
				Match('\u0F37'); if (state.failed) return;

				}
				break;
			case 214:
				DebugEnterAlt(214);
				// Java6ColorizerLexer.g:989:9: '\\u0f39'
				{
				DebugLocation(989, 9);
				Match('\u0F39'); if (state.failed) return;

				}
				break;
			case 215:
				DebugEnterAlt(215);
				// Java6ColorizerLexer.g:990:9: '\\u0f3e' .. '\\u0f47'
				{
				DebugLocation(990, 9);
				MatchRange('\u0F3E','\u0F47'); if (state.failed) return;

				}
				break;
			case 216:
				DebugEnterAlt(216);
				// Java6ColorizerLexer.g:991:9: '\\u0f49' .. '\\u0f6a'
				{
				DebugLocation(991, 9);
				MatchRange('\u0F49','\u0F6A'); if (state.failed) return;

				}
				break;
			case 217:
				DebugEnterAlt(217);
				// Java6ColorizerLexer.g:992:9: '\\u0f71' .. '\\u0f84'
				{
				DebugLocation(992, 9);
				MatchRange('\u0F71','\u0F84'); if (state.failed) return;

				}
				break;
			case 218:
				DebugEnterAlt(218);
				// Java6ColorizerLexer.g:993:9: '\\u0f86' .. '\\u0f8b'
				{
				DebugLocation(993, 9);
				MatchRange('\u0F86','\u0F8B'); if (state.failed) return;

				}
				break;
			case 219:
				DebugEnterAlt(219);
				// Java6ColorizerLexer.g:994:9: '\\u0f90' .. '\\u0f97'
				{
				DebugLocation(994, 9);
				MatchRange('\u0F90','\u0F97'); if (state.failed) return;

				}
				break;
			case 220:
				DebugEnterAlt(220);
				// Java6ColorizerLexer.g:995:9: '\\u0f99' .. '\\u0fbc'
				{
				DebugLocation(995, 9);
				MatchRange('\u0F99','\u0FBC'); if (state.failed) return;

				}
				break;
			case 221:
				DebugEnterAlt(221);
				// Java6ColorizerLexer.g:996:9: '\\u0fc6'
				{
				DebugLocation(996, 9);
				Match('\u0FC6'); if (state.failed) return;

				}
				break;
			case 222:
				DebugEnterAlt(222);
				// Java6ColorizerLexer.g:997:9: '\\u1000' .. '\\u1021'
				{
				DebugLocation(997, 9);
				MatchRange('\u1000','\u1021'); if (state.failed) return;

				}
				break;
			case 223:
				DebugEnterAlt(223);
				// Java6ColorizerLexer.g:998:9: '\\u1023' .. '\\u1027'
				{
				DebugLocation(998, 9);
				MatchRange('\u1023','\u1027'); if (state.failed) return;

				}
				break;
			case 224:
				DebugEnterAlt(224);
				// Java6ColorizerLexer.g:999:9: '\\u1029' .. '\\u102a'
				{
				DebugLocation(999, 9);
				MatchRange('\u1029','\u102A'); if (state.failed) return;

				}
				break;
			case 225:
				DebugEnterAlt(225);
				// Java6ColorizerLexer.g:1000:9: '\\u102c' .. '\\u1032'
				{
				DebugLocation(1000, 9);
				MatchRange('\u102C','\u1032'); if (state.failed) return;

				}
				break;
			case 226:
				DebugEnterAlt(226);
				// Java6ColorizerLexer.g:1001:9: '\\u1036' .. '\\u1039'
				{
				DebugLocation(1001, 9);
				MatchRange('\u1036','\u1039'); if (state.failed) return;

				}
				break;
			case 227:
				DebugEnterAlt(227);
				// Java6ColorizerLexer.g:1002:9: '\\u1040' .. '\\u1049'
				{
				DebugLocation(1002, 9);
				MatchRange('\u1040','\u1049'); if (state.failed) return;

				}
				break;
			case 228:
				DebugEnterAlt(228);
				// Java6ColorizerLexer.g:1003:9: '\\u1050' .. '\\u1059'
				{
				DebugLocation(1003, 9);
				MatchRange('\u1050','\u1059'); if (state.failed) return;

				}
				break;
			case 229:
				DebugEnterAlt(229);
				// Java6ColorizerLexer.g:1004:9: '\\u10a0' .. '\\u10c5'
				{
				DebugLocation(1004, 9);
				MatchRange('\u10A0','\u10C5'); if (state.failed) return;

				}
				break;
			case 230:
				DebugEnterAlt(230);
				// Java6ColorizerLexer.g:1005:9: '\\u10d0' .. '\\u10f8'
				{
				DebugLocation(1005, 9);
				MatchRange('\u10D0','\u10F8'); if (state.failed) return;

				}
				break;
			case 231:
				DebugEnterAlt(231);
				// Java6ColorizerLexer.g:1006:9: '\\u1100' .. '\\u1159'
				{
				DebugLocation(1006, 9);
				MatchRange('\u1100','\u1159'); if (state.failed) return;

				}
				break;
			case 232:
				DebugEnterAlt(232);
				// Java6ColorizerLexer.g:1007:9: '\\u115f' .. '\\u11a2'
				{
				DebugLocation(1007, 9);
				MatchRange('\u115F','\u11A2'); if (state.failed) return;

				}
				break;
			case 233:
				DebugEnterAlt(233);
				// Java6ColorizerLexer.g:1008:9: '\\u11a8' .. '\\u11f9'
				{
				DebugLocation(1008, 9);
				MatchRange('\u11A8','\u11F9'); if (state.failed) return;

				}
				break;
			case 234:
				DebugEnterAlt(234);
				// Java6ColorizerLexer.g:1009:9: '\\u1200' .. '\\u1206'
				{
				DebugLocation(1009, 9);
				MatchRange('\u1200','\u1206'); if (state.failed) return;

				}
				break;
			case 235:
				DebugEnterAlt(235);
				// Java6ColorizerLexer.g:1010:9: '\\u1208' .. '\\u1246'
				{
				DebugLocation(1010, 9);
				MatchRange('\u1208','\u1246'); if (state.failed) return;

				}
				break;
			case 236:
				DebugEnterAlt(236);
				// Java6ColorizerLexer.g:1011:9: '\\u1248'
				{
				DebugLocation(1011, 9);
				Match('\u1248'); if (state.failed) return;

				}
				break;
			case 237:
				DebugEnterAlt(237);
				// Java6ColorizerLexer.g:1012:9: '\\u124a' .. '\\u124d'
				{
				DebugLocation(1012, 9);
				MatchRange('\u124A','\u124D'); if (state.failed) return;

				}
				break;
			case 238:
				DebugEnterAlt(238);
				// Java6ColorizerLexer.g:1013:9: '\\u1250' .. '\\u1256'
				{
				DebugLocation(1013, 9);
				MatchRange('\u1250','\u1256'); if (state.failed) return;

				}
				break;
			case 239:
				DebugEnterAlt(239);
				// Java6ColorizerLexer.g:1014:9: '\\u1258'
				{
				DebugLocation(1014, 9);
				Match('\u1258'); if (state.failed) return;

				}
				break;
			case 240:
				DebugEnterAlt(240);
				// Java6ColorizerLexer.g:1015:9: '\\u125a' .. '\\u125d'
				{
				DebugLocation(1015, 9);
				MatchRange('\u125A','\u125D'); if (state.failed) return;

				}
				break;
			case 241:
				DebugEnterAlt(241);
				// Java6ColorizerLexer.g:1016:9: '\\u1260' .. '\\u1286'
				{
				DebugLocation(1016, 9);
				MatchRange('\u1260','\u1286'); if (state.failed) return;

				}
				break;
			case 242:
				DebugEnterAlt(242);
				// Java6ColorizerLexer.g:1017:9: '\\u1288'
				{
				DebugLocation(1017, 9);
				Match('\u1288'); if (state.failed) return;

				}
				break;
			case 243:
				DebugEnterAlt(243);
				// Java6ColorizerLexer.g:1018:9: '\\u128a' .. '\\u128d'
				{
				DebugLocation(1018, 9);
				MatchRange('\u128A','\u128D'); if (state.failed) return;

				}
				break;
			case 244:
				DebugEnterAlt(244);
				// Java6ColorizerLexer.g:1019:9: '\\u1290' .. '\\u12ae'
				{
				DebugLocation(1019, 9);
				MatchRange('\u1290','\u12AE'); if (state.failed) return;

				}
				break;
			case 245:
				DebugEnterAlt(245);
				// Java6ColorizerLexer.g:1020:9: '\\u12b0'
				{
				DebugLocation(1020, 9);
				Match('\u12B0'); if (state.failed) return;

				}
				break;
			case 246:
				DebugEnterAlt(246);
				// Java6ColorizerLexer.g:1021:9: '\\u12b2' .. '\\u12b5'
				{
				DebugLocation(1021, 9);
				MatchRange('\u12B2','\u12B5'); if (state.failed) return;

				}
				break;
			case 247:
				DebugEnterAlt(247);
				// Java6ColorizerLexer.g:1022:9: '\\u12b8' .. '\\u12be'
				{
				DebugLocation(1022, 9);
				MatchRange('\u12B8','\u12BE'); if (state.failed) return;

				}
				break;
			case 248:
				DebugEnterAlt(248);
				// Java6ColorizerLexer.g:1023:9: '\\u12c0'
				{
				DebugLocation(1023, 9);
				Match('\u12C0'); if (state.failed) return;

				}
				break;
			case 249:
				DebugEnterAlt(249);
				// Java6ColorizerLexer.g:1024:9: '\\u12c2' .. '\\u12c5'
				{
				DebugLocation(1024, 9);
				MatchRange('\u12C2','\u12C5'); if (state.failed) return;

				}
				break;
			case 250:
				DebugEnterAlt(250);
				// Java6ColorizerLexer.g:1025:9: '\\u12c8' .. '\\u12ce'
				{
				DebugLocation(1025, 9);
				MatchRange('\u12C8','\u12CE'); if (state.failed) return;

				}
				break;
			case 251:
				DebugEnterAlt(251);
				// Java6ColorizerLexer.g:1026:9: '\\u12d0' .. '\\u12d6'
				{
				DebugLocation(1026, 9);
				MatchRange('\u12D0','\u12D6'); if (state.failed) return;

				}
				break;
			case 252:
				DebugEnterAlt(252);
				// Java6ColorizerLexer.g:1027:9: '\\u12d8' .. '\\u12ee'
				{
				DebugLocation(1027, 9);
				MatchRange('\u12D8','\u12EE'); if (state.failed) return;

				}
				break;
			case 253:
				DebugEnterAlt(253);
				// Java6ColorizerLexer.g:1028:9: '\\u12f0' .. '\\u130e'
				{
				DebugLocation(1028, 9);
				MatchRange('\u12F0','\u130E'); if (state.failed) return;

				}
				break;
			case 254:
				DebugEnterAlt(254);
				// Java6ColorizerLexer.g:1029:9: '\\u1310'
				{
				DebugLocation(1029, 9);
				Match('\u1310'); if (state.failed) return;

				}
				break;
			case 255:
				DebugEnterAlt(255);
				// Java6ColorizerLexer.g:1030:9: '\\u1312' .. '\\u1315'
				{
				DebugLocation(1030, 9);
				MatchRange('\u1312','\u1315'); if (state.failed) return;

				}
				break;
			case 256:
				DebugEnterAlt(256);
				// Java6ColorizerLexer.g:1031:9: '\\u1318' .. '\\u131e'
				{
				DebugLocation(1031, 9);
				MatchRange('\u1318','\u131E'); if (state.failed) return;

				}
				break;
			case 257:
				DebugEnterAlt(257);
				// Java6ColorizerLexer.g:1032:9: '\\u1320' .. '\\u1346'
				{
				DebugLocation(1032, 9);
				MatchRange('\u1320','\u1346'); if (state.failed) return;

				}
				break;
			case 258:
				DebugEnterAlt(258);
				// Java6ColorizerLexer.g:1033:9: '\\u1348' .. '\\u135a'
				{
				DebugLocation(1033, 9);
				MatchRange('\u1348','\u135A'); if (state.failed) return;

				}
				break;
			case 259:
				DebugEnterAlt(259);
				// Java6ColorizerLexer.g:1034:9: '\\u1369' .. '\\u1371'
				{
				DebugLocation(1034, 9);
				MatchRange('\u1369','\u1371'); if (state.failed) return;

				}
				break;
			case 260:
				DebugEnterAlt(260);
				// Java6ColorizerLexer.g:1035:9: '\\u13a0' .. '\\u13f4'
				{
				DebugLocation(1035, 9);
				MatchRange('\u13A0','\u13F4'); if (state.failed) return;

				}
				break;
			case 261:
				DebugEnterAlt(261);
				// Java6ColorizerLexer.g:1036:9: '\\u1401' .. '\\u166c'
				{
				DebugLocation(1036, 9);
				MatchRange('\u1401','\u166C'); if (state.failed) return;

				}
				break;
			case 262:
				DebugEnterAlt(262);
				// Java6ColorizerLexer.g:1037:9: '\\u166f' .. '\\u1676'
				{
				DebugLocation(1037, 9);
				MatchRange('\u166F','\u1676'); if (state.failed) return;

				}
				break;
			case 263:
				DebugEnterAlt(263);
				// Java6ColorizerLexer.g:1038:9: '\\u1681' .. '\\u169a'
				{
				DebugLocation(1038, 9);
				MatchRange('\u1681','\u169A'); if (state.failed) return;

				}
				break;
			case 264:
				DebugEnterAlt(264);
				// Java6ColorizerLexer.g:1039:9: '\\u16a0' .. '\\u16ea'
				{
				DebugLocation(1039, 9);
				MatchRange('\u16A0','\u16EA'); if (state.failed) return;

				}
				break;
			case 265:
				DebugEnterAlt(265);
				// Java6ColorizerLexer.g:1040:9: '\\u16ee' .. '\\u16f0'
				{
				DebugLocation(1040, 9);
				MatchRange('\u16EE','\u16F0'); if (state.failed) return;

				}
				break;
			case 266:
				DebugEnterAlt(266);
				// Java6ColorizerLexer.g:1041:9: '\\u1700' .. '\\u170c'
				{
				DebugLocation(1041, 9);
				MatchRange('\u1700','\u170C'); if (state.failed) return;

				}
				break;
			case 267:
				DebugEnterAlt(267);
				// Java6ColorizerLexer.g:1042:9: '\\u170e' .. '\\u1714'
				{
				DebugLocation(1042, 9);
				MatchRange('\u170E','\u1714'); if (state.failed) return;

				}
				break;
			case 268:
				DebugEnterAlt(268);
				// Java6ColorizerLexer.g:1043:9: '\\u1720' .. '\\u1734'
				{
				DebugLocation(1043, 9);
				MatchRange('\u1720','\u1734'); if (state.failed) return;

				}
				break;
			case 269:
				DebugEnterAlt(269);
				// Java6ColorizerLexer.g:1044:9: '\\u1740' .. '\\u1753'
				{
				DebugLocation(1044, 9);
				MatchRange('\u1740','\u1753'); if (state.failed) return;

				}
				break;
			case 270:
				DebugEnterAlt(270);
				// Java6ColorizerLexer.g:1045:9: '\\u1760' .. '\\u176c'
				{
				DebugLocation(1045, 9);
				MatchRange('\u1760','\u176C'); if (state.failed) return;

				}
				break;
			case 271:
				DebugEnterAlt(271);
				// Java6ColorizerLexer.g:1046:9: '\\u176e' .. '\\u1770'
				{
				DebugLocation(1046, 9);
				MatchRange('\u176E','\u1770'); if (state.failed) return;

				}
				break;
			case 272:
				DebugEnterAlt(272);
				// Java6ColorizerLexer.g:1047:9: '\\u1772' .. '\\u1773'
				{
				DebugLocation(1047, 9);
				MatchRange('\u1772','\u1773'); if (state.failed) return;

				}
				break;
			case 273:
				DebugEnterAlt(273);
				// Java6ColorizerLexer.g:1048:9: '\\u1780' .. '\\u17d3'
				{
				DebugLocation(1048, 9);
				MatchRange('\u1780','\u17D3'); if (state.failed) return;

				}
				break;
			case 274:
				DebugEnterAlt(274);
				// Java6ColorizerLexer.g:1049:9: '\\u17d7'
				{
				DebugLocation(1049, 9);
				Match('\u17D7'); if (state.failed) return;

				}
				break;
			case 275:
				DebugEnterAlt(275);
				// Java6ColorizerLexer.g:1050:9: '\\u17db' .. '\\u17dd'
				{
				DebugLocation(1050, 9);
				MatchRange('\u17DB','\u17DD'); if (state.failed) return;

				}
				break;
			case 276:
				DebugEnterAlt(276);
				// Java6ColorizerLexer.g:1051:9: '\\u17e0' .. '\\u17e9'
				{
				DebugLocation(1051, 9);
				MatchRange('\u17E0','\u17E9'); if (state.failed) return;

				}
				break;
			case 277:
				DebugEnterAlt(277);
				// Java6ColorizerLexer.g:1052:9: '\\u180b' .. '\\u180d'
				{
				DebugLocation(1052, 9);
				MatchRange('\u180B','\u180D'); if (state.failed) return;

				}
				break;
			case 278:
				DebugEnterAlt(278);
				// Java6ColorizerLexer.g:1053:9: '\\u1810' .. '\\u1819'
				{
				DebugLocation(1053, 9);
				MatchRange('\u1810','\u1819'); if (state.failed) return;

				}
				break;
			case 279:
				DebugEnterAlt(279);
				// Java6ColorizerLexer.g:1054:9: '\\u1820' .. '\\u1877'
				{
				DebugLocation(1054, 9);
				MatchRange('\u1820','\u1877'); if (state.failed) return;

				}
				break;
			case 280:
				DebugEnterAlt(280);
				// Java6ColorizerLexer.g:1055:9: '\\u1880' .. '\\u18a9'
				{
				DebugLocation(1055, 9);
				MatchRange('\u1880','\u18A9'); if (state.failed) return;

				}
				break;
			case 281:
				DebugEnterAlt(281);
				// Java6ColorizerLexer.g:1056:9: '\\u1900' .. '\\u191c'
				{
				DebugLocation(1056, 9);
				MatchRange('\u1900','\u191C'); if (state.failed) return;

				}
				break;
			case 282:
				DebugEnterAlt(282);
				// Java6ColorizerLexer.g:1057:9: '\\u1920' .. '\\u192b'
				{
				DebugLocation(1057, 9);
				MatchRange('\u1920','\u192B'); if (state.failed) return;

				}
				break;
			case 283:
				DebugEnterAlt(283);
				// Java6ColorizerLexer.g:1058:9: '\\u1930' .. '\\u193b'
				{
				DebugLocation(1058, 9);
				MatchRange('\u1930','\u193B'); if (state.failed) return;

				}
				break;
			case 284:
				DebugEnterAlt(284);
				// Java6ColorizerLexer.g:1059:9: '\\u1946' .. '\\u196d'
				{
				DebugLocation(1059, 9);
				MatchRange('\u1946','\u196D'); if (state.failed) return;

				}
				break;
			case 285:
				DebugEnterAlt(285);
				// Java6ColorizerLexer.g:1060:9: '\\u1970' .. '\\u1974'
				{
				DebugLocation(1060, 9);
				MatchRange('\u1970','\u1974'); if (state.failed) return;

				}
				break;
			case 286:
				DebugEnterAlt(286);
				// Java6ColorizerLexer.g:1061:9: '\\u1d00' .. '\\u1d6b'
				{
				DebugLocation(1061, 9);
				MatchRange('\u1D00','\u1D6B'); if (state.failed) return;

				}
				break;
			case 287:
				DebugEnterAlt(287);
				// Java6ColorizerLexer.g:1062:9: '\\u1e00' .. '\\u1e9b'
				{
				DebugLocation(1062, 9);
				MatchRange('\u1E00','\u1E9B'); if (state.failed) return;

				}
				break;
			case 288:
				DebugEnterAlt(288);
				// Java6ColorizerLexer.g:1063:9: '\\u1ea0' .. '\\u1ef9'
				{
				DebugLocation(1063, 9);
				MatchRange('\u1EA0','\u1EF9'); if (state.failed) return;

				}
				break;
			case 289:
				DebugEnterAlt(289);
				// Java6ColorizerLexer.g:1064:9: '\\u1f00' .. '\\u1f15'
				{
				DebugLocation(1064, 9);
				MatchRange('\u1F00','\u1F15'); if (state.failed) return;

				}
				break;
			case 290:
				DebugEnterAlt(290);
				// Java6ColorizerLexer.g:1065:9: '\\u1f18' .. '\\u1f1d'
				{
				DebugLocation(1065, 9);
				MatchRange('\u1F18','\u1F1D'); if (state.failed) return;

				}
				break;
			case 291:
				DebugEnterAlt(291);
				// Java6ColorizerLexer.g:1066:9: '\\u1f20' .. '\\u1f45'
				{
				DebugLocation(1066, 9);
				MatchRange('\u1F20','\u1F45'); if (state.failed) return;

				}
				break;
			case 292:
				DebugEnterAlt(292);
				// Java6ColorizerLexer.g:1067:9: '\\u1f48' .. '\\u1f4d'
				{
				DebugLocation(1067, 9);
				MatchRange('\u1F48','\u1F4D'); if (state.failed) return;

				}
				break;
			case 293:
				DebugEnterAlt(293);
				// Java6ColorizerLexer.g:1068:9: '\\u1f50' .. '\\u1f57'
				{
				DebugLocation(1068, 9);
				MatchRange('\u1F50','\u1F57'); if (state.failed) return;

				}
				break;
			case 294:
				DebugEnterAlt(294);
				// Java6ColorizerLexer.g:1069:9: '\\u1f59'
				{
				DebugLocation(1069, 9);
				Match('\u1F59'); if (state.failed) return;

				}
				break;
			case 295:
				DebugEnterAlt(295);
				// Java6ColorizerLexer.g:1070:9: '\\u1f5b'
				{
				DebugLocation(1070, 9);
				Match('\u1F5B'); if (state.failed) return;

				}
				break;
			case 296:
				DebugEnterAlt(296);
				// Java6ColorizerLexer.g:1071:9: '\\u1f5d'
				{
				DebugLocation(1071, 9);
				Match('\u1F5D'); if (state.failed) return;

				}
				break;
			case 297:
				DebugEnterAlt(297);
				// Java6ColorizerLexer.g:1072:9: '\\u1f5f' .. '\\u1f7d'
				{
				DebugLocation(1072, 9);
				MatchRange('\u1F5F','\u1F7D'); if (state.failed) return;

				}
				break;
			case 298:
				DebugEnterAlt(298);
				// Java6ColorizerLexer.g:1073:9: '\\u1f80' .. '\\u1fb4'
				{
				DebugLocation(1073, 9);
				MatchRange('\u1F80','\u1FB4'); if (state.failed) return;

				}
				break;
			case 299:
				DebugEnterAlt(299);
				// Java6ColorizerLexer.g:1074:9: '\\u1fb6' .. '\\u1fbc'
				{
				DebugLocation(1074, 9);
				MatchRange('\u1FB6','\u1FBC'); if (state.failed) return;

				}
				break;
			case 300:
				DebugEnterAlt(300);
				// Java6ColorizerLexer.g:1075:9: '\\u1fbe'
				{
				DebugLocation(1075, 9);
				Match('\u1FBE'); if (state.failed) return;

				}
				break;
			case 301:
				DebugEnterAlt(301);
				// Java6ColorizerLexer.g:1076:9: '\\u1fc2' .. '\\u1fc4'
				{
				DebugLocation(1076, 9);
				MatchRange('\u1FC2','\u1FC4'); if (state.failed) return;

				}
				break;
			case 302:
				DebugEnterAlt(302);
				// Java6ColorizerLexer.g:1077:9: '\\u1fc6' .. '\\u1fcc'
				{
				DebugLocation(1077, 9);
				MatchRange('\u1FC6','\u1FCC'); if (state.failed) return;

				}
				break;
			case 303:
				DebugEnterAlt(303);
				// Java6ColorizerLexer.g:1078:9: '\\u1fd0' .. '\\u1fd3'
				{
				DebugLocation(1078, 9);
				MatchRange('\u1FD0','\u1FD3'); if (state.failed) return;

				}
				break;
			case 304:
				DebugEnterAlt(304);
				// Java6ColorizerLexer.g:1079:9: '\\u1fd6' .. '\\u1fdb'
				{
				DebugLocation(1079, 9);
				MatchRange('\u1FD6','\u1FDB'); if (state.failed) return;

				}
				break;
			case 305:
				DebugEnterAlt(305);
				// Java6ColorizerLexer.g:1080:9: '\\u1fe0' .. '\\u1fec'
				{
				DebugLocation(1080, 9);
				MatchRange('\u1FE0','\u1FEC'); if (state.failed) return;

				}
				break;
			case 306:
				DebugEnterAlt(306);
				// Java6ColorizerLexer.g:1081:9: '\\u1ff2' .. '\\u1ff4'
				{
				DebugLocation(1081, 9);
				MatchRange('\u1FF2','\u1FF4'); if (state.failed) return;

				}
				break;
			case 307:
				DebugEnterAlt(307);
				// Java6ColorizerLexer.g:1082:9: '\\u1ff6' .. '\\u1ffc'
				{
				DebugLocation(1082, 9);
				MatchRange('\u1FF6','\u1FFC'); if (state.failed) return;

				}
				break;
			case 308:
				DebugEnterAlt(308);
				// Java6ColorizerLexer.g:1083:9: '\\u200c' .. '\\u200f'
				{
				DebugLocation(1083, 9);
				MatchRange('\u200C','\u200F'); if (state.failed) return;

				}
				break;
			case 309:
				DebugEnterAlt(309);
				// Java6ColorizerLexer.g:1084:9: '\\u202a' .. '\\u202e'
				{
				DebugLocation(1084, 9);
				MatchRange('\u202A','\u202E'); if (state.failed) return;

				}
				break;
			case 310:
				DebugEnterAlt(310);
				// Java6ColorizerLexer.g:1085:9: '\\u203f' .. '\\u2040'
				{
				DebugLocation(1085, 9);
				MatchRange('\u203F','\u2040'); if (state.failed) return;

				}
				break;
			case 311:
				DebugEnterAlt(311);
				// Java6ColorizerLexer.g:1086:9: '\\u2054'
				{
				DebugLocation(1086, 9);
				Match('\u2054'); if (state.failed) return;

				}
				break;
			case 312:
				DebugEnterAlt(312);
				// Java6ColorizerLexer.g:1087:9: '\\u2060' .. '\\u2063'
				{
				DebugLocation(1087, 9);
				MatchRange('\u2060','\u2063'); if (state.failed) return;

				}
				break;
			case 313:
				DebugEnterAlt(313);
				// Java6ColorizerLexer.g:1088:9: '\\u206a' .. '\\u206f'
				{
				DebugLocation(1088, 9);
				MatchRange('\u206A','\u206F'); if (state.failed) return;

				}
				break;
			case 314:
				DebugEnterAlt(314);
				// Java6ColorizerLexer.g:1089:9: '\\u2071'
				{
				DebugLocation(1089, 9);
				Match('\u2071'); if (state.failed) return;

				}
				break;
			case 315:
				DebugEnterAlt(315);
				// Java6ColorizerLexer.g:1090:9: '\\u207f'
				{
				DebugLocation(1090, 9);
				Match('\u207F'); if (state.failed) return;

				}
				break;
			case 316:
				DebugEnterAlt(316);
				// Java6ColorizerLexer.g:1091:9: '\\u20a0' .. '\\u20b1'
				{
				DebugLocation(1091, 9);
				MatchRange('\u20A0','\u20B1'); if (state.failed) return;

				}
				break;
			case 317:
				DebugEnterAlt(317);
				// Java6ColorizerLexer.g:1092:9: '\\u20d0' .. '\\u20dc'
				{
				DebugLocation(1092, 9);
				MatchRange('\u20D0','\u20DC'); if (state.failed) return;

				}
				break;
			case 318:
				DebugEnterAlt(318);
				// Java6ColorizerLexer.g:1093:9: '\\u20e1'
				{
				DebugLocation(1093, 9);
				Match('\u20E1'); if (state.failed) return;

				}
				break;
			case 319:
				DebugEnterAlt(319);
				// Java6ColorizerLexer.g:1094:9: '\\u20e5' .. '\\u20ea'
				{
				DebugLocation(1094, 9);
				MatchRange('\u20E5','\u20EA'); if (state.failed) return;

				}
				break;
			case 320:
				DebugEnterAlt(320);
				// Java6ColorizerLexer.g:1095:9: '\\u2102'
				{
				DebugLocation(1095, 9);
				Match('\u2102'); if (state.failed) return;

				}
				break;
			case 321:
				DebugEnterAlt(321);
				// Java6ColorizerLexer.g:1096:9: '\\u2107'
				{
				DebugLocation(1096, 9);
				Match('\u2107'); if (state.failed) return;

				}
				break;
			case 322:
				DebugEnterAlt(322);
				// Java6ColorizerLexer.g:1097:9: '\\u210a' .. '\\u2113'
				{
				DebugLocation(1097, 9);
				MatchRange('\u210A','\u2113'); if (state.failed) return;

				}
				break;
			case 323:
				DebugEnterAlt(323);
				// Java6ColorizerLexer.g:1098:9: '\\u2115'
				{
				DebugLocation(1098, 9);
				Match('\u2115'); if (state.failed) return;

				}
				break;
			case 324:
				DebugEnterAlt(324);
				// Java6ColorizerLexer.g:1099:9: '\\u2119' .. '\\u211d'
				{
				DebugLocation(1099, 9);
				MatchRange('\u2119','\u211D'); if (state.failed) return;

				}
				break;
			case 325:
				DebugEnterAlt(325);
				// Java6ColorizerLexer.g:1100:9: '\\u2124'
				{
				DebugLocation(1100, 9);
				Match('\u2124'); if (state.failed) return;

				}
				break;
			case 326:
				DebugEnterAlt(326);
				// Java6ColorizerLexer.g:1101:9: '\\u2126'
				{
				DebugLocation(1101, 9);
				Match('\u2126'); if (state.failed) return;

				}
				break;
			case 327:
				DebugEnterAlt(327);
				// Java6ColorizerLexer.g:1102:9: '\\u2128'
				{
				DebugLocation(1102, 9);
				Match('\u2128'); if (state.failed) return;

				}
				break;
			case 328:
				DebugEnterAlt(328);
				// Java6ColorizerLexer.g:1103:9: '\\u212a' .. '\\u212d'
				{
				DebugLocation(1103, 9);
				MatchRange('\u212A','\u212D'); if (state.failed) return;

				}
				break;
			case 329:
				DebugEnterAlt(329);
				// Java6ColorizerLexer.g:1104:9: '\\u212f' .. '\\u2131'
				{
				DebugLocation(1104, 9);
				MatchRange('\u212F','\u2131'); if (state.failed) return;

				}
				break;
			case 330:
				DebugEnterAlt(330);
				// Java6ColorizerLexer.g:1105:9: '\\u2133' .. '\\u2139'
				{
				DebugLocation(1105, 9);
				MatchRange('\u2133','\u2139'); if (state.failed) return;

				}
				break;
			case 331:
				DebugEnterAlt(331);
				// Java6ColorizerLexer.g:1106:9: '\\u213d' .. '\\u213f'
				{
				DebugLocation(1106, 9);
				MatchRange('\u213D','\u213F'); if (state.failed) return;

				}
				break;
			case 332:
				DebugEnterAlt(332);
				// Java6ColorizerLexer.g:1107:9: '\\u2145' .. '\\u2149'
				{
				DebugLocation(1107, 9);
				MatchRange('\u2145','\u2149'); if (state.failed) return;

				}
				break;
			case 333:
				DebugEnterAlt(333);
				// Java6ColorizerLexer.g:1108:9: '\\u2160' .. '\\u2183'
				{
				DebugLocation(1108, 9);
				MatchRange('\u2160','\u2183'); if (state.failed) return;

				}
				break;
			case 334:
				DebugEnterAlt(334);
				// Java6ColorizerLexer.g:1109:9: '\\u3005' .. '\\u3007'
				{
				DebugLocation(1109, 9);
				MatchRange('\u3005','\u3007'); if (state.failed) return;

				}
				break;
			case 335:
				DebugEnterAlt(335);
				// Java6ColorizerLexer.g:1110:9: '\\u3021' .. '\\u302f'
				{
				DebugLocation(1110, 9);
				MatchRange('\u3021','\u302F'); if (state.failed) return;

				}
				break;
			case 336:
				DebugEnterAlt(336);
				// Java6ColorizerLexer.g:1111:9: '\\u3031' .. '\\u3035'
				{
				DebugLocation(1111, 9);
				MatchRange('\u3031','\u3035'); if (state.failed) return;

				}
				break;
			case 337:
				DebugEnterAlt(337);
				// Java6ColorizerLexer.g:1112:9: '\\u3038' .. '\\u303c'
				{
				DebugLocation(1112, 9);
				MatchRange('\u3038','\u303C'); if (state.failed) return;

				}
				break;
			case 338:
				DebugEnterAlt(338);
				// Java6ColorizerLexer.g:1113:9: '\\u3041' .. '\\u3096'
				{
				DebugLocation(1113, 9);
				MatchRange('\u3041','\u3096'); if (state.failed) return;

				}
				break;
			case 339:
				DebugEnterAlt(339);
				// Java6ColorizerLexer.g:1114:9: '\\u3099' .. '\\u309a'
				{
				DebugLocation(1114, 9);
				MatchRange('\u3099','\u309A'); if (state.failed) return;

				}
				break;
			case 340:
				DebugEnterAlt(340);
				// Java6ColorizerLexer.g:1115:9: '\\u309d' .. '\\u309f'
				{
				DebugLocation(1115, 9);
				MatchRange('\u309D','\u309F'); if (state.failed) return;

				}
				break;
			case 341:
				DebugEnterAlt(341);
				// Java6ColorizerLexer.g:1116:9: '\\u30a1' .. '\\u30ff'
				{
				DebugLocation(1116, 9);
				MatchRange('\u30A1','\u30FF'); if (state.failed) return;

				}
				break;
			case 342:
				DebugEnterAlt(342);
				// Java6ColorizerLexer.g:1117:9: '\\u3105' .. '\\u312c'
				{
				DebugLocation(1117, 9);
				MatchRange('\u3105','\u312C'); if (state.failed) return;

				}
				break;
			case 343:
				DebugEnterAlt(343);
				// Java6ColorizerLexer.g:1118:9: '\\u3131' .. '\\u318e'
				{
				DebugLocation(1118, 9);
				MatchRange('\u3131','\u318E'); if (state.failed) return;

				}
				break;
			case 344:
				DebugEnterAlt(344);
				// Java6ColorizerLexer.g:1119:9: '\\u31a0' .. '\\u31b7'
				{
				DebugLocation(1119, 9);
				MatchRange('\u31A0','\u31B7'); if (state.failed) return;

				}
				break;
			case 345:
				DebugEnterAlt(345);
				// Java6ColorizerLexer.g:1120:9: '\\u31f0' .. '\\u31ff'
				{
				DebugLocation(1120, 9);
				MatchRange('\u31F0','\u31FF'); if (state.failed) return;

				}
				break;
			case 346:
				DebugEnterAlt(346);
				// Java6ColorizerLexer.g:1121:9: '\\u3400' .. '\\u4db5'
				{
				DebugLocation(1121, 9);
				MatchRange('\u3400','\u4DB5'); if (state.failed) return;

				}
				break;
			case 347:
				DebugEnterAlt(347);
				// Java6ColorizerLexer.g:1122:9: '\\u4e00' .. '\\u9fa5'
				{
				DebugLocation(1122, 9);
				MatchRange('\u4E00','\u9FA5'); if (state.failed) return;

				}
				break;
			case 348:
				DebugEnterAlt(348);
				// Java6ColorizerLexer.g:1123:9: '\\ua000' .. '\\ua48c'
				{
				DebugLocation(1123, 9);
				MatchRange('\uA000','\uA48C'); if (state.failed) return;

				}
				break;
			case 349:
				DebugEnterAlt(349);
				// Java6ColorizerLexer.g:1124:9: '\\uac00' .. '\\ud7a3'
				{
				DebugLocation(1124, 9);
				MatchRange('\uAC00','\uD7A3'); if (state.failed) return;

				}
				break;
			case 350:
				DebugEnterAlt(350);
				// Java6ColorizerLexer.g:1125:9: '\\uf900' .. '\\ufa2d'
				{
				DebugLocation(1125, 9);
				MatchRange('\uF900','\uFA2D'); if (state.failed) return;

				}
				break;
			case 351:
				DebugEnterAlt(351);
				// Java6ColorizerLexer.g:1126:9: '\\ufa30' .. '\\ufa6a'
				{
				DebugLocation(1126, 9);
				MatchRange('\uFA30','\uFA6A'); if (state.failed) return;

				}
				break;
			case 352:
				DebugEnterAlt(352);
				// Java6ColorizerLexer.g:1127:9: '\\ufb00' .. '\\ufb06'
				{
				DebugLocation(1127, 9);
				MatchRange('\uFB00','\uFB06'); if (state.failed) return;

				}
				break;
			case 353:
				DebugEnterAlt(353);
				// Java6ColorizerLexer.g:1128:9: '\\ufb13' .. '\\ufb17'
				{
				DebugLocation(1128, 9);
				MatchRange('\uFB13','\uFB17'); if (state.failed) return;

				}
				break;
			case 354:
				DebugEnterAlt(354);
				// Java6ColorizerLexer.g:1129:9: '\\ufb1d' .. '\\ufb28'
				{
				DebugLocation(1129, 9);
				MatchRange('\uFB1D','\uFB28'); if (state.failed) return;

				}
				break;
			case 355:
				DebugEnterAlt(355);
				// Java6ColorizerLexer.g:1130:9: '\\ufb2a' .. '\\ufb36'
				{
				DebugLocation(1130, 9);
				MatchRange('\uFB2A','\uFB36'); if (state.failed) return;

				}
				break;
			case 356:
				DebugEnterAlt(356);
				// Java6ColorizerLexer.g:1131:9: '\\ufb38' .. '\\ufb3c'
				{
				DebugLocation(1131, 9);
				MatchRange('\uFB38','\uFB3C'); if (state.failed) return;

				}
				break;
			case 357:
				DebugEnterAlt(357);
				// Java6ColorizerLexer.g:1132:9: '\\ufb3e'
				{
				DebugLocation(1132, 9);
				Match('\uFB3E'); if (state.failed) return;

				}
				break;
			case 358:
				DebugEnterAlt(358);
				// Java6ColorizerLexer.g:1133:9: '\\ufb40' .. '\\ufb41'
				{
				DebugLocation(1133, 9);
				MatchRange('\uFB40','\uFB41'); if (state.failed) return;

				}
				break;
			case 359:
				DebugEnterAlt(359);
				// Java6ColorizerLexer.g:1134:9: '\\ufb43' .. '\\ufb44'
				{
				DebugLocation(1134, 9);
				MatchRange('\uFB43','\uFB44'); if (state.failed) return;

				}
				break;
			case 360:
				DebugEnterAlt(360);
				// Java6ColorizerLexer.g:1135:9: '\\ufb46' .. '\\ufbb1'
				{
				DebugLocation(1135, 9);
				MatchRange('\uFB46','\uFBB1'); if (state.failed) return;

				}
				break;
			case 361:
				DebugEnterAlt(361);
				// Java6ColorizerLexer.g:1136:9: '\\ufbd3' .. '\\ufd3d'
				{
				DebugLocation(1136, 9);
				MatchRange('\uFBD3','\uFD3D'); if (state.failed) return;

				}
				break;
			case 362:
				DebugEnterAlt(362);
				// Java6ColorizerLexer.g:1137:9: '\\ufd50' .. '\\ufd8f'
				{
				DebugLocation(1137, 9);
				MatchRange('\uFD50','\uFD8F'); if (state.failed) return;

				}
				break;
			case 363:
				DebugEnterAlt(363);
				// Java6ColorizerLexer.g:1138:9: '\\ufd92' .. '\\ufdc7'
				{
				DebugLocation(1138, 9);
				MatchRange('\uFD92','\uFDC7'); if (state.failed) return;

				}
				break;
			case 364:
				DebugEnterAlt(364);
				// Java6ColorizerLexer.g:1139:9: '\\ufdf0' .. '\\ufdfc'
				{
				DebugLocation(1139, 9);
				MatchRange('\uFDF0','\uFDFC'); if (state.failed) return;

				}
				break;
			case 365:
				DebugEnterAlt(365);
				// Java6ColorizerLexer.g:1140:9: '\\ufe00' .. '\\ufe0f'
				{
				DebugLocation(1140, 9);
				MatchRange('\uFE00','\uFE0F'); if (state.failed) return;

				}
				break;
			case 366:
				DebugEnterAlt(366);
				// Java6ColorizerLexer.g:1141:9: '\\ufe20' .. '\\ufe23'
				{
				DebugLocation(1141, 9);
				MatchRange('\uFE20','\uFE23'); if (state.failed) return;

				}
				break;
			case 367:
				DebugEnterAlt(367);
				// Java6ColorizerLexer.g:1142:9: '\\ufe33' .. '\\ufe34'
				{
				DebugLocation(1142, 9);
				MatchRange('\uFE33','\uFE34'); if (state.failed) return;

				}
				break;
			case 368:
				DebugEnterAlt(368);
				// Java6ColorizerLexer.g:1143:9: '\\ufe4d' .. '\\ufe4f'
				{
				DebugLocation(1143, 9);
				MatchRange('\uFE4D','\uFE4F'); if (state.failed) return;

				}
				break;
			case 369:
				DebugEnterAlt(369);
				// Java6ColorizerLexer.g:1144:9: '\\ufe69'
				{
				DebugLocation(1144, 9);
				Match('\uFE69'); if (state.failed) return;

				}
				break;
			case 370:
				DebugEnterAlt(370);
				// Java6ColorizerLexer.g:1145:9: '\\ufe70' .. '\\ufe74'
				{
				DebugLocation(1145, 9);
				MatchRange('\uFE70','\uFE74'); if (state.failed) return;

				}
				break;
			case 371:
				DebugEnterAlt(371);
				// Java6ColorizerLexer.g:1146:9: '\\ufe76' .. '\\ufefc'
				{
				DebugLocation(1146, 9);
				MatchRange('\uFE76','\uFEFC'); if (state.failed) return;

				}
				break;
			case 372:
				DebugEnterAlt(372);
				// Java6ColorizerLexer.g:1147:9: '\\ufeff'
				{
				DebugLocation(1147, 9);
				Match('\uFEFF'); if (state.failed) return;

				}
				break;
			case 373:
				DebugEnterAlt(373);
				// Java6ColorizerLexer.g:1148:9: '\\uff04'
				{
				DebugLocation(1148, 9);
				Match('\uFF04'); if (state.failed) return;

				}
				break;
			case 374:
				DebugEnterAlt(374);
				// Java6ColorizerLexer.g:1149:9: '\\uff10' .. '\\uff19'
				{
				DebugLocation(1149, 9);
				MatchRange('\uFF10','\uFF19'); if (state.failed) return;

				}
				break;
			case 375:
				DebugEnterAlt(375);
				// Java6ColorizerLexer.g:1150:9: '\\uff21' .. '\\uff3a'
				{
				DebugLocation(1150, 9);
				MatchRange('\uFF21','\uFF3A'); if (state.failed) return;

				}
				break;
			case 376:
				DebugEnterAlt(376);
				// Java6ColorizerLexer.g:1151:9: '\\uff3f'
				{
				DebugLocation(1151, 9);
				Match('\uFF3F'); if (state.failed) return;

				}
				break;
			case 377:
				DebugEnterAlt(377);
				// Java6ColorizerLexer.g:1152:9: '\\uff41' .. '\\uff5a'
				{
				DebugLocation(1152, 9);
				MatchRange('\uFF41','\uFF5A'); if (state.failed) return;

				}
				break;
			case 378:
				DebugEnterAlt(378);
				// Java6ColorizerLexer.g:1153:9: '\\uff65' .. '\\uffbe'
				{
				DebugLocation(1153, 9);
				MatchRange('\uFF65','\uFFBE'); if (state.failed) return;

				}
				break;
			case 379:
				DebugEnterAlt(379);
				// Java6ColorizerLexer.g:1154:9: '\\uffc2' .. '\\uffc7'
				{
				DebugLocation(1154, 9);
				MatchRange('\uFFC2','\uFFC7'); if (state.failed) return;

				}
				break;
			case 380:
				DebugEnterAlt(380);
				// Java6ColorizerLexer.g:1155:9: '\\uffca' .. '\\uffcf'
				{
				DebugLocation(1155, 9);
				MatchRange('\uFFCA','\uFFCF'); if (state.failed) return;

				}
				break;
			case 381:
				DebugEnterAlt(381);
				// Java6ColorizerLexer.g:1156:9: '\\uffd2' .. '\\uffd7'
				{
				DebugLocation(1156, 9);
				MatchRange('\uFFD2','\uFFD7'); if (state.failed) return;

				}
				break;
			case 382:
				DebugEnterAlt(382);
				// Java6ColorizerLexer.g:1157:9: '\\uffda' .. '\\uffdc'
				{
				DebugLocation(1157, 9);
				MatchRange('\uFFDA','\uFFDC'); if (state.failed) return;

				}
				break;
			case 383:
				DebugEnterAlt(383);
				// Java6ColorizerLexer.g:1158:9: '\\uffe0' .. '\\uffe1'
				{
				DebugLocation(1158, 9);
				MatchRange('\uFFE0','\uFFE1'); if (state.failed) return;

				}
				break;
			case 384:
				DebugEnterAlt(384);
				// Java6ColorizerLexer.g:1159:9: '\\uffe5' .. '\\uffe6'
				{
				DebugLocation(1159, 9);
				MatchRange('\uFFE5','\uFFE6'); if (state.failed) return;

				}
				break;
			case 385:
				DebugEnterAlt(385);
				// Java6ColorizerLexer.g:1160:9: '\\ufff9' .. '\\ufffb'
				{
				DebugLocation(1160, 9);
				MatchRange('\uFFF9','\uFFFB'); if (state.failed) return;

				}
				break;
			case 386:
				DebugEnterAlt(386);
				// Java6ColorizerLexer.g:1161:9: ( '\\ud800' .. '\\udbff' ) ( '\\udc00' .. '\\udfff' )
				{
				DebugLocation(1161, 9);
				input.Consume();
				state.failed=false;
				DebugLocation(1161, 30);
				input.Consume();
				state.failed=false;

				}
				break;

			}
		}
		finally
		{
			TraceOut("IdentifierPart", 64);
			LeaveRule("IdentifierPart", 64);
			LeaveRule_IdentifierPart();
		}
	}
	// $ANTLR end "IdentifierPart"

	partial void EnterRule_ANYCHAR();
	partial void LeaveRule_ANYCHAR();

	// $ANTLR start "ANYCHAR"
	[GrammarRule("ANYCHAR")]
	private void mANYCHAR()
	{
		EnterRule_ANYCHAR();
		EnterRule("ANYCHAR", 65);
		TraceIn("ANYCHAR", 65);
		try
		{
			int _type = ANYCHAR;
			int _channel = DefaultTokenChannel;
			// Java6ColorizerLexer.g:1165:5: ( . )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:1165:9: .
			{
			DebugLocation(1165, 9);
			MatchAny(); if (state.failed) return;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("ANYCHAR", 65);
			LeaveRule("ANYCHAR", 65);
			LeaveRule_ANYCHAR();
		}
	}
	// $ANTLR end "ANYCHAR"

	public override void mTokens()
	{
		// Java6ColorizerLexer.g:1:8: ( LONGLITERAL | INTLITERAL | FLOATLITERAL | DOUBLELITERAL | CHARLITERAL | STRINGLITERAL | NEWLINE | WS | END_BLOCK_COMMENT | BLOCK_COMMENT | LINE_COMMENT | LPAREN | RPAREN | LBRACE | RBRACE | LBRACKET | RBRACKET | SEMI | COMMA | DOT | ELLIPSIS | EQ | BANG | TILDE | QUES | COLON | EQEQ | AMPAMP | BARBAR | PLUSPLUS | SUBSUB | PLUS | SUB | STAR | SLASH | AMP | BAR | CARET | PERCENT | PLUSEQ | SUBEQ | STAREQ | SLASHEQ | AMPEQ | BAREQ | CARETEQ | PERCENTEQ | MONKEYS_AT | BANGEQ | GT | LT | IDENTIFIER | ANYCHAR )
		int alt35=53;
		try { DebugEnterDecision(35, false);
		try
		{
			alt35 = dfa35.Predict(input);
		}
		catch (NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
			throw;
		}
		} finally { DebugExitDecision(35); }
		switch (alt35)
		{
		case 1:
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:1:10: LONGLITERAL
			{
			DebugLocation(1, 10);
			mLONGLITERAL(); if (state.failed) return;

			}
			break;
		case 2:
			DebugEnterAlt(2);
			// Java6ColorizerLexer.g:1:22: INTLITERAL
			{
			DebugLocation(1, 22);
			mINTLITERAL(); if (state.failed) return;

			}
			break;
		case 3:
			DebugEnterAlt(3);
			// Java6ColorizerLexer.g:1:33: FLOATLITERAL
			{
			DebugLocation(1, 33);
			mFLOATLITERAL(); if (state.failed) return;

			}
			break;
		case 4:
			DebugEnterAlt(4);
			// Java6ColorizerLexer.g:1:46: DOUBLELITERAL
			{
			DebugLocation(1, 46);
			mDOUBLELITERAL(); if (state.failed) return;

			}
			break;
		case 5:
			DebugEnterAlt(5);
			// Java6ColorizerLexer.g:1:60: CHARLITERAL
			{
			DebugLocation(1, 60);
			mCHARLITERAL(); if (state.failed) return;

			}
			break;
		case 6:
			DebugEnterAlt(6);
			// Java6ColorizerLexer.g:1:72: STRINGLITERAL
			{
			DebugLocation(1, 72);
			mSTRINGLITERAL(); if (state.failed) return;

			}
			break;
		case 7:
			DebugEnterAlt(7);
			// Java6ColorizerLexer.g:1:86: NEWLINE
			{
			DebugLocation(1, 86);
			mNEWLINE(); if (state.failed) return;

			}
			break;
		case 8:
			DebugEnterAlt(8);
			// Java6ColorizerLexer.g:1:94: WS
			{
			DebugLocation(1, 94);
			mWS(); if (state.failed) return;

			}
			break;
		case 9:
			DebugEnterAlt(9);
			// Java6ColorizerLexer.g:1:97: END_BLOCK_COMMENT
			{
			DebugLocation(1, 97);
			mEND_BLOCK_COMMENT(); if (state.failed) return;

			}
			break;
		case 10:
			DebugEnterAlt(10);
			// Java6ColorizerLexer.g:1:115: BLOCK_COMMENT
			{
			DebugLocation(1, 115);
			mBLOCK_COMMENT(); if (state.failed) return;

			}
			break;
		case 11:
			DebugEnterAlt(11);
			// Java6ColorizerLexer.g:1:129: LINE_COMMENT
			{
			DebugLocation(1, 129);
			mLINE_COMMENT(); if (state.failed) return;

			}
			break;
		case 12:
			DebugEnterAlt(12);
			// Java6ColorizerLexer.g:1:142: LPAREN
			{
			DebugLocation(1, 142);
			mLPAREN(); if (state.failed) return;

			}
			break;
		case 13:
			DebugEnterAlt(13);
			// Java6ColorizerLexer.g:1:149: RPAREN
			{
			DebugLocation(1, 149);
			mRPAREN(); if (state.failed) return;

			}
			break;
		case 14:
			DebugEnterAlt(14);
			// Java6ColorizerLexer.g:1:156: LBRACE
			{
			DebugLocation(1, 156);
			mLBRACE(); if (state.failed) return;

			}
			break;
		case 15:
			DebugEnterAlt(15);
			// Java6ColorizerLexer.g:1:163: RBRACE
			{
			DebugLocation(1, 163);
			mRBRACE(); if (state.failed) return;

			}
			break;
		case 16:
			DebugEnterAlt(16);
			// Java6ColorizerLexer.g:1:170: LBRACKET
			{
			DebugLocation(1, 170);
			mLBRACKET(); if (state.failed) return;

			}
			break;
		case 17:
			DebugEnterAlt(17);
			// Java6ColorizerLexer.g:1:179: RBRACKET
			{
			DebugLocation(1, 179);
			mRBRACKET(); if (state.failed) return;

			}
			break;
		case 18:
			DebugEnterAlt(18);
			// Java6ColorizerLexer.g:1:188: SEMI
			{
			DebugLocation(1, 188);
			mSEMI(); if (state.failed) return;

			}
			break;
		case 19:
			DebugEnterAlt(19);
			// Java6ColorizerLexer.g:1:193: COMMA
			{
			DebugLocation(1, 193);
			mCOMMA(); if (state.failed) return;

			}
			break;
		case 20:
			DebugEnterAlt(20);
			// Java6ColorizerLexer.g:1:199: DOT
			{
			DebugLocation(1, 199);
			mDOT(); if (state.failed) return;

			}
			break;
		case 21:
			DebugEnterAlt(21);
			// Java6ColorizerLexer.g:1:203: ELLIPSIS
			{
			DebugLocation(1, 203);
			mELLIPSIS(); if (state.failed) return;

			}
			break;
		case 22:
			DebugEnterAlt(22);
			// Java6ColorizerLexer.g:1:212: EQ
			{
			DebugLocation(1, 212);
			mEQ(); if (state.failed) return;

			}
			break;
		case 23:
			DebugEnterAlt(23);
			// Java6ColorizerLexer.g:1:215: BANG
			{
			DebugLocation(1, 215);
			mBANG(); if (state.failed) return;

			}
			break;
		case 24:
			DebugEnterAlt(24);
			// Java6ColorizerLexer.g:1:220: TILDE
			{
			DebugLocation(1, 220);
			mTILDE(); if (state.failed) return;

			}
			break;
		case 25:
			DebugEnterAlt(25);
			// Java6ColorizerLexer.g:1:226: QUES
			{
			DebugLocation(1, 226);
			mQUES(); if (state.failed) return;

			}
			break;
		case 26:
			DebugEnterAlt(26);
			// Java6ColorizerLexer.g:1:231: COLON
			{
			DebugLocation(1, 231);
			mCOLON(); if (state.failed) return;

			}
			break;
		case 27:
			DebugEnterAlt(27);
			// Java6ColorizerLexer.g:1:237: EQEQ
			{
			DebugLocation(1, 237);
			mEQEQ(); if (state.failed) return;

			}
			break;
		case 28:
			DebugEnterAlt(28);
			// Java6ColorizerLexer.g:1:242: AMPAMP
			{
			DebugLocation(1, 242);
			mAMPAMP(); if (state.failed) return;

			}
			break;
		case 29:
			DebugEnterAlt(29);
			// Java6ColorizerLexer.g:1:249: BARBAR
			{
			DebugLocation(1, 249);
			mBARBAR(); if (state.failed) return;

			}
			break;
		case 30:
			DebugEnterAlt(30);
			// Java6ColorizerLexer.g:1:256: PLUSPLUS
			{
			DebugLocation(1, 256);
			mPLUSPLUS(); if (state.failed) return;

			}
			break;
		case 31:
			DebugEnterAlt(31);
			// Java6ColorizerLexer.g:1:265: SUBSUB
			{
			DebugLocation(1, 265);
			mSUBSUB(); if (state.failed) return;

			}
			break;
		case 32:
			DebugEnterAlt(32);
			// Java6ColorizerLexer.g:1:272: PLUS
			{
			DebugLocation(1, 272);
			mPLUS(); if (state.failed) return;

			}
			break;
		case 33:
			DebugEnterAlt(33);
			// Java6ColorizerLexer.g:1:277: SUB
			{
			DebugLocation(1, 277);
			mSUB(); if (state.failed) return;

			}
			break;
		case 34:
			DebugEnterAlt(34);
			// Java6ColorizerLexer.g:1:281: STAR
			{
			DebugLocation(1, 281);
			mSTAR(); if (state.failed) return;

			}
			break;
		case 35:
			DebugEnterAlt(35);
			// Java6ColorizerLexer.g:1:286: SLASH
			{
			DebugLocation(1, 286);
			mSLASH(); if (state.failed) return;

			}
			break;
		case 36:
			DebugEnterAlt(36);
			// Java6ColorizerLexer.g:1:292: AMP
			{
			DebugLocation(1, 292);
			mAMP(); if (state.failed) return;

			}
			break;
		case 37:
			DebugEnterAlt(37);
			// Java6ColorizerLexer.g:1:296: BAR
			{
			DebugLocation(1, 296);
			mBAR(); if (state.failed) return;

			}
			break;
		case 38:
			DebugEnterAlt(38);
			// Java6ColorizerLexer.g:1:300: CARET
			{
			DebugLocation(1, 300);
			mCARET(); if (state.failed) return;

			}
			break;
		case 39:
			DebugEnterAlt(39);
			// Java6ColorizerLexer.g:1:306: PERCENT
			{
			DebugLocation(1, 306);
			mPERCENT(); if (state.failed) return;

			}
			break;
		case 40:
			DebugEnterAlt(40);
			// Java6ColorizerLexer.g:1:314: PLUSEQ
			{
			DebugLocation(1, 314);
			mPLUSEQ(); if (state.failed) return;

			}
			break;
		case 41:
			DebugEnterAlt(41);
			// Java6ColorizerLexer.g:1:321: SUBEQ
			{
			DebugLocation(1, 321);
			mSUBEQ(); if (state.failed) return;

			}
			break;
		case 42:
			DebugEnterAlt(42);
			// Java6ColorizerLexer.g:1:327: STAREQ
			{
			DebugLocation(1, 327);
			mSTAREQ(); if (state.failed) return;

			}
			break;
		case 43:
			DebugEnterAlt(43);
			// Java6ColorizerLexer.g:1:334: SLASHEQ
			{
			DebugLocation(1, 334);
			mSLASHEQ(); if (state.failed) return;

			}
			break;
		case 44:
			DebugEnterAlt(44);
			// Java6ColorizerLexer.g:1:342: AMPEQ
			{
			DebugLocation(1, 342);
			mAMPEQ(); if (state.failed) return;

			}
			break;
		case 45:
			DebugEnterAlt(45);
			// Java6ColorizerLexer.g:1:348: BAREQ
			{
			DebugLocation(1, 348);
			mBAREQ(); if (state.failed) return;

			}
			break;
		case 46:
			DebugEnterAlt(46);
			// Java6ColorizerLexer.g:1:354: CARETEQ
			{
			DebugLocation(1, 354);
			mCARETEQ(); if (state.failed) return;

			}
			break;
		case 47:
			DebugEnterAlt(47);
			// Java6ColorizerLexer.g:1:362: PERCENTEQ
			{
			DebugLocation(1, 362);
			mPERCENTEQ(); if (state.failed) return;

			}
			break;
		case 48:
			DebugEnterAlt(48);
			// Java6ColorizerLexer.g:1:372: MONKEYS_AT
			{
			DebugLocation(1, 372);
			mMONKEYS_AT(); if (state.failed) return;

			}
			break;
		case 49:
			DebugEnterAlt(49);
			// Java6ColorizerLexer.g:1:383: BANGEQ
			{
			DebugLocation(1, 383);
			mBANGEQ(); if (state.failed) return;

			}
			break;
		case 50:
			DebugEnterAlt(50);
			// Java6ColorizerLexer.g:1:390: GT
			{
			DebugLocation(1, 390);
			mGT(); if (state.failed) return;

			}
			break;
		case 51:
			DebugEnterAlt(51);
			// Java6ColorizerLexer.g:1:393: LT
			{
			DebugLocation(1, 393);
			mLT(); if (state.failed) return;

			}
			break;
		case 52:
			DebugEnterAlt(52);
			// Java6ColorizerLexer.g:1:396: IDENTIFIER
			{
			DebugLocation(1, 396);
			mIDENTIFIER(); if (state.failed) return;

			}
			break;
		case 53:
			DebugEnterAlt(53);
			// Java6ColorizerLexer.g:1:407: ANYCHAR
			{
			DebugLocation(1, 407);
			mANYCHAR(); if (state.failed) return;

			}
			break;

		}

	}

	partial void EnterRule_synpred1_Java6ColorizerLexer_fragment();
	partial void LeaveRule_synpred1_Java6ColorizerLexer_fragment();

	// $ANTLR start synpred1_Java6ColorizerLexer
	public void synpred1_Java6ColorizerLexer_fragment()
	{
		EnterRule_synpred1_Java6ColorizerLexer_fragment();
		EnterRule("synpred1_Java6ColorizerLexer_fragment", 67);
		TraceIn("synpred1_Java6ColorizerLexer_fragment", 67);
		try
		{
			// Java6ColorizerLexer.g:291:17: ( '*' ~ '/' )
			DebugEnterAlt(1);
			// Java6ColorizerLexer.g:291:18: '*' ~ '/'
			{
			DebugLocation(291, 18);
			Match('*'); if (state.failed) return;
			DebugLocation(291, 22);
			if ((input.LA(1)>='\u0000' && input.LA(1)<='.')||(input.LA(1)>='0' && input.LA(1)<='\uFFFF'))
			{
				input.Consume();
			state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}


			}

		}
		finally
		{
			TraceOut("synpred1_Java6ColorizerLexer_fragment", 67);
			LeaveRule("synpred1_Java6ColorizerLexer_fragment", 67);
			LeaveRule_synpred1_Java6ColorizerLexer_fragment();
		}
	}
	// $ANTLR end synpred1_Java6ColorizerLexer

	#region Synpreds
	private bool EvaluatePredicate(System.Action fragment)
	{
		bool success = false;
		state.backtracking++;
		try { DebugBeginBacktrack(state.backtracking);
		int start = input.Mark();
		try
		{
			fragment();
		}
		catch ( RecognitionException re )
		{
			System.Console.Error.WriteLine("impossible: "+re);
		}
		success = !state.failed;
		input.Rewind(start);
		} finally { DebugEndBacktrack(state.backtracking, success); }
		state.backtracking--;
		state.failed=false;
		return success;
	}
	#endregion Synpreds


	#region DFA
	DFA18 dfa18;
	DFA31 dfa31;
	DFA35 dfa35;

	protected override void InitDFAs()
	{
		base.InitDFAs();
		dfa18 = new DFA18(this);
		dfa31 = new DFA31(this, SpecialStateTransition31);
		dfa35 = new DFA35(this, SpecialStateTransition35);
	}

	private class DFA18 : DFA
	{
		private const string DFA18_eotS =
			"\x1\xFFFF\x1\x7\x1\xFFFF\x1\x7\x4\xFFFF";
		private const string DFA18_eofS =
			"\x8\xFFFF";
		private const string DFA18_minS =
			"\x2\x2E\x1\xFFFF\x1\x2E\x4\xFFFF";
		private const string DFA18_maxS =
			"\x1\x39\x1\x78\x1\xFFFF\x1\x65\x4\xFFFF";
		private const string DFA18_acceptS =
			"\x2\xFFFF\x1\x2\x1\xFFFF\x1\x5\x1\x1\x1\x3\x1\x4";
		private const string DFA18_specialS =
			"\x8\xFFFF}>";
		private static readonly string[] DFA18_transitionS =
			{
				"\x1\x2\x1\xFFFF\x1\x1\x9\x3",
				"\x1\x5\x1\xFFFF\xA\x3\xB\xFFFF\x1\x6\x12\xFFFF\x1\x4\xC\xFFFF\x1\x6"+
				"\x12\xFFFF\x1\x4",
				"",
				"\x1\x5\x1\xFFFF\xA\x3\xB\xFFFF\x1\x6\x1F\xFFFF\x1\x6",
				"",
				"",
				"",
				""
			};

		private static readonly short[] DFA18_eot = DFA.UnpackEncodedString(DFA18_eotS);
		private static readonly short[] DFA18_eof = DFA.UnpackEncodedString(DFA18_eofS);
		private static readonly char[] DFA18_min = DFA.UnpackEncodedStringToUnsignedChars(DFA18_minS);
		private static readonly char[] DFA18_max = DFA.UnpackEncodedStringToUnsignedChars(DFA18_maxS);
		private static readonly short[] DFA18_accept = DFA.UnpackEncodedString(DFA18_acceptS);
		private static readonly short[] DFA18_special = DFA.UnpackEncodedString(DFA18_specialS);
		private static readonly short[][] DFA18_transition;

		static DFA18()
		{
			int numStates = DFA18_transitionS.Length;
			DFA18_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA18_transition[i] = DFA.UnpackEncodedString(DFA18_transitionS[i]);
			}
		}

		public DFA18( BaseRecognizer recognizer )
		{
			this.recognizer = recognizer;
			this.decisionNumber = 18;
			this.eot = DFA18_eot;
			this.eof = DFA18_eof;
			this.min = DFA18_min;
			this.max = DFA18_max;
			this.accept = DFA18_accept;
			this.special = DFA18_special;
			this.transition = DFA18_transition;
		}

		public override string Description { get { return "187:1: fragment NonIntegerNumber : ( ( '0' .. '9' )+ '.' ( '0' .. '9' )* ( Exponent )? | '.' ( '0' .. '9' )+ ( Exponent )? | ( '0' .. '9' )+ Exponent | ( '0' .. '9' )+ | HexPrefix ( HexDigit )* ( () | ( '.' ( HexDigit )* ) ) ( 'p' | 'P' ) ( '+' | '-' )? ( '0' .. '9' )+ );"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private class DFA31 : DFA
	{
		private const string DFA31_eotS =
			"\x2\xFFFF\x2\x5\x2\xFFFF";
		private const string DFA31_eofS =
			"\x6\xFFFF";
		private const string DFA31_minS =
			"\x2\x2F\x2\x0\x2\xFFFF";
		private const string DFA31_maxS =
			"\x2\x2F\x2\xFFFF\x2\xFFFF";
		private const string DFA31_acceptS =
			"\x4\xFFFF\x1\x1\x1\x2";
		private const string DFA31_specialS =
			"\x2\xFFFF\x1\x0\x1\x1\x2\xFFFF}>";
		private static readonly string[] DFA31_transitionS =
			{
				"\x1\x1",
				"\x1\x2",
				"\xA\x3\x1\x4\x2\x3\x1\x4\xFFF2\x3",
				"\xA\x3\x1\x4\x2\x3\x1\x4\xFFF2\x3",
				"",
				""
			};

		private static readonly short[] DFA31_eot = DFA.UnpackEncodedString(DFA31_eotS);
		private static readonly short[] DFA31_eof = DFA.UnpackEncodedString(DFA31_eofS);
		private static readonly char[] DFA31_min = DFA.UnpackEncodedStringToUnsignedChars(DFA31_minS);
		private static readonly char[] DFA31_max = DFA.UnpackEncodedStringToUnsignedChars(DFA31_maxS);
		private static readonly short[] DFA31_accept = DFA.UnpackEncodedString(DFA31_acceptS);
		private static readonly short[] DFA31_special = DFA.UnpackEncodedString(DFA31_specialS);
		private static readonly short[][] DFA31_transition;

		static DFA31()
		{
			int numStates = DFA31_transitionS.Length;
			DFA31_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA31_transition[i] = DFA.UnpackEncodedString(DFA31_transitionS[i]);
			}
		}

		public DFA31( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 31;
			this.eot = DFA31_eot;
			this.eof = DFA31_eof;
			this.min = DFA31_min;
			this.max = DFA31_max;
			this.accept = DFA31_accept;
			this.special = DFA31_special;
			this.transition = DFA31_transition;
		}

		public override string Description { get { return "296:1: LINE_COMMENT : ( '//' (~ ( '\\n' | '\\r' ) )* ( '\\r\\n' | '\\r' | '\\n' ) | '//' (~ ( '\\n' | '\\r' ) )* );"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition31(DFA dfa, int s, IIntStream _input)
	{
		IIntStream input = _input;
		int _s = s;
		s = -1;
		int LA31_1 = input.LA(1);
		int index31_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				if (((LA31_1>='\u0000' && LA31_1<='\t')||(LA31_1>='\u000B' && LA31_1<='\f')||(LA31_1>='\u000E' && LA31_1<='\uFFFF'))) {s = 3;}

				else if ((LA31_1=='\n'||LA31_1=='\r')) {s = 4;}

				else s = 5;

				break;
			}
		case 1:
			{
				if ((LA31_1=='\n'||LA31_1=='\r')) {s = 4;}

				else if (((LA31_1>='\u0000' && LA31_1<='\t')||(LA31_1>='\u000B' && LA31_1<='\f')||(LA31_1>='\u000E' && LA31_1<='\uFFFF'))) {s = 3;}

				else s = 5;

				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 31, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA35 : DFA
	{
		private const string DFA35_eotS =
			"\x1\xFFFF\x2\x14A\x1\x155\x2\x147\x3\xFFFF\x1\x15C\x1\x160\x8\xFFFF\x1"+
			"\x16A\x1\x16C\x3\xFFFF\x1\x172\x1\x175\x1\x178\x1\x17B\x1\x17D\x1\x17F"+
			"\x128\xFFFF\x1\x147\x5\xFFFF\x1\x14A\x2\x151\x3\xFFFF\x1\x14A\x1\xFFFF"+
			"\x1\x151\x2F\xFFFF\x1\x14A\x2\xFFFF\x1\x151\x2\xFFFF\x1\x151\x2\xFFFF"+
			"\x1\x151\x2\xFFFF\x1\x151\x1\xFFFF\x1\x151";
		private const string DFA35_eofS =
			"\x193\xFFFF";
		private const string DFA35_minS =
			"\x1\x0\x3\x2E\x2\x0\x3\xFFFF\x1\x2F\x1\x2A\x8\xFFFF\x2\x3D\x3\xFFFF\x1"+
			"\x26\x1\x3D\x1\x2B\x1\x2D\x2\x3D\x128\xFFFF\x1\xDC00\x1\xFFFF\x2\x2E"+
			"\x2\xFFFF\x1\x2E\x1\x30\x1\x2E\x1\x2B\x2\xFFFF\x1\x2E\x1\xFFFF\x1\x30"+
			"\x2F\xFFFF\x1\x2E\x1\x2B\x2\x30\x1\x2B\x2\x30\x1\x2B\x7\x30";
		private const string DFA35_maxS =
			"\x1\xFFFF\x1\x78\x1\x6C\x1\x39\x2\xFFFF\x3\xFFFF\x2\x3D\x8\xFFFF\x2\x3D"+
			"\x3\xFFFF\x1\x3D\x1\x7C\x4\x3D\x128\xFFFF\x1\xDFFF\x1\xFFFF\x2\x70\x2"+
			"\xFFFF\x1\x6C\x2\x66\x1\x39\x2\xFFFF\x1\x6C\x1\xFFFF\x1\x66\x2F\xFFFF"+
			"\x1\x70\x1\x39\x1\x70\x1\x66\x2\x39\x1\x66\x2\x39\x1\x66\x1\x70\x1\x39"+
			"\x1\x66\x1\x39\x1\x66";
		private const string DFA35_acceptS =
			"\x6\xFFFF\x2\x7\x1\x8\x2\xFFFF\x1\xC\x1\xD\x1\xE\x1\xF\x1\x10\x1\x11"+
			"\x1\x12\x1\x13\x2\xFFFF\x1\x18\x1\x19\x1\x1A\x6\xFFFF\x1\x30\x1\x32\x1"+
			"\x33\x125\x34\x1\xFFFF\x1\x35\x2\xFFFF\x1\x2\x1\x1\x4\xFFFF\x1\x3\x1"+
			"\x4\x1\xFFFF\x1\x15\x1\xFFFF\x1\x14\x1\x5\x1\x6\x1\x7\x1\x8\x1\x9\x1"+
			"\x2A\x1\x22\x1\xA\x1\xB\x1\x2B\x1\x23\x1\xC\x1\xD\x1\xE\x1\xF\x1\x10"+
			"\x1\x11\x1\x12\x1\x13\x1\x1B\x1\x16\x1\x31\x1\x17\x1\x18\x1\x19\x1\x1A"+
			"\x1\x1C\x1\x2C\x1\x24\x1\x1D\x1\x2D\x1\x25\x1\x1E\x1\x28\x1\x20\x1\x1F"+
			"\x1\x29\x1\x21\x1\x2E\x1\x26\x1\x2F\x1\x27\x1\x30\x1\x32\x1\x33\x1\x34"+
			"\xF\xFFFF";
		private const string DFA35_specialS =
			"\x1\x0\x3\xFFFF\x1\x1\x1\x2\x18D\xFFFF}>";
		private static readonly string[] DFA35_transitionS =
			{
				"\x9\x147\x1\x8\x1\x7\x1\x147\x1\x8\x1\x6\x12\x147\x1\x8\x1\x14\x1\x5"+
				"\x1\x147\x1\x21\x1\x1D\x1\x18\x1\x4\x1\xB\x1\xC\x1\x9\x1\x1A\x1\x12"+
				"\x1\x1B\x1\x3\x1\xA\x1\x1\x9\x2\x1\x17\x1\x11\x1\x20\x1\x13\x1\x1F\x1"+
				"\x16\x1\x1E\x1A\x22\x1\xF\x1\x147\x1\x10\x1\x1C\x1\x23\x1\x147\x1A\x24"+
				"\x1\xD\x1\x19\x1\xE\x1\x15\x23\x147\x4\x25\x4\x147\x1\x26\xA\x147\x1"+
				"\x27\x4\x147\x1\x28\x5\x147\x17\x29\x1\x147\x1F\x2A\x1\x147\x13F\x2B"+
				"\x19\x147\x72\x2C\x4\x147\xC\x2D\xE\x147\x5\x2E\x9\x147\x1\x2F\x8B\x147"+
				"\x1\x30\xB\x147\x1\x31\x1\x147\x3\x32\x1\x147\x1\x33\x1\x147\x14\x34"+
				"\x1\x147\x2C\x35\x1\x147\x26\x36\x1\x147\x5\x37\x4\x147\x82\x38\x8\x147"+
				"\x45\x39\x1\x147\x26\x3A\x2\x147\x2\x3B\x6\x147\x10\x3C\x21\x147\x26"+
				"\x3D\x2\x147\x1\x3E\x7\x147\x27\x3F\x48\x147\x1B\x40\x5\x147\x3\x41"+
				"\x2E\x147\x1A\x42\x5\x147\xB\x43\x23\x147\x2\x44\x1\x147\x63\x45\x1"+
				"\x147\x1\x46\xF\x147\x2\x47\x7\x147\x2\x48\xA\x147\x3\x49\x2\x147\x1"+
				"\x4A\x10\x147\x1\x4B\x1\x147\x1E\x4C\x1D\x147\x3\x4D\x30\x147\x26\x4E"+
				"\xB\x147\x1\x4F\x152\x147\x36\x50\x3\x147\x1\x51\x12\x147\x1\x52\x7"+
				"\x147\xA\x53\x23\x147\x8\x54\x2\x147\x2\x55\x2\x147\x16\x56\x1\x147"+
				"\x7\x57\x1\x147\x1\x58\x3\x147\x4\x59\x3\x147\x1\x5A\x1E\x147\x2\x5B"+
				"\x1\x147\x3\x5C\xE\x147\x4\x5D\x11\x147\x6\x5E\x4\x147\x2\x5F\x2\x147"+
				"\x16\x60\x1\x147\x7\x61\x1\x147\x2\x62\x1\x147\x2\x63\x1\x147\x2\x64"+
				"\x1F\x147\x4\x65\x1\x147\x1\x66\x13\x147\x3\x67\x10\x147\x9\x68\x1\x147"+
				"\x3\x69\x1\x147\x16\x6A\x1\x147\x7\x6B\x1\x147\x2\x6C\x1\x147\x5\x6D"+
				"\x3\x147\x1\x6E\x12\x147\x1\x6F\xF\x147\x2\x70\xF\x147\x1\x71\x13\x147"+
				"\x8\x72\x2\x147\x2\x73\x2\x147\x16\x74\x1\x147\x7\x75\x1\x147\x2\x76"+
				"\x1\x147\x5\x77\x3\x147\x1\x78\x1E\x147\x2\x79\x1\x147\x3\x7A\xF\x147"+
				"\x1\x7B\x11\x147\x1\x7C\x1\x147\x6\x7D\x3\x147\x3\x7E\x1\x147\x4\x7F"+
				"\x3\x147\x2\x80\x1\x147\x1\x81\x1\x147\x2\x82\x3\x147\x2\x83\x3\x147"+
				"\x3\x84\x3\x147\x8\x85\x1\x147\x3\x86\x3F\x147\x1\x87\xB\x147\x8\x88"+
				"\x1\x147\x3\x89\x1\x147\x17\x8A\x1\x147\xA\x8B\x1\x147\x5\x8C\x26\x147"+
				"\x2\x8D\x23\x147\x8\x8E\x1\x147\x3\x8F\x1\x147\x17\x90\x1\x147\xA\x91"+
				"\x1\x147\x5\x92\x3\x147\x1\x93\x20\x147\x1\x94\x1\x147\x2\x95\x23\x147"+
				"\x8\x96\x1\x147\x3\x97\x1\x147\x17\x98\x1\x147\x10\x99\x26\x147\x2\x9A"+
				"\x23\x147\x12\x9B\x3\x147\x18\x9C\x1\x147\x9\x9D\x1\x147\x1\x9E\x2\x147"+
				"\x7\x9F\x3A\x147\x30\xA0\x1\x147\x2\xA1\xB\x147\x8\xA2\x3A\x147\x2\xA3"+
				"\x1\x147\x1\xA4\x2\x147\x2\xA5\x1\x147\x1\xA6\x2\x147\x1\xA7\x6\x147"+
				"\x4\xA8\x1\x147\x7\xA9\x1\x147\x3\xAA\x1\x147\x1\xAB\x1\x147\x1\xAC"+
				"\x2\x147\x2\xAD\x1\x147\x4\xAE\x1\x147\x2\xAF\x9\x147\x1\xB0\x2\x147"+
				"\x5\xB1\x1\x147\x1\xB2\x15\x147\x2\xB3\x22\x147\x1\xB4\x3F\x147\x8\xB5"+
				"\x1\x147\x22\xB6\x1D\x147\x4\xB7\x74\x147\x22\xB8\x1\x147\x5\xB9\x1"+
				"\x147\x2\xBA\x25\x147\x6\xBB\x4A\x147\x26\xBC\xA\x147\x29\xBD\x7\x147"+
				"\x5A\xBE\x5\x147\x44\xBF\x5\x147\x52\xC0\x6\x147\x7\xC1\x1\x147\x3F"+
				"\xC2\x1\x147\x1\xC3\x1\x147\x4\xC4\x2\x147\x7\xC5\x1\x147\x1\xC6\x1"+
				"\x147\x4\xC7\x2\x147\x27\xC8\x1\x147\x1\xC9\x1\x147\x4\xCA\x2\x147\x1F"+
				"\xCB\x1\x147\x1\xCC\x1\x147\x4\xCD\x2\x147\x7\xCE\x1\x147\x1\xCF\x1"+
				"\x147\x4\xD0\x2\x147\x7\xD1\x1\x147\x7\xD2\x1\x147\x17\xD3\x1\x147\x1F"+
				"\xD4\x1\x147\x1\xD5\x1\x147\x4\xD6\x2\x147\x7\xD7\x1\x147\x27\xD8\x1"+
				"\x147\x13\xD9\x45\x147\x55\xDA\xC\x147\x26C\xDB\x2\x147\x8\xDC\xA\x147"+
				"\x1A\xDD\x5\x147\x4B\xDE\x3\x147\x3\xDF\xF\x147\xD\xE0\x1\x147\x4\xE1"+
				"\xE\x147\x12\xE2\xE\x147\x12\xE3\xE\x147\xD\xE4\x1\x147\x3\xE5\xF\x147"+
				"\x34\xE6\x23\x147\x1\xE7\x3\x147\x2\xE8\x43\x147\x58\xE9\x8\x147\x29"+
				"\xEA\x57\x147\x1D\xEB\x33\x147\x1E\xEC\x2\x147\x5\xED\x38B\x147\x6C"+
				"\xEE\x94\x147\x9C\xEF\x4\x147\x5A\xF0\x6\x147\x16\xF1\x2\x147\x6\xF2"+
				"\x2\x147\x26\xF3\x2\x147\x6\xF4\x2\x147\x8\xF5\x1\x147\x1\xF6\x1\x147"+
				"\x1\xF7\x1\x147\x1\xF8\x1\x147\x1F\xF9\x2\x147\x35\xFA\x1\x147\x7\xFB"+
				"\x1\x147\x1\xFC\x3\x147\x3\xFD\x1\x147\x7\xFE\x3\x147\x4\xFF\x2\x147"+
				"\x6\x100\x4\x147\xD\x101\x5\x147\x3\x102\x1\x147\x7\x103\x42\x147\x2"+
				"\x104\x13\x147\x1\x105\x1C\x147\x1\x106\xD\x147\x1\x107\x20\x147\x12"+
				"\x108\x50\x147\x1\x109\x4\x147\x1\x10A\x2\x147\xA\x10B\x1\x147\x1\x10C"+
				"\x3\x147\x5\x10D\x6\x147\x1\x10E\x1\x147\x1\x10F\x1\x147\x1\x110\x1"+
				"\x147\x4\x111\x1\x147\x3\x112\x1\x147\x7\x113\x3\x147\x3\x114\x5\x147"+
				"\x5\x115\x16\x147\x24\x116\xE81\x147\x3\x117\x19\x147\x9\x118\x7\x147"+
				"\x5\x119\x2\x147\x5\x11A\x4\x147\x56\x11B\x6\x147\x3\x11C\x1\x147\x5F"+
				"\x11D\x5\x147\x28\x11E\x4\x147\x5E\x11F\x11\x147\x18\x120\x38\x147\x10"+
				"\x121\x200\x147\x19B6\x122\x4A\x147\x51A6\x123\x5A\x147\x48D\x124\x773"+
				"\x147\x2BA4\x125\x5C\x147\x400\x146\x1D00\x147\x12E\x126\x2\x147\x3B"+
				"\x127\x95\x147\x7\x128\xC\x147\x5\x129\x5\x147\x1\x12A\x1\x147\xA\x12B"+
				"\x1\x147\xD\x12C\x1\x147\x5\x12D\x1\x147\x1\x12E\x1\x147\x2\x12F\x1"+
				"\x147\x2\x130\x1\x147\x6C\x131\x21\x147\x16B\x132\x12\x147\x40\x133"+
				"\x2\x147\x36\x134\x28\x147\xD\x135\x36\x147\x2\x136\x18\x147\x3\x137"+
				"\x19\x147\x1\x138\x6\x147\x5\x139\x1\x147\x87\x13A\x7\x147\x1\x13B\x1C"+
				"\x147\x1A\x13C\x4\x147\x1\x13D\x1\x147\x1A\x13E\xA\x147\x5A\x13F\x3"+
				"\x147\x6\x140\x2\x147\x6\x141\x2\x147\x6\x142\x2\x147\x3\x143\x3\x147"+
				"\x2\x144\x3\x147\x2\x145\x19\x147",
				"\x1\x14D\x1\xFFFF\x8\x14C\x2\x14E\xA\xFFFF\x1\x151\x1\x14F\x1\x150\x5"+
				"\xFFFF\x1\x14B\xB\xFFFF\x1\x149\xB\xFFFF\x1\x151\x1\x14F\x1\x150\x5"+
				"\xFFFF\x1\x14B\xB\xFFFF\x1\x148",
				"\x1\x14D\x1\xFFFF\xA\x152\xA\xFFFF\x1\x151\x1\x14F\x1\x150\x5\xFFFF"+
				"\x1\x14B\x17\xFFFF\x1\x151\x1\x14F\x1\x150\x5\xFFFF\x1\x14B",
				"\x1\x153\x1\xFFFF\xA\x154",
				"\xA\x156\x1\xFFFF\x2\x156\x1\xFFFF\x19\x156\x1\xFFFF\xFFD8\x156",
				"\xA\x157\x1\xFFFF\x2\x157\x1\xFFFF\xFFF2\x157",
				"",
				"",
				"",
				"\x1\x15A\xD\xFFFF\x1\x15B",
				"\x1\x15D\x4\xFFFF\x1\x15E\xD\xFFFF\x1\x15F",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\x169",
				"\x1\x16B",
				"",
				"",
				"",
				"\x1\x170\x16\xFFFF\x1\x171",
				"\x1\x174\x3E\xFFFF\x1\x173",
				"\x1\x176\x11\xFFFF\x1\x177",
				"\x1\x179\xF\xFFFF\x1\x17A",
				"\x1\x17C",
				"\x1\x17E",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x400\x183",
				"",
				"\x1\x186\x1\xFFFF\xA\x184\x7\xFFFF\x6\x184\x9\xFFFF\x1\x185\x10\xFFFF"+
				"\x6\x184\x9\xFFFF\x1\x185",
				"\x1\x186\x1\xFFFF\xA\x184\x7\xFFFF\x6\x184\x9\xFFFF\x1\x185\x10\xFFFF"+
				"\x6\x184\x9\xFFFF\x1\x185",
				"",
				"",
				"\x1\x14D\x1\xFFFF\x8\x14C\x2\x14E\xA\xFFFF\x1\x151\x1\x14F\x1\x150\x5"+
				"\xFFFF\x1\x14B\x17\xFFFF\x1\x151\x1\x14F\x1\x150\x5\xFFFF\x1\x14B",
				"\xA\x187\xB\xFFFF\x1\x188\x1\x150\x1E\xFFFF\x1\x188\x1\x150",
				"\x1\x14D\x1\xFFFF\xA\x14E\xB\xFFFF\x1\x14F\x1\x150\x1E\xFFFF\x1\x14F"+
				"\x1\x150",
				"\x1\x189\x1\xFFFF\x1\x189\x2\xFFFF\xA\x18A",
				"",
				"",
				"\x1\x14D\x1\xFFFF\xA\x152\xA\xFFFF\x1\x151\x1\x14F\x1\x150\x5\xFFFF"+
				"\x1\x14B\x17\xFFFF\x1\x151\x1\x14F\x1\x150\x5\xFFFF\x1\x14B",
				"",
				"\xA\x154\xB\xFFFF\x1\x18B\x1\x150\x1E\xFFFF\x1\x18B\x1\x150",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\x186\x1\xFFFF\xA\x184\x7\xFFFF\x6\x184\x5\xFFFF\x1\x14B\x3\xFFFF"+
				"\x1\x185\x10\xFFFF\x6\x184\x5\xFFFF\x1\x14B\x3\xFFFF\x1\x185",
				"\x1\x18C\x1\xFFFF\x1\x18C\x2\xFFFF\xA\x18D",
				"\xA\x18E\x7\xFFFF\x6\x18E\x9\xFFFF\x1\x185\x10\xFFFF\x6\x18E\x9\xFFFF"+
				"\x1\x185",
				"\xA\x187\xB\xFFFF\x1\x188\x1\x150\x1E\xFFFF\x1\x188\x1\x150",
				"\x1\x18F\x1\xFFFF\x1\x18F\x2\xFFFF\xA\x190",
				"\xA\x18A",
				"\xA\x18A\xC\xFFFF\x1\x150\x1F\xFFFF\x1\x150",
				"\x1\x191\x1\xFFFF\x1\x191\x2\xFFFF\xA\x192",
				"\xA\x18D",
				"\xA\x18D\xC\xFFFF\x1\x150\x1F\xFFFF\x1\x150",
				"\xA\x18E\x7\xFFFF\x6\x18E\x9\xFFFF\x1\x185\x10\xFFFF\x6\x18E\x9\xFFFF"+
				"\x1\x185",
				"\xA\x190",
				"\xA\x190\xC\xFFFF\x1\x150\x1F\xFFFF\x1\x150",
				"\xA\x192",
				"\xA\x192\xC\xFFFF\x1\x150\x1F\xFFFF\x1\x150"
			};

		private static readonly short[] DFA35_eot = DFA.UnpackEncodedString(DFA35_eotS);
		private static readonly short[] DFA35_eof = DFA.UnpackEncodedString(DFA35_eofS);
		private static readonly char[] DFA35_min = DFA.UnpackEncodedStringToUnsignedChars(DFA35_minS);
		private static readonly char[] DFA35_max = DFA.UnpackEncodedStringToUnsignedChars(DFA35_maxS);
		private static readonly short[] DFA35_accept = DFA.UnpackEncodedString(DFA35_acceptS);
		private static readonly short[] DFA35_special = DFA.UnpackEncodedString(DFA35_specialS);
		private static readonly short[][] DFA35_transition;

		static DFA35()
		{
			int numStates = DFA35_transitionS.Length;
			DFA35_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA35_transition[i] = DFA.UnpackEncodedString(DFA35_transitionS[i]);
			}
		}

		public DFA35( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 35;
			this.eot = DFA35_eot;
			this.eof = DFA35_eof;
			this.min = DFA35_min;
			this.max = DFA35_max;
			this.accept = DFA35_accept;
			this.special = DFA35_special;
			this.transition = DFA35_transition;
		}

		public override string Description { get { return "1:1: Tokens : ( LONGLITERAL | INTLITERAL | FLOATLITERAL | DOUBLELITERAL | CHARLITERAL | STRINGLITERAL | NEWLINE | WS | END_BLOCK_COMMENT | BLOCK_COMMENT | LINE_COMMENT | LPAREN | RPAREN | LBRACE | RBRACE | LBRACKET | RBRACKET | SEMI | COMMA | DOT | ELLIPSIS | EQ | BANG | TILDE | QUES | COLON | EQEQ | AMPAMP | BARBAR | PLUSPLUS | SUBSUB | PLUS | SUB | STAR | SLASH | AMP | BAR | CARET | PERCENT | PLUSEQ | SUBEQ | STAREQ | SLASHEQ | AMPEQ | BAREQ | CARETEQ | PERCENTEQ | MONKEYS_AT | BANGEQ | GT | LT | IDENTIFIER | ANYCHAR );"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition35(DFA dfa, int s, IIntStream _input)
	{
		IIntStream input = _input;
		int _s = s;
		s = -1;
		int LA35_1 = input.LA(1);
		int index35_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				if ((LA35_1=='0')) {s = 1;}

				else if (((LA35_1>='1' && LA35_1<='9'))) {s = 2;}

				else if ((LA35_1=='.')) {s = 3;}

				else if ((LA35_1=='\'')) {s = 4;}

				else if ((LA35_1=='\"')) {s = 5;}

				else if ((LA35_1=='\r')) {s = 6;}

				else if ((LA35_1=='\n')) {s = 7;}

				else if ((LA35_1=='\t'||LA35_1=='\f'||LA35_1==' ')) {s = 8;}

				else if ((LA35_1=='*')) {s = 9;}

				else if ((LA35_1=='/')) {s = 10;}

				else if ((LA35_1=='(')) {s = 11;}

				else if ((LA35_1==')')) {s = 12;}

				else if ((LA35_1=='{')) {s = 13;}

				else if ((LA35_1=='}')) {s = 14;}

				else if ((LA35_1=='[')) {s = 15;}

				else if ((LA35_1==']')) {s = 16;}

				else if ((LA35_1==';')) {s = 17;}

				else if ((LA35_1==',')) {s = 18;}

				else if ((LA35_1=='=')) {s = 19;}

				else if ((LA35_1=='!')) {s = 20;}

				else if ((LA35_1=='~')) {s = 21;}

				else if ((LA35_1=='?')) {s = 22;}

				else if ((LA35_1==':')) {s = 23;}

				else if ((LA35_1=='&')) {s = 24;}

				else if ((LA35_1=='|')) {s = 25;}

				else if ((LA35_1=='+')) {s = 26;}

				else if ((LA35_1=='-')) {s = 27;}

				else if ((LA35_1=='^')) {s = 28;}

				else if ((LA35_1=='%')) {s = 29;}

				else if ((LA35_1=='@')) {s = 30;}

				else if ((LA35_1=='>')) {s = 31;}

				else if ((LA35_1=='<')) {s = 32;}

				else if ((LA35_1=='$')) {s = 33;}

				else if (((LA35_1>='A' && LA35_1<='Z'))) {s = 34;}

				else if ((LA35_1=='_')) {s = 35;}

				else if (((LA35_1>='a' && LA35_1<='z'))) {s = 36;}

				else if (((LA35_1>='\u00A2' && LA35_1<='\u00A5'))) {s = 37;}

				else if ((LA35_1=='\u00AA')) {s = 38;}

				else if ((LA35_1=='\u00B5')) {s = 39;}

				else if ((LA35_1=='\u00BA')) {s = 40;}

				else if (((LA35_1>='\u00C0' && LA35_1<='\u00D6'))) {s = 41;}

				else if (((LA35_1>='\u00D8' && LA35_1<='\u00F6'))) {s = 42;}

				else if (((LA35_1>='\u00F8' && LA35_1<='\u0236'))) {s = 43;}

				else if (((LA35_1>='\u0250' && LA35_1<='\u02C1'))) {s = 44;}

				else if (((LA35_1>='\u02C6' && LA35_1<='\u02D1'))) {s = 45;}

				else if (((LA35_1>='\u02E0' && LA35_1<='\u02E4'))) {s = 46;}

				else if ((LA35_1=='\u02EE')) {s = 47;}

				else if ((LA35_1=='\u037A')) {s = 48;}

				else if ((LA35_1=='\u0386')) {s = 49;}

				else if (((LA35_1>='\u0388' && LA35_1<='\u038A'))) {s = 50;}

				else if ((LA35_1=='\u038C')) {s = 51;}

				else if (((LA35_1>='\u038E' && LA35_1<='\u03A1'))) {s = 52;}

				else if (((LA35_1>='\u03A3' && LA35_1<='\u03CE'))) {s = 53;}

				else if (((LA35_1>='\u03D0' && LA35_1<='\u03F5'))) {s = 54;}

				else if (((LA35_1>='\u03F7' && LA35_1<='\u03FB'))) {s = 55;}

				else if (((LA35_1>='\u0400' && LA35_1<='\u0481'))) {s = 56;}

				else if (((LA35_1>='\u048A' && LA35_1<='\u04CE'))) {s = 57;}

				else if (((LA35_1>='\u04D0' && LA35_1<='\u04F5'))) {s = 58;}

				else if (((LA35_1>='\u04F8' && LA35_1<='\u04F9'))) {s = 59;}

				else if (((LA35_1>='\u0500' && LA35_1<='\u050F'))) {s = 60;}

				else if (((LA35_1>='\u0531' && LA35_1<='\u0556'))) {s = 61;}

				else if ((LA35_1=='\u0559')) {s = 62;}

				else if (((LA35_1>='\u0561' && LA35_1<='\u0587'))) {s = 63;}

				else if (((LA35_1>='\u05D0' && LA35_1<='\u05EA'))) {s = 64;}

				else if (((LA35_1>='\u05F0' && LA35_1<='\u05F2'))) {s = 65;}

				else if (((LA35_1>='\u0621' && LA35_1<='\u063A'))) {s = 66;}

				else if (((LA35_1>='\u0640' && LA35_1<='\u064A'))) {s = 67;}

				else if (((LA35_1>='\u066E' && LA35_1<='\u066F'))) {s = 68;}

				else if (((LA35_1>='\u0671' && LA35_1<='\u06D3'))) {s = 69;}

				else if ((LA35_1=='\u06D5')) {s = 70;}

				else if (((LA35_1>='\u06E5' && LA35_1<='\u06E6'))) {s = 71;}

				else if (((LA35_1>='\u06EE' && LA35_1<='\u06EF'))) {s = 72;}

				else if (((LA35_1>='\u06FA' && LA35_1<='\u06FC'))) {s = 73;}

				else if ((LA35_1=='\u06FF')) {s = 74;}

				else if ((LA35_1=='\u0710')) {s = 75;}

				else if (((LA35_1>='\u0712' && LA35_1<='\u072F'))) {s = 76;}

				else if (((LA35_1>='\u074D' && LA35_1<='\u074F'))) {s = 77;}

				else if (((LA35_1>='\u0780' && LA35_1<='\u07A5'))) {s = 78;}

				else if ((LA35_1=='\u07B1')) {s = 79;}

				else if (((LA35_1>='\u0904' && LA35_1<='\u0939'))) {s = 80;}

				else if ((LA35_1=='\u093D')) {s = 81;}

				else if ((LA35_1=='\u0950')) {s = 82;}

				else if (((LA35_1>='\u0958' && LA35_1<='\u0961'))) {s = 83;}

				else if (((LA35_1>='\u0985' && LA35_1<='\u098C'))) {s = 84;}

				else if (((LA35_1>='\u098F' && LA35_1<='\u0990'))) {s = 85;}

				else if (((LA35_1>='\u0993' && LA35_1<='\u09A8'))) {s = 86;}

				else if (((LA35_1>='\u09AA' && LA35_1<='\u09B0'))) {s = 87;}

				else if ((LA35_1=='\u09B2')) {s = 88;}

				else if (((LA35_1>='\u09B6' && LA35_1<='\u09B9'))) {s = 89;}

				else if ((LA35_1=='\u09BD')) {s = 90;}

				else if (((LA35_1>='\u09DC' && LA35_1<='\u09DD'))) {s = 91;}

				else if (((LA35_1>='\u09DF' && LA35_1<='\u09E1'))) {s = 92;}

				else if (((LA35_1>='\u09F0' && LA35_1<='\u09F3'))) {s = 93;}

				else if (((LA35_1>='\u0A05' && LA35_1<='\u0A0A'))) {s = 94;}

				else if (((LA35_1>='\u0A0F' && LA35_1<='\u0A10'))) {s = 95;}

				else if (((LA35_1>='\u0A13' && LA35_1<='\u0A28'))) {s = 96;}

				else if (((LA35_1>='\u0A2A' && LA35_1<='\u0A30'))) {s = 97;}

				else if (((LA35_1>='\u0A32' && LA35_1<='\u0A33'))) {s = 98;}

				else if (((LA35_1>='\u0A35' && LA35_1<='\u0A36'))) {s = 99;}

				else if (((LA35_1>='\u0A38' && LA35_1<='\u0A39'))) {s = 100;}

				else if (((LA35_1>='\u0A59' && LA35_1<='\u0A5C'))) {s = 101;}

				else if ((LA35_1=='\u0A5E')) {s = 102;}

				else if (((LA35_1>='\u0A72' && LA35_1<='\u0A74'))) {s = 103;}

				else if (((LA35_1>='\u0A85' && LA35_1<='\u0A8D'))) {s = 104;}

				else if (((LA35_1>='\u0A8F' && LA35_1<='\u0A91'))) {s = 105;}

				else if (((LA35_1>='\u0A93' && LA35_1<='\u0AA8'))) {s = 106;}

				else if (((LA35_1>='\u0AAA' && LA35_1<='\u0AB0'))) {s = 107;}

				else if (((LA35_1>='\u0AB2' && LA35_1<='\u0AB3'))) {s = 108;}

				else if (((LA35_1>='\u0AB5' && LA35_1<='\u0AB9'))) {s = 109;}

				else if ((LA35_1=='\u0ABD')) {s = 110;}

				else if ((LA35_1=='\u0AD0')) {s = 111;}

				else if (((LA35_1>='\u0AE0' && LA35_1<='\u0AE1'))) {s = 112;}

				else if ((LA35_1=='\u0AF1')) {s = 113;}

				else if (((LA35_1>='\u0B05' && LA35_1<='\u0B0C'))) {s = 114;}

				else if (((LA35_1>='\u0B0F' && LA35_1<='\u0B10'))) {s = 115;}

				else if (((LA35_1>='\u0B13' && LA35_1<='\u0B28'))) {s = 116;}

				else if (((LA35_1>='\u0B2A' && LA35_1<='\u0B30'))) {s = 117;}

				else if (((LA35_1>='\u0B32' && LA35_1<='\u0B33'))) {s = 118;}

				else if (((LA35_1>='\u0B35' && LA35_1<='\u0B39'))) {s = 119;}

				else if ((LA35_1=='\u0B3D')) {s = 120;}

				else if (((LA35_1>='\u0B5C' && LA35_1<='\u0B5D'))) {s = 121;}

				else if (((LA35_1>='\u0B5F' && LA35_1<='\u0B61'))) {s = 122;}

				else if ((LA35_1=='\u0B71')) {s = 123;}

				else if ((LA35_1=='\u0B83')) {s = 124;}

				else if (((LA35_1>='\u0B85' && LA35_1<='\u0B8A'))) {s = 125;}

				else if (((LA35_1>='\u0B8E' && LA35_1<='\u0B90'))) {s = 126;}

				else if (((LA35_1>='\u0B92' && LA35_1<='\u0B95'))) {s = 127;}

				else if (((LA35_1>='\u0B99' && LA35_1<='\u0B9A'))) {s = 128;}

				else if ((LA35_1=='\u0B9C')) {s = 129;}

				else if (((LA35_1>='\u0B9E' && LA35_1<='\u0B9F'))) {s = 130;}

				else if (((LA35_1>='\u0BA3' && LA35_1<='\u0BA4'))) {s = 131;}

				else if (((LA35_1>='\u0BA8' && LA35_1<='\u0BAA'))) {s = 132;}

				else if (((LA35_1>='\u0BAE' && LA35_1<='\u0BB5'))) {s = 133;}

				else if (((LA35_1>='\u0BB7' && LA35_1<='\u0BB9'))) {s = 134;}

				else if ((LA35_1=='\u0BF9')) {s = 135;}

				else if (((LA35_1>='\u0C05' && LA35_1<='\u0C0C'))) {s = 136;}

				else if (((LA35_1>='\u0C0E' && LA35_1<='\u0C10'))) {s = 137;}

				else if (((LA35_1>='\u0C12' && LA35_1<='\u0C28'))) {s = 138;}

				else if (((LA35_1>='\u0C2A' && LA35_1<='\u0C33'))) {s = 139;}

				else if (((LA35_1>='\u0C35' && LA35_1<='\u0C39'))) {s = 140;}

				else if (((LA35_1>='\u0C60' && LA35_1<='\u0C61'))) {s = 141;}

				else if (((LA35_1>='\u0C85' && LA35_1<='\u0C8C'))) {s = 142;}

				else if (((LA35_1>='\u0C8E' && LA35_1<='\u0C90'))) {s = 143;}

				else if (((LA35_1>='\u0C92' && LA35_1<='\u0CA8'))) {s = 144;}

				else if (((LA35_1>='\u0CAA' && LA35_1<='\u0CB3'))) {s = 145;}

				else if (((LA35_1>='\u0CB5' && LA35_1<='\u0CB9'))) {s = 146;}

				else if ((LA35_1=='\u0CBD')) {s = 147;}

				else if ((LA35_1=='\u0CDE')) {s = 148;}

				else if (((LA35_1>='\u0CE0' && LA35_1<='\u0CE1'))) {s = 149;}

				else if (((LA35_1>='\u0D05' && LA35_1<='\u0D0C'))) {s = 150;}

				else if (((LA35_1>='\u0D0E' && LA35_1<='\u0D10'))) {s = 151;}

				else if (((LA35_1>='\u0D12' && LA35_1<='\u0D28'))) {s = 152;}

				else if (((LA35_1>='\u0D2A' && LA35_1<='\u0D39'))) {s = 153;}

				else if (((LA35_1>='\u0D60' && LA35_1<='\u0D61'))) {s = 154;}

				else if (((LA35_1>='\u0D85' && LA35_1<='\u0D96'))) {s = 155;}

				else if (((LA35_1>='\u0D9A' && LA35_1<='\u0DB1'))) {s = 156;}

				else if (((LA35_1>='\u0DB3' && LA35_1<='\u0DBB'))) {s = 157;}

				else if ((LA35_1=='\u0DBD')) {s = 158;}

				else if (((LA35_1>='\u0DC0' && LA35_1<='\u0DC6'))) {s = 159;}

				else if (((LA35_1>='\u0E01' && LA35_1<='\u0E30'))) {s = 160;}

				else if (((LA35_1>='\u0E32' && LA35_1<='\u0E33'))) {s = 161;}

				else if (((LA35_1>='\u0E3F' && LA35_1<='\u0E46'))) {s = 162;}

				else if (((LA35_1>='\u0E81' && LA35_1<='\u0E82'))) {s = 163;}

				else if ((LA35_1=='\u0E84')) {s = 164;}

				else if (((LA35_1>='\u0E87' && LA35_1<='\u0E88'))) {s = 165;}

				else if ((LA35_1=='\u0E8A')) {s = 166;}

				else if ((LA35_1=='\u0E8D')) {s = 167;}

				else if (((LA35_1>='\u0E94' && LA35_1<='\u0E97'))) {s = 168;}

				else if (((LA35_1>='\u0E99' && LA35_1<='\u0E9F'))) {s = 169;}

				else if (((LA35_1>='\u0EA1' && LA35_1<='\u0EA3'))) {s = 170;}

				else if ((LA35_1=='\u0EA5')) {s = 171;}

				else if ((LA35_1=='\u0EA7')) {s = 172;}

				else if (((LA35_1>='\u0EAA' && LA35_1<='\u0EAB'))) {s = 173;}

				else if (((LA35_1>='\u0EAD' && LA35_1<='\u0EB0'))) {s = 174;}

				else if (((LA35_1>='\u0EB2' && LA35_1<='\u0EB3'))) {s = 175;}

				else if ((LA35_1=='\u0EBD')) {s = 176;}

				else if (((LA35_1>='\u0EC0' && LA35_1<='\u0EC4'))) {s = 177;}

				else if ((LA35_1=='\u0EC6')) {s = 178;}

				else if (((LA35_1>='\u0EDC' && LA35_1<='\u0EDD'))) {s = 179;}

				else if ((LA35_1=='\u0F00')) {s = 180;}

				else if (((LA35_1>='\u0F40' && LA35_1<='\u0F47'))) {s = 181;}

				else if (((LA35_1>='\u0F49' && LA35_1<='\u0F6A'))) {s = 182;}

				else if (((LA35_1>='\u0F88' && LA35_1<='\u0F8B'))) {s = 183;}

				else if (((LA35_1>='\u1000' && LA35_1<='\u1021'))) {s = 184;}

				else if (((LA35_1>='\u1023' && LA35_1<='\u1027'))) {s = 185;}

				else if (((LA35_1>='\u1029' && LA35_1<='\u102A'))) {s = 186;}

				else if (((LA35_1>='\u1050' && LA35_1<='\u1055'))) {s = 187;}

				else if (((LA35_1>='\u10A0' && LA35_1<='\u10C5'))) {s = 188;}

				else if (((LA35_1>='\u10D0' && LA35_1<='\u10F8'))) {s = 189;}

				else if (((LA35_1>='\u1100' && LA35_1<='\u1159'))) {s = 190;}

				else if (((LA35_1>='\u115F' && LA35_1<='\u11A2'))) {s = 191;}

				else if (((LA35_1>='\u11A8' && LA35_1<='\u11F9'))) {s = 192;}

				else if (((LA35_1>='\u1200' && LA35_1<='\u1206'))) {s = 193;}

				else if (((LA35_1>='\u1208' && LA35_1<='\u1246'))) {s = 194;}

				else if ((LA35_1=='\u1248')) {s = 195;}

				else if (((LA35_1>='\u124A' && LA35_1<='\u124D'))) {s = 196;}

				else if (((LA35_1>='\u1250' && LA35_1<='\u1256'))) {s = 197;}

				else if ((LA35_1=='\u1258')) {s = 198;}

				else if (((LA35_1>='\u125A' && LA35_1<='\u125D'))) {s = 199;}

				else if (((LA35_1>='\u1260' && LA35_1<='\u1286'))) {s = 200;}

				else if ((LA35_1=='\u1288')) {s = 201;}

				else if (((LA35_1>='\u128A' && LA35_1<='\u128D'))) {s = 202;}

				else if (((LA35_1>='\u1290' && LA35_1<='\u12AE'))) {s = 203;}

				else if ((LA35_1=='\u12B0')) {s = 204;}

				else if (((LA35_1>='\u12B2' && LA35_1<='\u12B5'))) {s = 205;}

				else if (((LA35_1>='\u12B8' && LA35_1<='\u12BE'))) {s = 206;}

				else if ((LA35_1=='\u12C0')) {s = 207;}

				else if (((LA35_1>='\u12C2' && LA35_1<='\u12C5'))) {s = 208;}

				else if (((LA35_1>='\u12C8' && LA35_1<='\u12CE'))) {s = 209;}

				else if (((LA35_1>='\u12D0' && LA35_1<='\u12D6'))) {s = 210;}

				else if (((LA35_1>='\u12D8' && LA35_1<='\u12EE'))) {s = 211;}

				else if (((LA35_1>='\u12F0' && LA35_1<='\u130E'))) {s = 212;}

				else if ((LA35_1=='\u1310')) {s = 213;}

				else if (((LA35_1>='\u1312' && LA35_1<='\u1315'))) {s = 214;}

				else if (((LA35_1>='\u1318' && LA35_1<='\u131E'))) {s = 215;}

				else if (((LA35_1>='\u1320' && LA35_1<='\u1346'))) {s = 216;}

				else if (((LA35_1>='\u1348' && LA35_1<='\u135A'))) {s = 217;}

				else if (((LA35_1>='\u13A0' && LA35_1<='\u13F4'))) {s = 218;}

				else if (((LA35_1>='\u1401' && LA35_1<='\u166C'))) {s = 219;}

				else if (((LA35_1>='\u166F' && LA35_1<='\u1676'))) {s = 220;}

				else if (((LA35_1>='\u1681' && LA35_1<='\u169A'))) {s = 221;}

				else if (((LA35_1>='\u16A0' && LA35_1<='\u16EA'))) {s = 222;}

				else if (((LA35_1>='\u16EE' && LA35_1<='\u16F0'))) {s = 223;}

				else if (((LA35_1>='\u1700' && LA35_1<='\u170C'))) {s = 224;}

				else if (((LA35_1>='\u170E' && LA35_1<='\u1711'))) {s = 225;}

				else if (((LA35_1>='\u1720' && LA35_1<='\u1731'))) {s = 226;}

				else if (((LA35_1>='\u1740' && LA35_1<='\u1751'))) {s = 227;}

				else if (((LA35_1>='\u1760' && LA35_1<='\u176C'))) {s = 228;}

				else if (((LA35_1>='\u176E' && LA35_1<='\u1770'))) {s = 229;}

				else if (((LA35_1>='\u1780' && LA35_1<='\u17B3'))) {s = 230;}

				else if ((LA35_1=='\u17D7')) {s = 231;}

				else if (((LA35_1>='\u17DB' && LA35_1<='\u17DC'))) {s = 232;}

				else if (((LA35_1>='\u1820' && LA35_1<='\u1877'))) {s = 233;}

				else if (((LA35_1>='\u1880' && LA35_1<='\u18A8'))) {s = 234;}

				else if (((LA35_1>='\u1900' && LA35_1<='\u191C'))) {s = 235;}

				else if (((LA35_1>='\u1950' && LA35_1<='\u196D'))) {s = 236;}

				else if (((LA35_1>='\u1970' && LA35_1<='\u1974'))) {s = 237;}

				else if (((LA35_1>='\u1D00' && LA35_1<='\u1D6B'))) {s = 238;}

				else if (((LA35_1>='\u1E00' && LA35_1<='\u1E9B'))) {s = 239;}

				else if (((LA35_1>='\u1EA0' && LA35_1<='\u1EF9'))) {s = 240;}

				else if (((LA35_1>='\u1F00' && LA35_1<='\u1F15'))) {s = 241;}

				else if (((LA35_1>='\u1F18' && LA35_1<='\u1F1D'))) {s = 242;}

				else if (((LA35_1>='\u1F20' && LA35_1<='\u1F45'))) {s = 243;}

				else if (((LA35_1>='\u1F48' && LA35_1<='\u1F4D'))) {s = 244;}

				else if (((LA35_1>='\u1F50' && LA35_1<='\u1F57'))) {s = 245;}

				else if ((LA35_1=='\u1F59')) {s = 246;}

				else if ((LA35_1=='\u1F5B')) {s = 247;}

				else if ((LA35_1=='\u1F5D')) {s = 248;}

				else if (((LA35_1>='\u1F5F' && LA35_1<='\u1F7D'))) {s = 249;}

				else if (((LA35_1>='\u1F80' && LA35_1<='\u1FB4'))) {s = 250;}

				else if (((LA35_1>='\u1FB6' && LA35_1<='\u1FBC'))) {s = 251;}

				else if ((LA35_1=='\u1FBE')) {s = 252;}

				else if (((LA35_1>='\u1FC2' && LA35_1<='\u1FC4'))) {s = 253;}

				else if (((LA35_1>='\u1FC6' && LA35_1<='\u1FCC'))) {s = 254;}

				else if (((LA35_1>='\u1FD0' && LA35_1<='\u1FD3'))) {s = 255;}

				else if (((LA35_1>='\u1FD6' && LA35_1<='\u1FDB'))) {s = 256;}

				else if (((LA35_1>='\u1FE0' && LA35_1<='\u1FEC'))) {s = 257;}

				else if (((LA35_1>='\u1FF2' && LA35_1<='\u1FF4'))) {s = 258;}

				else if (((LA35_1>='\u1FF6' && LA35_1<='\u1FFC'))) {s = 259;}

				else if (((LA35_1>='\u203F' && LA35_1<='\u2040'))) {s = 260;}

				else if ((LA35_1=='\u2054')) {s = 261;}

				else if ((LA35_1=='\u2071')) {s = 262;}

				else if ((LA35_1=='\u207F')) {s = 263;}

				else if (((LA35_1>='\u20A0' && LA35_1<='\u20B1'))) {s = 264;}

				else if ((LA35_1=='\u2102')) {s = 265;}

				else if ((LA35_1=='\u2107')) {s = 266;}

				else if (((LA35_1>='\u210A' && LA35_1<='\u2113'))) {s = 267;}

				else if ((LA35_1=='\u2115')) {s = 268;}

				else if (((LA35_1>='\u2119' && LA35_1<='\u211D'))) {s = 269;}

				else if ((LA35_1=='\u2124')) {s = 270;}

				else if ((LA35_1=='\u2126')) {s = 271;}

				else if ((LA35_1=='\u2128')) {s = 272;}

				else if (((LA35_1>='\u212A' && LA35_1<='\u212D'))) {s = 273;}

				else if (((LA35_1>='\u212F' && LA35_1<='\u2131'))) {s = 274;}

				else if (((LA35_1>='\u2133' && LA35_1<='\u2139'))) {s = 275;}

				else if (((LA35_1>='\u213D' && LA35_1<='\u213F'))) {s = 276;}

				else if (((LA35_1>='\u2145' && LA35_1<='\u2149'))) {s = 277;}

				else if (((LA35_1>='\u2160' && LA35_1<='\u2183'))) {s = 278;}

				else if (((LA35_1>='\u3005' && LA35_1<='\u3007'))) {s = 279;}

				else if (((LA35_1>='\u3021' && LA35_1<='\u3029'))) {s = 280;}

				else if (((LA35_1>='\u3031' && LA35_1<='\u3035'))) {s = 281;}

				else if (((LA35_1>='\u3038' && LA35_1<='\u303C'))) {s = 282;}

				else if (((LA35_1>='\u3041' && LA35_1<='\u3096'))) {s = 283;}

				else if (((LA35_1>='\u309D' && LA35_1<='\u309F'))) {s = 284;}

				else if (((LA35_1>='\u30A1' && LA35_1<='\u30FF'))) {s = 285;}

				else if (((LA35_1>='\u3105' && LA35_1<='\u312C'))) {s = 286;}

				else if (((LA35_1>='\u3131' && LA35_1<='\u318E'))) {s = 287;}

				else if (((LA35_1>='\u31A0' && LA35_1<='\u31B7'))) {s = 288;}

				else if (((LA35_1>='\u31F0' && LA35_1<='\u31FF'))) {s = 289;}

				else if (((LA35_1>='\u3400' && LA35_1<='\u4DB5'))) {s = 290;}

				else if (((LA35_1>='\u4E00' && LA35_1<='\u9FA5'))) {s = 291;}

				else if (((LA35_1>='\uA000' && LA35_1<='\uA48C'))) {s = 292;}

				else if (((LA35_1>='\uAC00' && LA35_1<='\uD7A3'))) {s = 293;}

				else if (((LA35_1>='\uF900' && LA35_1<='\uFA2D'))) {s = 294;}

				else if (((LA35_1>='\uFA30' && LA35_1<='\uFA6A'))) {s = 295;}

				else if (((LA35_1>='\uFB00' && LA35_1<='\uFB06'))) {s = 296;}

				else if (((LA35_1>='\uFB13' && LA35_1<='\uFB17'))) {s = 297;}

				else if ((LA35_1=='\uFB1D')) {s = 298;}

				else if (((LA35_1>='\uFB1F' && LA35_1<='\uFB28'))) {s = 299;}

				else if (((LA35_1>='\uFB2A' && LA35_1<='\uFB36'))) {s = 300;}

				else if (((LA35_1>='\uFB38' && LA35_1<='\uFB3C'))) {s = 301;}

				else if ((LA35_1=='\uFB3E')) {s = 302;}

				else if (((LA35_1>='\uFB40' && LA35_1<='\uFB41'))) {s = 303;}

				else if (((LA35_1>='\uFB43' && LA35_1<='\uFB44'))) {s = 304;}

				else if (((LA35_1>='\uFB46' && LA35_1<='\uFBB1'))) {s = 305;}

				else if (((LA35_1>='\uFBD3' && LA35_1<='\uFD3D'))) {s = 306;}

				else if (((LA35_1>='\uFD50' && LA35_1<='\uFD8F'))) {s = 307;}

				else if (((LA35_1>='\uFD92' && LA35_1<='\uFDC7'))) {s = 308;}

				else if (((LA35_1>='\uFDF0' && LA35_1<='\uFDFC'))) {s = 309;}

				else if (((LA35_1>='\uFE33' && LA35_1<='\uFE34'))) {s = 310;}

				else if (((LA35_1>='\uFE4D' && LA35_1<='\uFE4F'))) {s = 311;}

				else if ((LA35_1=='\uFE69')) {s = 312;}

				else if (((LA35_1>='\uFE70' && LA35_1<='\uFE74'))) {s = 313;}

				else if (((LA35_1>='\uFE76' && LA35_1<='\uFEFC'))) {s = 314;}

				else if ((LA35_1=='\uFF04')) {s = 315;}

				else if (((LA35_1>='\uFF21' && LA35_1<='\uFF3A'))) {s = 316;}

				else if ((LA35_1=='\uFF3F')) {s = 317;}

				else if (((LA35_1>='\uFF41' && LA35_1<='\uFF5A'))) {s = 318;}

				else if (((LA35_1>='\uFF65' && LA35_1<='\uFFBE'))) {s = 319;}

				else if (((LA35_1>='\uFFC2' && LA35_1<='\uFFC7'))) {s = 320;}

				else if (((LA35_1>='\uFFCA' && LA35_1<='\uFFCF'))) {s = 321;}

				else if (((LA35_1>='\uFFD2' && LA35_1<='\uFFD7'))) {s = 322;}

				else if (((LA35_1>='\uFFDA' && LA35_1<='\uFFDC'))) {s = 323;}

				else if (((LA35_1>='\uFFE0' && LA35_1<='\uFFE1'))) {s = 324;}

				else if (((LA35_1>='\uFFE5' && LA35_1<='\uFFE6'))) {s = 325;}

				else if (((LA35_1>='\uD800' && LA35_1<='\uDBFF'))) {s = 326;}

				else if (((LA35_1>='\u0000' && LA35_1<='\b')||LA35_1=='\u000B'||(LA35_1>='\u000E' && LA35_1<='\u001F')||LA35_1=='#'||LA35_1=='\\'||LA35_1=='`'||(LA35_1>='\u007F' && LA35_1<='\u00A1')||(LA35_1>='\u00A6' && LA35_1<='\u00A9')||(LA35_1>='\u00AB' && LA35_1<='\u00B4')||(LA35_1>='\u00B6' && LA35_1<='\u00B9')||(LA35_1>='\u00BB' && LA35_1<='\u00BF')||LA35_1=='\u00D7'||LA35_1=='\u00F7'||(LA35_1>='\u0237' && LA35_1<='\u024F')||(LA35_1>='\u02C2' && LA35_1<='\u02C5')||(LA35_1>='\u02D2' && LA35_1<='\u02DF')||(LA35_1>='\u02E5' && LA35_1<='\u02ED')||(LA35_1>='\u02EF' && LA35_1<='\u0379')||(LA35_1>='\u037B' && LA35_1<='\u0385')||LA35_1=='\u0387'||LA35_1=='\u038B'||LA35_1=='\u038D'||LA35_1=='\u03A2'||LA35_1=='\u03CF'||LA35_1=='\u03F6'||(LA35_1>='\u03FC' && LA35_1<='\u03FF')||(LA35_1>='\u0482' && LA35_1<='\u0489')||LA35_1=='\u04CF'||(LA35_1>='\u04F6' && LA35_1<='\u04F7')||(LA35_1>='\u04FA' && LA35_1<='\u04FF')||(LA35_1>='\u0510' && LA35_1<='\u0530')||(LA35_1>='\u0557' && LA35_1<='\u0558')||(LA35_1>='\u055A' && LA35_1<='\u0560')||(LA35_1>='\u0588' && LA35_1<='\u05CF')||(LA35_1>='\u05EB' && LA35_1<='\u05EF')||(LA35_1>='\u05F3' && LA35_1<='\u0620')||(LA35_1>='\u063B' && LA35_1<='\u063F')||(LA35_1>='\u064B' && LA35_1<='\u066D')||LA35_1=='\u0670'||LA35_1=='\u06D4'||(LA35_1>='\u06D6' && LA35_1<='\u06E4')||(LA35_1>='\u06E7' && LA35_1<='\u06ED')||(LA35_1>='\u06F0' && LA35_1<='\u06F9')||(LA35_1>='\u06FD' && LA35_1<='\u06FE')||(LA35_1>='\u0700' && LA35_1<='\u070F')||LA35_1=='\u0711'||(LA35_1>='\u0730' && LA35_1<='\u074C')||(LA35_1>='\u0750' && LA35_1<='\u077F')||(LA35_1>='\u07A6' && LA35_1<='\u07B0')||(LA35_1>='\u07B2' && LA35_1<='\u0903')||(LA35_1>='\u093A' && LA35_1<='\u093C')||(LA35_1>='\u093E' && LA35_1<='\u094F')||(LA35_1>='\u0951' && LA35_1<='\u0957')||(LA35_1>='\u0962' && LA35_1<='\u0984')||(LA35_1>='\u098D' && LA35_1<='\u098E')||(LA35_1>='\u0991' && LA35_1<='\u0992')||LA35_1=='\u09A9'||LA35_1=='\u09B1'||(LA35_1>='\u09B3' && LA35_1<='\u09B5')||(LA35_1>='\u09BA' && LA35_1<='\u09BC')||(LA35_1>='\u09BE' && LA35_1<='\u09DB')||LA35_1=='\u09DE'||(LA35_1>='\u09E2' && LA35_1<='\u09EF')||(LA35_1>='\u09F4' && LA35_1<='\u0A04')||(LA35_1>='\u0A0B' && LA35_1<='\u0A0E')||(LA35_1>='\u0A11' && LA35_1<='\u0A12')||LA35_1=='\u0A29'||LA35_1=='\u0A31'||LA35_1=='\u0A34'||LA35_1=='\u0A37'||(LA35_1>='\u0A3A' && LA35_1<='\u0A58')||LA35_1=='\u0A5D'||(LA35_1>='\u0A5F' && LA35_1<='\u0A71')||(LA35_1>='\u0A75' && LA35_1<='\u0A84')||LA35_1=='\u0A8E'||LA35_1=='\u0A92'||LA35_1=='\u0AA9'||LA35_1=='\u0AB1'||LA35_1=='\u0AB4'||(LA35_1>='\u0ABA' && LA35_1<='\u0ABC')||(LA35_1>='\u0ABE' && LA35_1<='\u0ACF')||(LA35_1>='\u0AD1' && LA35_1<='\u0ADF')||(LA35_1>='\u0AE2' && LA35_1<='\u0AF0')||(LA35_1>='\u0AF2' && LA35_1<='\u0B04')||(LA35_1>='\u0B0D' && LA35_1<='\u0B0E')||(LA35_1>='\u0B11' && LA35_1<='\u0B12')||LA35_1=='\u0B29'||LA35_1=='\u0B31'||LA35_1=='\u0B34'||(LA35_1>='\u0B3A' && LA35_1<='\u0B3C')||(LA35_1>='\u0B3E' && LA35_1<='\u0B5B')||LA35_1=='\u0B5E'||(LA35_1>='\u0B62' && LA35_1<='\u0B70')||(LA35_1>='\u0B72' && LA35_1<='\u0B82')||LA35_1=='\u0B84'||(LA35_1>='\u0B8B' && LA35_1<='\u0B8D')||LA35_1=='\u0B91'||(LA35_1>='\u0B96' && LA35_1<='\u0B98')||LA35_1=='\u0B9B'||LA35_1=='\u0B9D'||(LA35_1>='\u0BA0' && LA35_1<='\u0BA2')||(LA35_1>='\u0BA5' && LA35_1<='\u0BA7')||(LA35_1>='\u0BAB' && LA35_1<='\u0BAD')||LA35_1=='\u0BB6'||(LA35_1>='\u0BBA' && LA35_1<='\u0BF8')||(LA35_1>='\u0BFA' && LA35_1<='\u0C04')||LA35_1=='\u0C0D'||LA35_1=='\u0C11'||LA35_1=='\u0C29'||LA35_1=='\u0C34'||(LA35_1>='\u0C3A' && LA35_1<='\u0C5F')||(LA35_1>='\u0C62' && LA35_1<='\u0C84')||LA35_1=='\u0C8D'||LA35_1=='\u0C91'||LA35_1=='\u0CA9'||LA35_1=='\u0CB4'||(LA35_1>='\u0CBA' && LA35_1<='\u0CBC')||(LA35_1>='\u0CBE' && LA35_1<='\u0CDD')||LA35_1=='\u0CDF'||(LA35_1>='\u0CE2' && LA35_1<='\u0D04')||LA35_1=='\u0D0D'||LA35_1=='\u0D11'||LA35_1=='\u0D29'||(LA35_1>='\u0D3A' && LA35_1<='\u0D5F')||(LA35_1>='\u0D62' && LA35_1<='\u0D84')||(LA35_1>='\u0D97' && LA35_1<='\u0D99')||LA35_1=='\u0DB2'||LA35_1=='\u0DBC'||(LA35_1>='\u0DBE' && LA35_1<='\u0DBF')||(LA35_1>='\u0DC7' && LA35_1<='\u0E00')||LA35_1=='\u0E31'||(LA35_1>='\u0E34' && LA35_1<='\u0E3E')||(LA35_1>='\u0E47' && LA35_1<='\u0E80')||LA35_1=='\u0E83'||(LA35_1>='\u0E85' && LA35_1<='\u0E86')||LA35_1=='\u0E89'||(LA35_1>='\u0E8B' && LA35_1<='\u0E8C')||(LA35_1>='\u0E8E' && LA35_1<='\u0E93')||LA35_1=='\u0E98'||LA35_1=='\u0EA0'||LA35_1=='\u0EA4'||LA35_1=='\u0EA6'||(LA35_1>='\u0EA8' && LA35_1<='\u0EA9')||LA35_1=='\u0EAC'||LA35_1=='\u0EB1'||(LA35_1>='\u0EB4' && LA35_1<='\u0EBC')||(LA35_1>='\u0EBE' && LA35_1<='\u0EBF')||LA35_1=='\u0EC5'||(LA35_1>='\u0EC7' && LA35_1<='\u0EDB')||(LA35_1>='\u0EDE' && LA35_1<='\u0EFF')||(LA35_1>='\u0F01' && LA35_1<='\u0F3F')||LA35_1=='\u0F48'||(LA35_1>='\u0F6B' && LA35_1<='\u0F87')||(LA35_1>='\u0F8C' && LA35_1<='\u0FFF')||LA35_1=='\u1022'||LA35_1=='\u1028'||(LA35_1>='\u102B' && LA35_1<='\u104F')||(LA35_1>='\u1056' && LA35_1<='\u109F')||(LA35_1>='\u10C6' && LA35_1<='\u10CF')||(LA35_1>='\u10F9' && LA35_1<='\u10FF')||(LA35_1>='\u115A' && LA35_1<='\u115E')||(LA35_1>='\u11A3' && LA35_1<='\u11A7')||(LA35_1>='\u11FA' && LA35_1<='\u11FF')||LA35_1=='\u1207'||LA35_1=='\u1247'||LA35_1=='\u1249'||(LA35_1>='\u124E' && LA35_1<='\u124F')||LA35_1=='\u1257'||LA35_1=='\u1259'||(LA35_1>='\u125E' && LA35_1<='\u125F')||LA35_1=='\u1287'||LA35_1=='\u1289'||(LA35_1>='\u128E' && LA35_1<='\u128F')||LA35_1=='\u12AF'||LA35_1=='\u12B1'||(LA35_1>='\u12B6' && LA35_1<='\u12B7')||LA35_1=='\u12BF'||LA35_1=='\u12C1'||(LA35_1>='\u12C6' && LA35_1<='\u12C7')||LA35_1=='\u12CF'||LA35_1=='\u12D7'||LA35_1=='\u12EF'||LA35_1=='\u130F'||LA35_1=='\u1311'||(LA35_1>='\u1316' && LA35_1<='\u1317')||LA35_1=='\u131F'||LA35_1=='\u1347'||(LA35_1>='\u135B' && LA35_1<='\u139F')||(LA35_1>='\u13F5' && LA35_1<='\u1400')||(LA35_1>='\u166D' && LA35_1<='\u166E')||(LA35_1>='\u1677' && LA35_1<='\u1680')||(LA35_1>='\u169B' && LA35_1<='\u169F')||(LA35_1>='\u16EB' && LA35_1<='\u16ED')||(LA35_1>='\u16F1' && LA35_1<='\u16FF')||LA35_1=='\u170D'||(LA35_1>='\u1712' && LA35_1<='\u171F')||(LA35_1>='\u1732' && LA35_1<='\u173F')||(LA35_1>='\u1752' && LA35_1<='\u175F')||LA35_1=='\u176D'||(LA35_1>='\u1771' && LA35_1<='\u177F')||(LA35_1>='\u17B4' && LA35_1<='\u17D6')||(LA35_1>='\u17D8' && LA35_1<='\u17DA')||(LA35_1>='\u17DD' && LA35_1<='\u181F')||(LA35_1>='\u1878' && LA35_1<='\u187F')||(LA35_1>='\u18A9' && LA35_1<='\u18FF')||(LA35_1>='\u191D' && LA35_1<='\u194F')||(LA35_1>='\u196E' && LA35_1<='\u196F')||(LA35_1>='\u1975' && LA35_1<='\u1CFF')||(LA35_1>='\u1D6C' && LA35_1<='\u1DFF')||(LA35_1>='\u1E9C' && LA35_1<='\u1E9F')||(LA35_1>='\u1EFA' && LA35_1<='\u1EFF')||(LA35_1>='\u1F16' && LA35_1<='\u1F17')||(LA35_1>='\u1F1E' && LA35_1<='\u1F1F')||(LA35_1>='\u1F46' && LA35_1<='\u1F47')||(LA35_1>='\u1F4E' && LA35_1<='\u1F4F')||LA35_1=='\u1F58'||LA35_1=='\u1F5A'||LA35_1=='\u1F5C'||LA35_1=='\u1F5E'||(LA35_1>='\u1F7E' && LA35_1<='\u1F7F')||LA35_1=='\u1FB5'||LA35_1=='\u1FBD'||(LA35_1>='\u1FBF' && LA35_1<='\u1FC1')||LA35_1=='\u1FC5'||(LA35_1>='\u1FCD' && LA35_1<='\u1FCF')||(LA35_1>='\u1FD4' && LA35_1<='\u1FD5')||(LA35_1>='\u1FDC' && LA35_1<='\u1FDF')||(LA35_1>='\u1FED' && LA35_1<='\u1FF1')||LA35_1=='\u1FF5'||(LA35_1>='\u1FFD' && LA35_1<='\u203E')||(LA35_1>='\u2041' && LA35_1<='\u2053')||(LA35_1>='\u2055' && LA35_1<='\u2070')||(LA35_1>='\u2072' && LA35_1<='\u207E')||(LA35_1>='\u2080' && LA35_1<='\u209F')||(LA35_1>='\u20B2' && LA35_1<='\u2101')||(LA35_1>='\u2103' && LA35_1<='\u2106')||(LA35_1>='\u2108' && LA35_1<='\u2109')||LA35_1=='\u2114'||(LA35_1>='\u2116' && LA35_1<='\u2118')||(LA35_1>='\u211E' && LA35_1<='\u2123')||LA35_1=='\u2125'||LA35_1=='\u2127'||LA35_1=='\u2129'||LA35_1=='\u212E'||LA35_1=='\u2132'||(LA35_1>='\u213A' && LA35_1<='\u213C')||(LA35_1>='\u2140' && LA35_1<='\u2144')||(LA35_1>='\u214A' && LA35_1<='\u215F')||(LA35_1>='\u2184' && LA35_1<='\u3004')||(LA35_1>='\u3008' && LA35_1<='\u3020')||(LA35_1>='\u302A' && LA35_1<='\u3030')||(LA35_1>='\u3036' && LA35_1<='\u3037')||(LA35_1>='\u303D' && LA35_1<='\u3040')||(LA35_1>='\u3097' && LA35_1<='\u309C')||LA35_1=='\u30A0'||(LA35_1>='\u3100' && LA35_1<='\u3104')||(LA35_1>='\u312D' && LA35_1<='\u3130')||(LA35_1>='\u318F' && LA35_1<='\u319F')||(LA35_1>='\u31B8' && LA35_1<='\u31EF')||(LA35_1>='\u3200' && LA35_1<='\u33FF')||(LA35_1>='\u4DB6' && LA35_1<='\u4DFF')||(LA35_1>='\u9FA6' && LA35_1<='\u9FFF')||(LA35_1>='\uA48D' && LA35_1<='\uABFF')||(LA35_1>='\uD7A4' && LA35_1<='\uD7FF')||(LA35_1>='\uDC00' && LA35_1<='\uF8FF')||(LA35_1>='\uFA2E' && LA35_1<='\uFA2F')||(LA35_1>='\uFA6B' && LA35_1<='\uFAFF')||(LA35_1>='\uFB07' && LA35_1<='\uFB12')||(LA35_1>='\uFB18' && LA35_1<='\uFB1C')||LA35_1=='\uFB1E'||LA35_1=='\uFB29'||LA35_1=='\uFB37'||LA35_1=='\uFB3D'||LA35_1=='\uFB3F'||LA35_1=='\uFB42'||LA35_1=='\uFB45'||(LA35_1>='\uFBB2' && LA35_1<='\uFBD2')||(LA35_1>='\uFD3E' && LA35_1<='\uFD4F')||(LA35_1>='\uFD90' && LA35_1<='\uFD91')||(LA35_1>='\uFDC8' && LA35_1<='\uFDEF')||(LA35_1>='\uFDFD' && LA35_1<='\uFE32')||(LA35_1>='\uFE35' && LA35_1<='\uFE4C')||(LA35_1>='\uFE50' && LA35_1<='\uFE68')||(LA35_1>='\uFE6A' && LA35_1<='\uFE6F')||LA35_1=='\uFE75'||(LA35_1>='\uFEFD' && LA35_1<='\uFF03')||(LA35_1>='\uFF05' && LA35_1<='\uFF20')||(LA35_1>='\uFF3B' && LA35_1<='\uFF3E')||LA35_1=='\uFF40'||(LA35_1>='\uFF5B' && LA35_1<='\uFF64')||(LA35_1>='\uFFBF' && LA35_1<='\uFFC1')||(LA35_1>='\uFFC8' && LA35_1<='\uFFC9')||(LA35_1>='\uFFD0' && LA35_1<='\uFFD1')||(LA35_1>='\uFFD8' && LA35_1<='\uFFD9')||(LA35_1>='\uFFDD' && LA35_1<='\uFFDF')||(LA35_1>='\uFFE2' && LA35_1<='\uFFE4')||(LA35_1>='\uFFE7' && LA35_1<='\uFFFF'))) {s = 327;}

				break;
			}
		case 1:
			{
				if (((LA35_1>='\u0000' && LA35_1<='\t')||(LA35_1>='\u000B' && LA35_1<='\f')||(LA35_1>='\u000E' && LA35_1<='&')||(LA35_1>='(' && LA35_1<='\uFFFF'))) {s = 342;}

				else s = 327;

				break;
			}
		case 2:
			{
				if (((LA35_1>='\u0000' && LA35_1<='\t')||(LA35_1>='\u000B' && LA35_1<='\f')||(LA35_1>='\u000E' && LA35_1<='\uFFFF'))) {s = 343;}

				else s = 327;

				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 35, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
 
	#endregion

}
