namespace Smartmobili.VisualStudio.Core
{
    using System;

    public enum TokenKind
    {
        EndOfFile = JavaLexer.EOF,
        Abstract = JavaLexer.ABSTRACT,
        And = JavaLexer.AND,
        AndAssign = JavaLexer.AND_ASSIGN,
        Dot = JavaLexer.DOT,
        Identifier = JavaLexer.IDENT,
        MultiLineComment = JavaLexer.BLOCK_COMMENT,
        Package = JavaLexer.PACKAGE,
        

        //AnnotationInitArrayElement = JavaLexer.ANNOTATION_INIT_ARRAY_ELEMENT,
    //JavaLexer.ANNOTATION_INIT_BLOCK
    //JavaLexer.ANNOTATION_INIT_DEFAULT_KEY
    //JavaLexer.ANNOTATION_INIT_KEY_LIST
    //JavaLexer.ANNOTATION_LIST
    //JavaLexer.ANNOTATION_METHOD_DECL
    //JavaLexer.ANNOTATION_SCOPE
    //JavaLexer.ANNOTATION_TOP_LEVEL_SCOPE
    //JavaLexer.ARGUMENT_LIST
    //JavaLexer.ARRAY_DECLARATOR
    //JavaLexer.ARRAY_DECLARATOR_LIST
    //JavaLexer.ARRAY_ELEMENT_ACCESS
    //JavaLexer.ARRAY_INITIALIZER
    //JavaLexer.ASSERT
    //JavaLexer.ASSIGN
    //JavaLexer.AT
    //JavaLexer.BIT_SHIFT_RIGHT
    //JavaLexer.BIT_SHIFT_RIGHT_ASSIGN
    //JavaLexer.BLOCK_COMMENT
    //JavaLexer.BLOCK_SCOPE
    //JavaLexer.BOOLEAN
    //JavaLexer.BREAK
    //JavaLexer.BYTE
    //JavaLexer.CASE
    //JavaLexer.CAST_EXPR
    //JavaLexer.CATCH
    //JavaLexer.CATCH_CLAUSE_LIST
    //JavaLexer.CHAR
    //JavaLexer.CHARACTER_LITERAL
    //JavaLexer.CLASS=36;
    //JavaLexer.CLASS_CONSTRUCTOR_CALL=37;
    //JavaLexer.CLASS_INSTANCE_INITIALIZER=38;
    //JavaLexer.CLASS_STATIC_INITIALIZER=39;
    //JavaLexer.CLASS_TOP_LEVEL_SCOPE=40;
    //JavaLexer.COLON=41;
    //JavaLexer.COMMA=42;
    //JavaLexer.CONST=43;
    //JavaLexer.CONSTRUCTOR_DECL=44;
    //JavaLexer.CONTINUE=45;
    //JavaLexer.DEC=46;
    //JavaLexer.DECIMAL_FP_LITERAL=47;
    //JavaLexer.DECIMAL_LITERAL=48;
    //JavaLexer.DEFAULT=49;
    //JavaLexer.DIV=50;
    //JavaLexer.DIV_ASSIGN=51;
    //JavaLexer.DO=52;
    //JavaLexer.DOT=53;
    //JavaLexer.DOTSTAR=54;
    //JavaLexer.DOUBLE=55;
    //JavaLexer.ELLIPSIS=56;
    //JavaLexer.ELSE=57;
    //JavaLexer.ENUM=58;
    //JavaLexer.ENUM_TOP_LEVEL_SCOPE=59;
    //JavaLexer.EQUAL=60;
    //JavaLexer.ESCAPE_SEQUENCE=61;
    //JavaLexer.EXPONENT=62;
    //JavaLexer.EXPR=63;
    //JavaLexer.EXTENDS=64;
    //JavaLexer.EXTENDS_BOUND_LIST=65;
    //JavaLexer.EXTENDS_CLAUSE=66;
    //JavaLexer.FALSE=67;
    //JavaLexer.FINAL=68;
    //JavaLexer.FINALLY=69;
    //JavaLexer.FLOAT=70;
    //JavaLexer.FLOATING_POINT_LITERAL=71;
    //JavaLexer.FLOAT_TYPE_SUFFIX=72;
    //JavaLexer.FOR=73;
    //JavaLexer.FORMAL_PARAM_LIST=74;
    //JavaLexer.FORMAL_PARAM_STD_DECL=75;
    //JavaLexer.FORMAL_PARAM_VARARG_DECL=76;
    //JavaLexer.FOR_CONDITION=77;
    //JavaLexer.FOR_EACH=78;
    //JavaLexer.FOR_INIT=79;
    //JavaLexer.FOR_UPDATE=80;
    //JavaLexer.FUNCTION_METHOD_DECL=81;
    //JavaLexer.GENERIC_TYPE_ARG_LIST=82;
    //JavaLexer.GENERIC_TYPE_PARAM_LIST=83;
    //JavaLexer.GOTO=84;
    //JavaLexer.GREATER_OR_EQUAL=85;
    //JavaLexer.GREATER_THAN=86;
    //JavaLexer.HEXADECIMAL_FP_LITERAL=87;
    //JavaLexer.HEX_DIGIT=88;
    //JavaLexer.HEX_LITERAL=89;
    //JavaLexer.HEX_PREFIX=90;
    //JavaLexer.IDENT=91;
    //JavaLexer.IF=92;
    //JavaLexer.IMPLEMENTS=93;
    //JavaLexer.IMPLEMENTS_CLAUSE=94;
    //JavaLexer.IMPORT=95;
    //JavaLexer.INC=96;
    //JavaLexer.INSTANCEOF=97;
    //JavaLexer.INT=98;
    //JavaLexer.INTEGER_TYPE_SUFFIX=99;
    //JavaLexer.INTERFACE=100;
    //JavaLexer.INTERFACE_TOP_LEVEL_SCOPE=101;
    //JavaLexer.JAVADOC_COMMENT=102;
    //JavaLexer.JAVA_ID_PART=103;
    //JavaLexer.JAVA_ID_START=104;
    //JavaLexer.JAVA_SOURCE=105;
    //JavaLexer.LABELED_STATEMENT=106;
    //JavaLexer.LBRACK=107;
    //JavaLexer.LCURLY=108;
    //JavaLexer.LESS_OR_EQUAL=109;
    //JavaLexer.LESS_THAN=110;
    //JavaLexer.LINE_COMMENT=111;
    //JavaLexer.LOCAL_MODIFIER_LIST=112;
    //JavaLexer.LOGICAL_AND=113;
    //JavaLexer.LOGICAL_NOT=114;
    //JavaLexer.LOGICAL_OR=115;
    //JavaLexer.LONG=116;
    //JavaLexer.LPAREN=117;
    //JavaLexer.METHOD_CALL=118;
    //JavaLexer.MINUS=119;
    //JavaLexer.MINUS_ASSIGN=120;
    //JavaLexer.MOD=121;
    //JavaLexer.MODIFIER_LIST=122;
    //JavaLexer.MOD_ASSIGN=123;
    //JavaLexer.NATIVE=124;
    //JavaLexer.NEW=125;
    //JavaLexer.NL=126;
    //JavaLexer.NOT=127;
    //JavaLexer.NOT_EQUAL=128;
    //JavaLexer.NULL=129;
    //JavaLexer.OCTAL_ESCAPE=130;
    //JavaLexer.OCTAL_LITERAL=131;
    //JavaLexer.OR=132;
    //JavaLexer.OR_ASSIGN=133;
    //JavaLexer.PACKAGE=134;
    //JavaLexer.PARENTESIZED_EXPR=135;
    //JavaLexer.PLUS=136;
    //JavaLexer.PLUS_ASSIGN=137;
    //JavaLexer.POST_DEC=138;
    //JavaLexer.POST_INC=139;
    //JavaLexer.PRE_DEC=140;
    //JavaLexer.PRE_INC=141;
    //JavaLexer.PRIVATE=142;
    //JavaLexer.PROTECTED=143;
    //JavaLexer.PUBLIC=144;
    //JavaLexer.QUALIFIED_TYPE_IDENT=145;
    //JavaLexer.QUESTION=146;
    //JavaLexer.RBRACK=147;
    //JavaLexer.RCURLY=148;
    //JavaLexer.RETURN=149;
    //JavaLexer.RPAREN=150;
    //JavaLexer.SEMI=151;
    //JavaLexer.SHIFT_LEFT=152;
    //JavaLexer.SHIFT_LEFT_ASSIGN=153;
    //JavaLexer.SHIFT_RIGHT=154;
    //JavaLexer.SHIFT_RIGHT_ASSIGN=155;
    //JavaLexer.SHORT=156;
    //JavaLexer.SIGNED_INTEGER=157;
    //JavaLexer.STAR=158;
    //JavaLexer.STAR_ASSIGN=159;
    //JavaLexer.STATIC=160;
    //JavaLexer.STATIC_ARRAY_CREATOR=161;
    //JavaLexer.STRICTFP=162;
    //JavaLexer.STRING_LITERAL=163;
    //JavaLexer.SUPER=164;
    //JavaLexer.SUPER_CONSTRUCTOR_CALL=165;
    //JavaLexer.SWITCH=166;
    //JavaLexer.SWITCH_BLOCK_LABEL_LIST=167;
    //JavaLexer.SYNCHRONIZED=168;
    //JavaLexer.THIS=169;
    //JavaLexer.THIS_CONSTRUCTOR_CALL=170;
    //JavaLexer.THROW=171;
    //JavaLexer.THROWS=172;
    //JavaLexer.THROWS_CLAUSE=173;
    //JavaLexer.TRANSIENT=174;
    //JavaLexer.TRUE=175;
    //JavaLexer.TRY=176;
    //JavaLexer.TYPE=177;
    //JavaLexer.UNARY_MINUS=178;
    //JavaLexer.UNARY_PLUS=179;
    //JavaLexer.UNICODE_ESCAPE=180;
    //JavaLexer.VAR_DECLARATION=181;
    //JavaLexer.VAR_DECLARATOR=182;
    //JavaLexer.VAR_DECLARATOR_LIST=183;
    //JavaLexer.VOID=184;
    //JavaLexer.VOID_METHOD_DECL=185;
    //JavaLexer.VOLATILE=186;
    //JavaLexer.WHILE=187;
    //JavaLexer.WS=188;
    //JavaLexer.XOR=189;
    //JavaLexer.XOR_ASSIGN=190;
    }
}

